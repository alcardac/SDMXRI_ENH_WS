<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Estat.Ma.Model</name>
    </assembly>
    <members>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertDataProvider">
            <summary>
              This class contains the stored procedure INSERT_DATAPROVIDER name and parameter names and types
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.ItemProcedureBase">
            <summary>
            The item procedure base.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.IdentifiableProcedureBase">
            <summary>
              The base class for all identifiable SDMX artefacts
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.IIdentifiableProcedure">
            <summary>
                The IdentifiableProcedure interface.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.IOutputProcedure">
            <summary>
            The OutputProcedure interface.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.IProcedure">
            <summary>
                The base interface for the procedure classes.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.IProcedure.CreateCommand(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="database"/>.
            </summary>
            <param name="database">
            The database.
            </param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="database"/>.
            </returns>
            <remarks>
            The <paramref name="database"/> instance may or may not be transactional.
            </remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.IProcedure.CreateCommand(System.Data.Common.DbConnection,System.Data.Common.DbTransaction)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="connection"/> and <paramref name="transaction"/>
            </summary>
            <param name="connection">
            The connection
            </param>
            <param name="transaction">
            The transaction; otherwise set to null
            </param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="connection"/> and <paramref name="transaction"/>
            </returns>
            <remarks>
            It sets the following <see cref="T:System.Data.Common.DbCommand"/> properties <see cref="P:System.Data.Common.DbCommand.Connection"/> ,
                <see cref="P:System.Data.Common.DbCommand.Transaction"/> , <see cref="P:System.Data.Common.DbCommand.CommandType"/> and
                <see cref="P:System.Data.Common.DbCommand.CommandText"/>
            </remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.IProcedure.CreateCommandWithDefaults(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="database"/>.
            </summary>
            <param name="database">
            The database.
            </param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="database"/>.
            </returns>
            <remarks>
            The <paramref name="database"/> instance may or may not be transactional.
            </remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.IProcedure.CreateParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Data.ParameterDirection)">
            <summary>
            Create parameter for the specified <paramref name="command"/> and add it to the command
            </summary>
            <param name="command">
            The command
            </param>
            <param name="name">
            The parameter name
            </param>
            <param name="dbType">
            The type
            </param>
            <param name="direction">
            The direction
            </param>
            <returns>
            The new <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.IProcedure.CreateParameter``1(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Data.ParameterDirection,``0)">
            <summary>
            Create parameter for the specified <paramref name="command"/> and add it to the command
            </summary>
            <typeparam name="T">
            The parameter type.
            </typeparam>
            <param name="command">
            The command
            </param>
            <param name="name">
            The parameter name
            </param>
            <param name="dbType">
            The type
            </param>
            <param name="direction">
            The direction
            </param>
            <param name="value">
            The value.
            </param>
            <returns>
            The new <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.IOutputProcedure.CreateOutputParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the <c>'p_pk'</c> parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The DB command 
            </param>
            <returns>
            The parameter for <c>'p_pk'</c> parameter 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.IIdentifiableProcedure.CreateIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_id parameter for the specified <paramref name="command"/> . The parameter is added
                <paramref name="command"/>
            </summary>
            <param name="command">
            The DB command
            </param>
            <returns>
            A new instance of the p_id parameter
            </returns>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.IdentifiableProcedureBase.IdParameterName">
            <summary>
              Gets the p_id parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.IdentifiableProcedureBase._procedure">
            <summary>
            The _procedure
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.IdentifiableProcedureBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.IdentifiableProcedureBase"/> class.
            </summary>
            <param name="procedureName">
            The procedure name.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.IdentifiableProcedureBase.#ctor(Estat.Ma.Model.StoredProcedure.IOutputProcedure)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.IdentifiableProcedureBase"/> class.
            </summary>
            <param name="procedure">The procedure.</param>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.IdentifiableProcedureBase.CreateCommand(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="database"/>.
            </summary>
            <param name="database">
            The database.
            </param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="database"/>.
            </returns>
            <remarks>
            The <paramref name="database"/> instance may or may not be transactional.
            </remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.IdentifiableProcedureBase.CreateCommand(System.Data.Common.DbConnection,System.Data.Common.DbTransaction)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="connection"/> and <paramref name="transaction"/>
            </summary>
            <param name="connection">
            The connection
            </param>
            <param name="transaction">
            The transaction; otherwise set to null
            </param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="connection"/> and <paramref name="transaction"/>
            </returns>
            <remarks>
            It sets the following <see cref="T:System.Data.Common.DbCommand"/> properties <see cref="P:System.Data.Common.DbCommand.Connection"/> ,
                <see cref="P:System.Data.Common.DbCommand.Transaction"/> , <see cref="P:System.Data.Common.DbCommand.CommandType"/> and
                <see cref="P:System.Data.Common.DbCommand.CommandText"/>
            </remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.IdentifiableProcedureBase.CreateCommandWithDefaults(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="database"/>.
            </summary>
            <param name="database">
            The database.
            </param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="database"/>.
            </returns>
            <remarks>
            The <paramref name="database"/> instance may or may not be transactional.
            </remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.IdentifiableProcedureBase.CreateParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Data.ParameterDirection)">
            <summary>
            Create parameter for the specified <paramref name="command"/> and add it to the command
            </summary>
            <param name="command">
            The command
            </param>
            <param name="name">
            The parameter name
            </param>
            <param name="dbType">
            The type
            </param>
            <param name="direction">
            The direction
            </param>
            <returns>
            The new <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.IdentifiableProcedureBase.CreateParameter``1(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Data.ParameterDirection,``0)">
            <summary>
            Create parameter for the specified <paramref name="command"/> and add it to the command
            </summary>
            <typeparam name="T">
            The parameter type.
            </typeparam>
            <param name="command">
            The command
            </param>
            <param name="name">
            The parameter name
            </param>
            <param name="dbType">
            The type
            </param>
            <param name="direction">
            The direction
            </param>
            <param name="value">
            The value.
            </param>
            <returns>
            The new <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.IdentifiableProcedureBase.CreateOutputParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the <c>'p_pk'</c> parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The DB command 
            </param>
            <returns>
            The parameter for <c>'p_pk'</c> parameter 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.IdentifiableProcedureBase.CreateIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_id parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The DB command 
            </param>
            <returns>
            A new instance of the p_id parameter 
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.IdentifiableProcedureBase.IdType">
            <summary>
              Gets the p_id parameter type
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.ItemProcedureBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.ItemProcedureBase"/> class.
            </summary>
            <param name="procedureName">The procedure name.</param>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.ItemProcedureBase.CreateSchemeIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Returns the scheme identifier parameter of the specified <paramref name="command"/>. 
            If it does not exist it will add it.
            </summary>
            <param name="command">The command.</param>
            <returns>The input <see cref="T:System.Data.Common.DbParameter"/> of type <see cref="F:System.Data.DbType.Int64"/> and name <see cref="P:Estat.Ma.Model.StoredProcedure.ItemProcedureBase.SchemeParameterName"/></returns>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.ItemProcedureBase.SchemeParameterName">
            <summary>
            Gets the name of the scheme parameter.
            </summary>
            <value>
            The name of the scheme parameter.
            </value>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertDataProvider.SchemeIdParameterName">
            <summary>
              Gets the <c>p_dataprov_sch_id</c> parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertDataProvider.StoredProcedureName">
            <summary>
              Gets the INSERT_DATAPROVIDER stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertDataProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertDataProvider"/> class.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertDataProvider.SchemeParameterName">
            <summary>
            Gets the name of the scheme parameter.
            </summary>
            <value>
            The name of the scheme parameter.
            </value>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.UnionRelationsCollection">
            <summary>
            The union relations collection.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.UnionRelationsCollection._queryMetadata">
            <summary>
            The _ query metadata.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.UnionRelationsCollection.#ctor(Estat.Ma.Model.QueryEditor.IQueryMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.UnionRelationsCollection"/> class.
            </summary>
            <param name="querymetadata">
            The query metadata.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.UnionRelationsCollection.Add(Estat.Ma.Model.QueryEditor.IUnionRelation)">
            <summary>
            The add.
            </summary>
            <param name="ur">
            The ur.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.UnionRelationsCollection.GetFirstTableOfUnion">
            <summary>
            Returns the first table of union.
            </summary>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.TableInstance"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.UnionRelationsCollection.DoAdd(Estat.Ma.Model.QueryEditor.IUnionRelation)">
            <summary>
            The do add.
            </summary>
            <param name="ur">
            The ur.
            </param>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.UnionRelationsCollection.QueryMetadata">
            <summary>
            Gets the query metadata.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.RelationBase">
            <summary>
            The relation base.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.IRelationBase">
            <summary>
            The RelationBase interface.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IRelationBase.QueryMetadata">
            <summary>
                Gets the query metadata.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IRelationBase.TableInstanceFrom">
            <summary>
                Gets or sets the table instance from.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IRelationBase.TableInstanceTo">
            <summary>
                Gets or sets the table instance to.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.RelationBase._queryMetadata">
            <summary>
                The _ query metadata.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.RelationBase.#ctor(Estat.Ma.Model.QueryEditor.IQueryMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.RelationBase"/> class.
            </summary>
            <param name="querymetadata">
                The query metadata.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.RelationBase.#ctor(Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.RelationBase"/> class.
            </summary>
            <param name="tableInstance">
            The table Instance.
            </param>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.RelationBase.QueryMetadata">
            <summary>
                Gets the query metadata.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.RelationBase.TableInstanceFrom">
            <summary>
                Gets or sets the table instance from.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.RelationBase.TableInstanceTo">
            <summary>
                Gets or sets the table instance to.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase">
            <summary>
                The abstract class for <see cref="T:Estat.Ma.Model.QueryEditor.QueryMetadata"/> readers and writers.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.IQueryMetadataReaderWriter">
            <summary>
            The QueryMetadataReaderWriter interface.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.IQueryMetadataReaderWriter.Read(System.String)">
            <summary>
            Reads the specified XML string.
            </summary>
            <param name="xmlString">The XML string.</param>
            <returns>The <see cref="T:Estat.Ma.Model.QueryEditor.QueryMetadata"/></returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.IQueryMetadataReaderWriter.Write(Estat.Ma.Model.QueryEditor.IQueryMetadata)">
            <summary>
            Writes the specified query metadata.
            </summary>
            <param name="queryMetadata">The query metadata.</param>
            <returns>The XML as a string.</returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase.Read(System.String)">
            <summary>
            Reads the specified XML string.
            </summary>
            <param name="xmlString">
            The XML string.
            </param>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.QueryMetadata"/>
            </returns>
            <exception cref="T:System.Exception">
            Invalid Query Metadata XML: ColumnInstance id ' + id + ' not found
                or
                Invalid QueryMetadata XML: Relation with TableInstanceRefFrom not found
                or
                Invalid QueryMetadata XML: Relation with TableInstanceRefTo not found
                or
                Invalid QueryMetadata XML: ColumnMapping with ColumnInstanceRefFrom not found
                or
                Invalid QueryMetadata XML: ColumnMapping with ColumnInstanceRefTo not found
                or
                Invalid QueryMetadata XML: ColumnTableReference with ColumnInstanceRef not found
                or
                Invalid QueryMetadata XML: ColumnTableReference with TableInstanceRef not found
                or
                Invalid QueryMetadata XML: ColumnTableReference with ColumnInstanceRef not found
                or
                Invalid QueryMetadata XML: ColumnTableReference with ColumnInstanceRef not found
                or
                Invalid QueryMetadata XML: ColumnTableReference with ColumnInstanceRef not found
                or
                Invalid QueryMetadata XML:  AllowedValues with ColumnInstanceRef not found
                or
                Invalid QueryMetadata XML:  AllowedValues with ColumnInstanceRef not found
            </exception>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase.Write(Estat.Ma.Model.QueryEditor.IQueryMetadata)">
            <summary>
            Writes the specified query metadata.
            </summary>
            <param name="queryMetadata">
            The query metadata.
            </param>
            <returns>
            The XML as a string.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase.CreateQueryMetadata">
            <summary>
                Creates the query metadata.
            </summary>
            <returns>
                The <see cref="T:Estat.Ma.Model.QueryEditor.IQueryMetadata"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase.CreateRelation(Estat.Ma.Model.QueryEditor.IQueryMetadata,System.Xml.XmlElement,System.Collections.Generic.IDictionary{System.String,Estat.Ma.Model.QueryEditor.ITableInstance})">
            <summary>
            Creates the relation.
            </summary>
            <param name="queryMetadata">
            The query metadata.
            </param>
            <param name="relationNodeEl">
            The relation node element.
            </param>
            <param name="tableInstanceIdDict">
            The table instance id dictionary.
            </param>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.IRelation"/>
            </returns>
            <exception cref="T:System.Exception">
            Invalid QueryMetadata XML: Relation with TableInstanceRefFrom not found
                or
                Invalid QueryMetadata XML: Relation with TableInstanceRefTo not found
            </exception>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase.ReadAllowedValues(Estat.Ma.Model.QueryEditor.IQueryMetadata,System.Collections.Generic.Dictionary{System.String,Estat.Ma.Model.QueryEditor.IColumnInstance},System.Xml.XmlElement)">
            <summary>
            Reads the allowed values.
            </summary>
            <param name="queryMetadata">
            The query metadata.
            </param>
            <param name="columnInstanceIdDict">
            The column instance id dictionary.
            </param>
            <param name="allowedValuesNodeEl">
            The allowed values node element.
            </param>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.IAllowedValues"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase.ReadAllowedValues(Estat.Ma.Model.QueryEditor.ITableInstance,System.Collections.Generic.Dictionary{System.String,Estat.Ma.Model.QueryEditor.IColumnInstance},System.Xml.XmlElement)">
            <summary>
            Reads the allowed values.
            </summary>
            <param name="tableInstance">
            The table instance.
            </param>
            <param name="columnInstanceIdDict">
            The column instance id dictionary.
            </param>
            <param name="allowedValuesNodeEl">
            The allowed values node element.
            </param>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.IAllowedValues"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase.ReadAllowedValues(System.Collections.Generic.Dictionary{System.String,Estat.Ma.Model.QueryEditor.IColumnInstance},System.Xml.XmlElement,Estat.Ma.Model.QueryEditor.IAllowedValues)">
            <summary>
            Reads the allowed values.
            </summary>
            <param name="columnInstanceIdDict">
            The column instance id dictionary.
            </param>
            <param name="allowedValuesNodeEl">
            The allowed values node element.
            </param>
            <param name="allowedValues">
            The allowed values.
            </param>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.IAllowedValues"/>
            </returns>
            <exception cref="T:System.Exception">
            Invalid QueryMetadata XML:  AllowedValues with ColumnInstanceRef not found 
            </exception>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase.ReadColumnInstance(System.Xml.XmlElement,System.Collections.Generic.Dictionary{System.String,Estat.Ma.Model.QueryEditor.ITableInstance},System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            Reads the column instance.
            </summary>
            <param name="columnInstanceEl">
            The column instance element.
            </param>
            <param name="tableInstanceColumnIdDict">
            The table instance column id dictionary.
            </param>
            <param name="columnInstanceSortIndexDict">
            The column instance sort index dictionary.
            </param>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.IColumnInstance"/>
            </returns>
            <exception cref="T:System.Exception">
            Invalid Query Metadata XML: ColumnInstance id not found
            </exception>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase.ReadColumnMapping(Estat.Ma.Model.QueryEditor.IRelation,System.Collections.Generic.Dictionary{System.String,Estat.Ma.Model.QueryEditor.IColumnInstance},System.Xml.XmlElement)">
            <summary>
            Reads the column mapping.
            </summary>
            <param name="relation">The relation.</param>
            <param name="columnInstanceIdDict">The column instance id dictionary.</param>
            <param name="columnMappingNodeEl">The column mapping node element.</param>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.IColumnMapping"/>
            </returns>
            <exception cref="T:System.Exception">Invalid QueryMetadata XML: ColumnMapping with ColumnInstanceRefFrom not found
            or
            Invalid QueryMetadata XML: ColumnMapping with ColumnInstanceRefTo not found</exception>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase.ReadColumnMerging(System.Xml.XmlElement,System.Collections.Generic.Dictionary{System.String,Estat.Ma.Model.QueryEditor.IColumnInstance},Estat.Ma.Model.QueryEditor.IQueryMetadata)">
            <summary>
            Reads the column merging.
            </summary>
            <param name="columnsMergingNodeEl">The columns merging node element.</param>
            <param name="columnInstanceIdDict">The column instance id dictionary.</param>
            <param name="queryMetadata">The query metadata.</param>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.ColumnsMergingCollection"/>
            </returns>
            <exception cref="T:System.Exception">Invalid QueryMetadata XML: ColumnTableReference with ColumnInstanceRef not found
            or
            Invalid QueryMetadata XML: ColumnTableReference with ColumnInstanceRef not found
            or
            Invalid QueryMetadata XML: ColumnTableReference with ColumnInstanceRef not found</exception>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase.ReadColumnTableReference(Estat.Ma.Model.QueryEditor.IQueryMetadata,System.Collections.Generic.Dictionary{System.String,Estat.Ma.Model.QueryEditor.IColumnInstance},System.Xml.XmlElement,System.Collections.Generic.Dictionary{System.String,Estat.Ma.Model.QueryEditor.ITableInstance})">
            <summary>
            Reads the column table reference.
            </summary>
            <param name="queryMetadata">
            The query metadata.
            </param>
            <param name="columnInstanceIdDict">
            The column instance id dictionary.
            </param>
            <param name="columnTableReferenceNodeEl">
            The column table reference node element.
            </param>
            <param name="tableInstanceIdDict">
            The table instance id dictionary.
            </param>
            <exception cref="T:System.Exception">
            Invalid QueryMetadata XML: ColumnTableReference with ColumnInstanceRef not found
                or
                Invalid QueryMetadata XML: ColumnTableReference with TableInstanceRef not found
            </exception>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase.ReadCrossJoin(System.Collections.Generic.Dictionary{System.String,Estat.Ma.Model.QueryEditor.ITableInstance},System.Xml.XmlElement)">
            <summary>
            Reads the cross join.
            </summary>
            <param name="tableInstanceIdDict">
            The table instance id dictionary.
            </param>
            <param name="crossJoinEl">
            The cross join element.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase.ReadTableInstance(Estat.Ma.Model.QueryEditor.IQueryMetadata,System.Xml.XmlElement)">
            <summary>
            Reads the table instance.
            </summary>
            <param name="queryMetadata">
            The query metadata.
            </param>
            <param name="tableInstanceEl">
            The table instance element.
            </param>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.ITableInstance"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase.ReadUnion(System.Xml.XmlNode,System.Collections.Generic.Dictionary{System.String,Estat.Ma.Model.QueryEditor.ITableInstance})">
            <summary>
            Reads the union.
            </summary>
            <param name="union">
            The union.
            </param>
            <param name="tableInstanceIdDict">
            The table instance id dictionary.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase.ReadValue(System.Xml.XmlElement,Estat.Ma.Model.QueryEditor.IAllowedValues)">
            <summary>
            Reads the value.
            </summary>
            <param name="valueEl">
            The value element.
            </param>
            <param name="allowedValues">
            The allowed values.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase.WriteAllowedValues(System.Xml.XmlElement,Estat.Ma.Model.QueryEditor.IAllowedValues)">
            <summary>
            Writes the allowed values.
            </summary>
            <param name="allowedValuesNode">
            The allowed values node.
            </param>
            <param name="allowedValues">
            The allowed values.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase.WriteColumnInstance(System.Xml.XmlElement,Estat.Ma.Model.QueryEditor.IColumnInstance)">
            <summary>
            Writes the column instance.
            </summary>
            <param name="columnInstanceNode">
            The column instance node.
            </param>
            <param name="columnInstance">
            The column instance.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase.WriteColumnInstanceRef(System.Xml.XmlElement,Estat.Ma.Model.QueryEditor.IColumnInstance)">
            <summary>
            Writes the column instance ref.
            </summary>
            <param name="columnInstanceNode">
            The column instance node.
            </param>
            <param name="columnInstance">
            The column instance.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase.WriteColumnInstanceRef(System.Xml.XmlElement,Estat.Ma.Model.QueryEditor.IColumnInstance,System.Int32)">
            <summary>
            Writes the column instance ref.
            </summary>
            <param name="columnInstanceRefNode">
            The column instance ref node.
            </param>
            <param name="columnInstance">
            The column instance.
            </param>
            <param name="i">
            The i.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase.WriteColumnMapping(System.Xml.XmlElement,Estat.Ma.Model.QueryEditor.IColumnMapping)">
            <summary>
            Writes the column mapping.
            </summary>
            <param name="columnMappingNode">
            The column mapping node.
            </param>
            <param name="columnMapping">
            The column mapping.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase.WriteColumnTableReferences(System.Xml.XmlElement,Estat.Ma.Model.QueryEditor.IColumnTableReference)">
            <summary>
            Writes the column table references.
            </summary>
            <param name="columnTableReferenceNode">
            The column table reference node.
            </param>
            <param name="columnTableReference">
            The column table reference.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase.WriteColumnsMerging(Estat.Ma.Model.QueryEditor.IQueryMetadata,System.Xml.XmlElement)">
            <summary>
            Writes the columns merging.
            </summary>
            <param name="queryMetadata">
            The query metadata.
            </param>
            <param name="columnsMergingNode">
            The columns merging node.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase.WriteCrossJoin(System.Xml.XmlElement,Estat.Ma.Model.QueryEditor.ICrossJoinRelation)">
            <summary>
            Writes the cross join.
            </summary>
            <param name="element">
            The element.
            </param>
            <param name="relation">
            The relation.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase.WriteRelation(System.Xml.XmlElement,Estat.Ma.Model.QueryEditor.IRelation)">
            <summary>
            Writes the relation.
            </summary>
            <param name="relationNode">
            The relation node.
            </param>
            <param name="relation">
            The relation.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase.WriteTableAttributeValues(System.Xml.XmlElement,Estat.Ma.Model.QueryEditor.IAllowedValues)">
            <summary>
            Writes the table attribute values.
            </summary>
            <param name="allowedValuesNode">
            The allowed values node.
            </param>
            <param name="allowedValues">
            The allowed values.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase.WriteTableInstance(System.Xml.XmlElement,Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            Writes the table instance.
            </summary>
            <param name="tableInstanceNode">
            The table instance node.
            </param>
            <param name="tableInstance">
            The table instance.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase.WriteUnion(System.Xml.XmlElement,Estat.Ma.Model.QueryEditor.IUnionRelation)">
            <summary>
            Writes the union.
            </summary>
            <param name="unionRelationNode">
            The union relation node.
            </param>
            <param name="relation">
            The relation.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriterBase.WriteValue(System.Xml.XmlElement,Estat.Ma.Model.QueryEditor.Value)">
            <summary>
            Writes the value.
            </summary>
            <param name="valueNode">
            The value node.
            </param>
            <param name="value">
            The value.
            </param>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.IQueryMetadata">
            <summary>
            The QueryMetadata interface.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.IQueryMetadata.AddColumnTableReference">
            <summary>
                Adds the column table reference.
            </summary>
            <returns>
                The <see cref="T:Estat.Ma.Model.QueryEditor.ColumnTableReference"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.IQueryMetadata.AddConstraints">
            <summary>
                Adds the constraints.
            </summary>
            <returns>
                The <see cref="T:Estat.Ma.Model.QueryEditor.AllowedValues"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.IQueryMetadata.AddRelation">
            <summary>
                Adds the relation.
            </summary>
            <returns>
                The <see cref="T:Estat.Ma.Model.QueryEditor.Relation"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.IQueryMetadata.AddTableInstance">
            <summary>
                Adds the table instance.
            </summary>
            <returns>
                The <see cref="T:Estat.Ma.Model.QueryEditor.TableInstance"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.IQueryMetadata.Clone">
            <summary>
                The clone.
            </summary>
            <returns>
                The <see cref="T:Estat.Ma.Model.QueryEditor.QueryMetadata"/>.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.IQueryMetadata.HasUnconnectedTables">
            <summary>
                The has unconnected tables.
            </summary>
            <returns>
                The System.Boolean.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.IQueryMetadata.RemoveMergedColumn(Estat.Ma.Model.QueryEditor.ColumnInstancesCollection)">
            <summary>
            The remove merged column.
            </summary>
            <param name="col">
            The col.
            </param>
            <returns>
            The System.Boolean.
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IQueryMetadata.ColumnInstances">
            <summary>
                Gets the column instances.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IQueryMetadata.ColumnTableReferences">
            <summary>
                Gets the column table references.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IQueryMetadata.ColumnsMerging">
            <summary>
                Gets the columns merging.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IQueryMetadata.Constraints">
            <summary>
                Gets the constraints.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IQueryMetadata.CrossJoinRelations">
            <summary>
                Gets the cross-join relations.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IQueryMetadata.Relations">
            <summary>
                Gets the relations.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IQueryMetadata.TableConstraints">
            <summary>
                Gets the table constraints.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IQueryMetadata.TableInstances">
            <summary>
                Gets the table instances.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IQueryMetadata.UnionRelations">
            <summary>
                Gets the union relations.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.CrossJoinRelationsCollection">
            <summary>
            The cross-join relations collection.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.CrossJoinRelationsCollection._queryMetadata">
            <summary>
            The _ query metadata.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.CrossJoinRelationsCollection.#ctor(Estat.Ma.Model.QueryEditor.IQueryMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.CrossJoinRelationsCollection"/> class.
            </summary>
            <param name="querymetadata">
            The query metadata.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.CrossJoinRelationsCollection.Add(Estat.Ma.Model.QueryEditor.ICrossJoinRelation)">
            <summary>
            The add.
            </summary>
            <param name="ur">
            The ur.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.CrossJoinRelationsCollection.ExistsRelation(Estat.Ma.Model.QueryEditor.ITableInstance,Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            Checks if a relation exists between <paramref name="source"/> and <paramref name="destination"/>
            </summary>
            <param name="source">
            The source.
            </param>
            <param name="destination">
            The destination.
            </param>
            <returns>
            True  if a relation exists between <paramref name="source"/> and <paramref name="destination"/>; otherwise false.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.CrossJoinRelationsCollection.DoAdd(Estat.Ma.Model.QueryEditor.ICrossJoinRelation)">
            <summary>
            The do add.
            </summary>
            <param name="ur">
            The ur.
            </param>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.CrossJoinRelationsCollection.QueryMetadata">
            <summary>
            Gets the query metadata.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.PeriodMap">
            <summary>
                This class holds a <c>SDMX</c> code id (read-only) and the <c>DDB</c> code
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.PeriodMap._sdmxCode">
            <summary>
                Gets the <c>SDMX</c> code id
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.PeriodMap._localCode">
            <summary>
                Gets or sets the local code.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.PeriodMap.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.PeriodMap"/> class.
            </summary>
            <param name="sdmxCode">
            The sdmx code.
            </param>
        </member>
        <member name="P:Estat.Ma.Model.PeriodMap.LocalCode">
            <summary>
                Gets or sets the local code.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.PeriodMap.SdmxCode">
            <summary>
                Gets the <c>SDMX</c> code id
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.DataSetColumn">
            <summary>
            This class holds a dataset column
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.DataSetColumn._datasetColumnId">
            <summary>
            The DATASET_COLUMN.COL_ID value
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.DataSetColumn._name">
            <summary>
            The DATASET_COLUMN.NAME value
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.DataSetColumn._codeMap">
            <summary>
            Gets the local code description
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.DataSetColumn.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.DataSetColumn"/> class.
            </summary>
            <param name="datasetColumnId">
            The dataset column id.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.DataSetColumn.#ctor(System.Int64,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.DataSetColumn"/> class.
            </summary>
            <param name="datasetColumnId">
            The dataset column id.
            </param>
            <param name="name">
            The name.
            </param>
        </member>
        <member name="P:Estat.Ma.Model.DataSetColumn.CodeMap">
            <summary>
            Gets the local code description
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.DataSetColumn.DatasetColumnId">
            <summary>
            Gets the DATASET_COLUMN.COL_ID value
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.DataSetColumn.LastRetrieval">
            <summary>
            Gets or sets the last retrieval of local codes 
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.DataSetColumn.Name">
            <summary>
             Gets the DATASET_COLUMN.NAME value
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.DataSetColumn.Position">
            <summary>
            Gets or sets the position of the local code column inside the transcoding
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.DataSetColumn.ColumnOrdinal">
            <summary>
            Gets the column ordinal. First column is 0, second 1 e.t.c.
            </summary>
            <value>
            The column ordinal.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.DataSetColumn.PositionPk">
            <summary>
            Gets the position of the local code Primary KEY column inside the transcoding 
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertTextFormat">
            <summary>
              This class contains the stored procedure INSERT_TEXT_FORMAT name and parameter names and types
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.OutputProcedureBase">
            <summary>
            The output procedure base.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.OutputProcedureBase.OutputParameterName">
            <summary>
              Gets the <c>p_pk</c> parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.OutputProcedureBase._procedure">
            <summary>
            The _procedure
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.OutputProcedureBase.#ctor(Estat.Ma.Model.StoredProcedure.IProcedure)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.OutputProcedureBase"/> class.
            </summary>
            <param name="procedure">The procedure.</param>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.OutputProcedureBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.OutputProcedureBase"/> class.
            </summary>
            <param name="procedureName">Name of the procedure.</param>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.OutputProcedureBase.CreateCommand(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="database"/>.
            </summary>
            <param name="database">
            The database.
            </param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="database"/>.
            </returns>
            <remarks>
            The <paramref name="database"/> instance may or may not be transactional.
            </remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.OutputProcedureBase.CreateCommand(System.Data.Common.DbConnection,System.Data.Common.DbTransaction)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="connection"/> and <paramref name="transaction"/>
            </summary>
            <param name="connection">
            The connection
            </param>
            <param name="transaction">
            The transaction; otherwise set to null
            </param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="connection"/> and <paramref name="transaction"/>
            </returns>
            <remarks>
            It sets the following <see cref="T:System.Data.Common.DbCommand"/> properties <see cref="P:System.Data.Common.DbCommand.Connection"/> ,
                <see cref="P:System.Data.Common.DbCommand.Transaction"/> , <see cref="P:System.Data.Common.DbCommand.CommandType"/> and
                <see cref="P:System.Data.Common.DbCommand.CommandText"/>
            </remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.OutputProcedureBase.CreateParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Data.ParameterDirection)">
            <summary>
            Create parameter for the specified <paramref name="command"/> and add it to the command
            </summary>
            <param name="command">
            The command
            </param>
            <param name="name">
            The parameter name
            </param>
            <param name="dbType">
            The type
            </param>
            <param name="direction">
            The direction
            </param>
            <returns>
            The new <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.OutputProcedureBase.CreateParameter``1(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Data.ParameterDirection,``0)">
            <summary>
            Create parameter for the specified <paramref name="command"/> and add it to the command
            </summary>
            <typeparam name="T">
            The parameter type.
            </typeparam>
            <param name="command">
            The command
            </param>
            <param name="name">
            The parameter name
            </param>
            <param name="dbType">
            The type
            </param>
            <param name="direction">
            The direction
            </param>
            <param name="value">
            The value.
            </param>
            <returns>
            The new <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.OutputProcedureBase.CreateCommandWithDefaults(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified <paramref name="database"/>.
            </summary>
            <param name="database">The database.</param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified <paramref name="database"/>.
            </returns>
            <remarks>The <paramref name="database"/> instance may or may not be transactional.</remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.OutputProcedureBase.CreateOutputParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the <c>'p_pk'</c> parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The DB command 
            </param>
            <returns>
            The parameter for <c>'p_pk'</c> parameter 
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.OutputProcedureBase.OutputType">
            <summary>
              Gets the <c>p_pk</c> parameter type
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertTextFormat.CompidParameterName">
            <summary>
              Gets the p_compid parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertTextFormat.FacetTypeEnumParameterName">
            <summary>
              Gets the p_facet_type_enum parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertTextFormat.FacetValueParameterName">
            <summary>
              Gets the p_facet_value parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertTextFormat.StoredProcedureName">
            <summary>
              Gets the INSERT_TEXT_FORMAT stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertTextFormat.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertTextFormat"/> class.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertTextFormat.CreateCompidParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_compid parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_compid with type DbType.Int64 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertTextFormat.CreateFacetTypeEnumParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_facet_type_enum parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_facet_type_enum with type DbType.Int64 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertTextFormat.CreateFacetValueParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_facet_value parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_facet_value with type DbType.String 
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertTextFormat.CompidType">
            <summary>
              Gets the p_compid parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertTextFormat.FacetTypeEnumType">
            <summary>
              Gets the p_facet_type_enum parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertTextFormat.FacetValueType">
            <summary>
              Gets the p_facet_value parameter type
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertConceptScheme">
            <summary>
              This class contains the stored procedure INSERT_CONCEPT_SCHEME name and parameter names and types
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.ItemSchemeProcedureBase">
            <summary>
              This is the base class for ITEM SCHEME based stored procedures, and contains the common parameter names and types
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase">
            <summary>
              This is the base class for ARTEFACT based stored procedures, and contains the common parameter names and types
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.IArtefactProcedure">
            <summary>
                The base interface for all maintainable artefacts.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.IArtefactProcedure.CreateAgencyParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_agency parameter for the specified <paramref name="command"/> . The parameter is added
                <paramref name="command"/>
            </summary>
            <param name="command">
            The DB command
            </param>
            <returns>
            A new instance of the parameter
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.IArtefactProcedure.CreateIsFinalParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_is_final parameter for the specified <paramref name="command"/> . The parameter is added
                <paramref name="command"/>
            </summary>
            <param name="command">
            The DB command
            </param>
            <returns>
            A new instance of the parameter
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.IArtefactProcedure.CreateLastModifiedParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_uri parameter for the specified <paramref name="command"/> . The parameter is added
                <paramref name="command"/>
            </summary>
            <param name="command">
            The DB command
            </param>
            <returns>
            A new instance of the parameter
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.IArtefactProcedure.CreateUriParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_uri parameter for the specified <paramref name="command"/> . The parameter is added
                <paramref name="command"/>
            </summary>
            <param name="command">
            The DB command
            </param>
            <returns>
            A new instance of the parameter
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.IArtefactProcedure.CreateValidFromParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_valid_from parameter for the specified <paramref name="command"/> . The parameter is added
                <paramref name="command"/>
            </summary>
            <param name="command">
            The DB command
            </param>
            <returns>
            A new instance of the parameter
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.IArtefactProcedure.CreateValidToParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_valid_to parameter for the specified <paramref name="command"/> . The parameter is added
                <paramref name="command"/>
            </summary>
            <param name="command">
            The DB command
            </param>
            <returns>
            A new instance of the parameter
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.IArtefactProcedure.CreateVersionParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_version parameter for the specified <paramref name="command"/> . The parameter is added
                <paramref name="command"/>
            </summary>
            <param name="command">
            The DB command
            </param>
            <returns>
            A new instance of the parameter
            </returns>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase.AgencyParameterName">
            <summary>
              Gets the p_agency parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase.IsFinalParameterName">
            <summary>
              Gets the p_is_final parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase.ValidFromParameterName">
            <summary>
              Gets the p_valid_from parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase.ValidToParameterName">
            <summary>
              Gets the p_valid_to parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase.VersionParameterName">
            <summary>
              Gets the p_version parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase.UriParameterName">
            <summary>
              Gets the p_uri parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase.LastModifiedParameterName">
            <summary>
              Gets the p_last_modified parameter name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase"/> class.
            </summary>
            <param name="procedureName">
            The procedure name.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase.CreateCommandWithDefaults(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified <paramref name="database"/>.
            </summary>
            <param name="database">The database.</param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified <paramref name="database"/>.
            </returns>
            <remarks>The <paramref name="database"/> instance may or may not be transactional.</remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase.CreateAgencyParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_agency parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The DB command 
            </param>
            <returns>
            A new instance of the parameter 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase.CreateIsFinalParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_is_final parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The DB command 
            </param>
            <returns>
            A new instance of the parameter 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase.CreateValidFromParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_valid_from parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The DB command 
            </param>
            <returns>
            A new instance of the parameter 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase.CreateValidToParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_valid_to parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The DB command 
            </param>
            <returns>
            A new instance of the parameter 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase.CreateVersionParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_version parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The DB command 
            </param>
            <returns>
            A new instance of the parameter 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase.CreateUriParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_uri parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The DB command 
            </param>
            <returns>
            A new instance of the parameter 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase.CreateLastModifiedParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_uri parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The DB command 
            </param>
            <returns>
            A new instance of the parameter 
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase.UriType">
            <summary>
              Gets the p_uri parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase.LastModifiedType">
            <summary>
              Gets the p_last_modified parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase.AgencyType">
            <summary>
              Gets the p_agency parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase.IsFinalType">
            <summary>
              Gets the p_is_final parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase.ValidFromType">
            <summary>
              Gets the p_valid_from parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase.ValidToType">
            <summary>
              Gets the p_valid_to parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase.VersionType">
            <summary>
              Gets the p_version parameter type
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.ItemSchemeProcedureBase.IsPartialParameterName">
            <summary>
              Gets the <c>p_is_partial</c> parameter name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.ItemSchemeProcedureBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.ItemSchemeProcedureBase"/> class. 
            </summary>
            <param name="procedureName">
            The procedure name.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.ItemSchemeProcedureBase.CreateCommandWithDefaults(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified <paramref name="database"/>.
            </summary>
            <param name="database">The database.</param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified <paramref name="database"/>.
            </returns>
            <remarks>The <paramref name="database"/> instance may or may not be transactional.</remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.ItemSchemeProcedureBase.CreateIsPartialParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the <c>p_is_partial</c> parameter for the specified <paramref name="command"/> . The parameter is added to <paramref name="command"/>
            </summary>
            <param name="command">
            The database command 
            </param>
            <returns>
            A new instance of the parameter 
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.ItemSchemeProcedureBase.IsPartialType">
            <summary>
              Gets the <c>p_is_partial</c> parameter type
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertConceptScheme.StoredProcedureName">
            <summary>
              Gets the INSERT_CONCEPT_SCHEME stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertConceptScheme.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertConceptScheme"/> class.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertDataConsumerScheme">
            <summary>
              This class contains the stored procedure INSERT_DATACONSUMER_SCHEME name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertDataConsumerScheme.StoredProcedureName">
            <summary>
              Gets the INSERT_DATACONSUMER_SCHEME stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertDataConsumerScheme.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertDataConsumerScheme"/> class.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertOrganisationUnit">
            <summary>
              This class contains the stored procedure INSERT_ORGANISATION_UNIT name and parameter names and types
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.HierarchicalItemProcedureBase">
            <summary>
            The hierarchical item procedure base.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.HierarchicalItemProcedureBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.HierarchicalItemProcedureBase"/> class.
            </summary>
            <param name="procedureName">The procedure name.</param>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.HierarchicalItemProcedureBase.CreateCommandWithDefaults(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified <paramref name="database"/>.
            </summary>
            <param name="database">The database.</param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified <paramref name="database"/>.
            </returns>
            <remarks>The <paramref name="database"/> instance may or may not be transactional.</remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.HierarchicalItemProcedureBase.CreateParentItemIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Returns the parent item identifier parameter of the specified <paramref name="command"/>. 
            If it does not exist it will add it.
            </summary>
            <param name="command">The command.</param>
            <returns>The input <see cref="T:System.Data.Common.DbParameter"/> of type <see cref="F:System.Data.DbType.Int64"/> and name <see cref="P:Estat.Ma.Model.StoredProcedure.HierarchicalItemProcedureBase.ParentItemParameterName"/></returns>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.HierarchicalItemProcedureBase.ParentItemType">
            <summary>
              Gets the p_parent_code parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.HierarchicalItemProcedureBase.ParentItemParameterName">
            <summary>
            Gets the name of the parent item parameter.
            </summary>
            <value>
            The name of the parent item parameter.
            </value>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertOrganisationUnit.ConSchIdParameterName">
            <summary>
              Gets the <c>p_org_sch_id</c> parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertOrganisationUnit.ParentConIdParameterName">
            <summary>
              Gets the <c>p_org_sch_id</c> parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertOrganisationUnit.StoredProcedureName">
            <summary>
              Gets the INSERT_ORGANISATION_UNIT stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertOrganisationUnit.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertOrganisationUnit"/> class.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertOrganisationUnit.SchemeParameterName">
            <summary>
            Gets the name of the scheme parameter.
            </summary>
            <value>
            The name of the scheme parameter.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertOrganisationUnit.ParentItemParameterName">
            <summary>
            Gets the name of the parent item parameter.
            </summary>
            <value>
            The name of the parent item parameter.
            </value>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.QueryMetadata">
            <summary>
            The query metadata.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.QueryMetadata._columnInstances">
            <summary>
            The _ column instances.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.QueryMetadata._columnTableReferences">
            <summary>
            The _ column table references.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.QueryMetadata._columnsMerging">
            <summary>
            The _ columns merging.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.QueryMetadata._constraints">
            <summary>
            The _ constraints.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.QueryMetadata._relations">
            <summary>
            The _ relations.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.QueryMetadata._tableConstraints">
            <summary>
            The _ table constraints.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.QueryMetadata._tableInstances">
            <summary>
            The _ table instances.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.QueryMetadata._unionRelations">
            <summary>
            The _ union relations.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.QueryMetadata._crossJoinRelations">
            <summary>
            Gets the cross-join relations.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadata.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.QueryMetadata"/> class.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadata.AddTableInstance">
            <summary>
            Adds the table instance.
            </summary>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.TableInstance"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadata.AddColumnTableReference">
            <summary>
            Adds the column table reference.
            </summary>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.ColumnTableReference"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadata.AddConstraints">
            <summary>
            Adds the constraints.
            </summary>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.AllowedValues"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadata.AddRelation">
            <summary>
            Adds the relation.
            </summary>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.Relation"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadata.Clone">
            <summary>
            The clone.
            </summary>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.QueryMetadata"/>.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadata.HasUnconnectedTables">
            <summary>
            The has unconnected tables.
            </summary>
            <returns>
            The System.Boolean.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadata.RemoveMergedColumn(Estat.Ma.Model.QueryEditor.ColumnInstancesCollection)">
            <summary>
            The remove merged column.
            </summary>
            <param name="col">
            The col.
            </param>
            <returns>
            The System.Boolean.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadata.PushNextRelation``1(Estat.Ma.Model.QueryEditor.ITableInstance,System.Collections.Generic.Stack{Estat.Ma.Model.QueryEditor.ITableInstance},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Pushes the next relation.
            </summary>
            <typeparam name="T">
            The relation type
            </typeparam>
            <param name="currentTable">
            The current table.
            </param>
            <param name="stack">
            The stack.
            </param>
            <param name="relations">
            The relations.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadata.AreAllCrossJoinTablesConnected">
            <summary>
            Check if all tables are cross join tables connected.
            </summary>
            <returns>
            true if all tables are cross join tables connected; otherwise false.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryMetadata.AreAllUnionTablesConnected">
            <summary>
            The are all union tables connected.
            </summary>
            <returns>
            The System.Boolean.
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.QueryMetadata.ColumnInstances">
            <summary>
            Gets the column instances.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.QueryMetadata.ColumnTableReferences">
            <summary>
            Gets the column table references.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.QueryMetadata.ColumnsMerging">
            <summary>
            Gets the columns merging.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.QueryMetadata.Constraints">
            <summary>
            Gets the constraints.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.QueryMetadata.Relations">
            <summary>
            Gets the relations.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.QueryMetadata.TableConstraints">
            <summary>
            Gets the table constraints.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.QueryMetadata.TableInstances">
            <summary>
            Gets the table instances.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.QueryMetadata.UnionRelations">
            <summary>
            Gets the union relations.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.QueryMetadata.CrossJoinRelations">
            <summary>
            Gets the cross-join relations.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.QueryGenerator">
            <summary>
            The default query generator.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.QueryGeneratorBase">
            <summary>
            The base class for Query Generator.
            </summary>
            <remarks>Not thread safe.</remarks>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.from">
            <summary>
            The from.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.fromStarted">
            <summary>
            The from started.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.overallSelectStarted">
            <summary>
            The overall select started.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.queryMetadata">
            <summary>
            The query metadata.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.select">
            <summary>
            The select.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.tableAliases">
            <summary>
            The table aliases.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.tabs">
            <summary>
            The tabs.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.visitedTables">
            <summary>
            The visited tables.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.where">
            <summary>
            The where.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.whereStarted">
            <summary>
            The where started.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.GetEscapedString(System.String)">
            <summary>
            Gets the escaped string.
            </summary>
            <param name="strToEscape">
            The string to escape.
            </param>
            <returns>
            The escaped string.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.GenerateQuery(Estat.Ma.Model.QueryEditor.IQueryMetadata,System.Data.Common.DbConnection)">
            <summary>
            This is the top-level method for the generation of an SQL query that is equivalent of the query metadata. 
              It first calls the appropriate methods for the elimination of special storage scheme cases, like the ISTAT scheme
              and then recursively creates the query.
            </summary>
            <param name="queryMetadata">
            the query metadata for which the query will be created. 
            </param>
            <param name="dissConn">
            The dissemination Connection
            </param>
            <returns>
            The System.String.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.WriteUnionQuery(Estat.Ma.Model.QueryEditor.IQueryMetadata)">
            <summary>
            Write union query.
            </summary>
            <param name="queryMetadata">
            The query metadata.
            </param>
            <returns>
            The <see cref="T:System.Text.StringBuilder"/>.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.BuildConstraint(Estat.Ma.Model.QueryEditor.Value,System.Text.StringBuilder,Estat.Ma.Model.QueryEditor.IAllowedValues)">
            <summary>
            Build and populate <paramref name="sb"/> from the specified <paramref name="value"/> and <paramref name="constraint"/>
            </summary>
            <param name="value">
            The value.
            </param>
            <param name="sb">
            The string buffer
            </param>
            <param name="constraint">
            The constraint.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.GetSqlFrom(Estat.Ma.Model.QueryEditor.IQueryMetadata,Estat.Ma.Model.QueryEditor.ITableInstance,System.Boolean)">
            <summary>
            The get sql from.
            </summary>
            <param name="queryMetadata">
            The query metadata.
            </param>
            <param name="firstTableToProcess">
            The first table to process.
            </param>
            <param name="doProcessConstraints">
            The do process constraints.
            </param>
            <returns>
            The System.String.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.fetchMasterSlaveColumnMappings(Estat.Ma.Model.QueryEditor.ITableInstance,Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            The fetch master slave column mappings.
            </summary>
            <param name="masterTable">
            The master table.
            </param>
            <param name="slaveSampleTable">
            The slave sample table.
            </param>
            <returns>
            The System.Collections.Generic.List`1[T -&gt; Estat.Ma.Ui.QueryEditors.Model.ColumnMapping].
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.generateColMergingEquivalent(Estat.Ma.Model.QueryEditor.IQueryMetadata)">
            <summary>
            This method handles the query metadata containing
            </summary>
            <param name="queryMetadata">
            </param>
            <returns>
            The Estat.Ma.Ui.QueryEditors.Model.QueryGenerator+CompositeTableInstance.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.generateMasterSlaveEquivalent(Estat.Ma.Model.QueryEditor.IQueryMetadata,Estat.Ma.Model.QueryEditor.IColumnTableReference,System.Data.Common.DbConnection)">
            <summary>
            This method generates the equivalent table of a master-table scheme in a new Query Metadata
            </summary>
            <param name="queryMetadata">
            the current query metadata 
            </param>
            <param name="colTablRef">
            the column-table reference that represents the master-table scheme 
            </param>
            <param name="cn">
            The cn.
            </param>
            <returns>
            a new composite table containing the equivalent query, that has a column instance for every master and slave column instance (except the joineed ones, where only one is returned with the same name as the slave one). 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.processColMergingTables(Estat.Ma.Model.QueryEditor.IQueryMetadata)">
            <summary>
            The process col merging tables.
            </summary>
            <param name="queryMetadata">
            The query metadata.
            </param>
            <returns>
            The Estat.Ma.Ui.QueryEditors.Model.QueryMetadata.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.processConstraints(Estat.Ma.Model.QueryEditor.ConstraintsCollection)">
            <summary>
            The process constraints.
            </summary>
            <param name="constraintsCollection">
            The constraints collection.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.processMasterTables(Estat.Ma.Model.QueryEditor.IQueryMetadata,System.Data.Common.DbConnection)">
            <summary>
            This method eliminates master tables and their slave tables with a composite table
            </summary>
            <param name="queryMetadata">
            </param>
            <param name="cn">
            The cn.
            </param>
            <returns>
            The Estat.Ma.Ui.QueryEditors.Model.QueryMetadata.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.ProcessTableCrossJoin(Estat.Ma.Model.QueryEditor.ITableInstance,Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            This method processes a table. It appends everything necessary in the select, from and where part of the query.
            </summary>
            <param name="previousTable">
            The previous Table.
            </param>
            <param name="currentTable">
            the table to be processed 
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.ProcessTable(Estat.Ma.Model.QueryEditor.ITableInstance,Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            This method processes a table. It appends everything necessary in the select, from and where part of the query.
            </summary>
            <param name="previousTable">
            The previous Table.
            </param>
            <param name="currentTable">
            the table to be processed 
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.WriteWhere(Estat.Ma.Model.QueryEditor.ITableInstance,Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            Write WHERE clauses.
            </summary>
            <param name="previousTable">
            The previous table.
            </param>
            <param name="currentTable">
            The current table.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.BuildConstraintForTable(Estat.Ma.Model.QueryEditor.Value,System.Text.StringBuilder,Estat.Ma.Model.QueryEditor.IAllowedValues)">
            <summary>
            Build and populate <paramref name="sb"/> from the specified <paramref name="value"/> and <paramref name="constraint"/>
            </summary>
            <param name="value">
            The value.
            </param>
            <param name="sb">
            The string buffer
            </param>
            <param name="constraint">
            The constraint.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.WriteFrom(Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            Writes the FROM clauses.
            </summary>
            <param name="currentTable">
            The current table.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.WriteSelect(Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            Write the SELECT clauses.
            </summary>
            <param name="currentTable">
            The current table.
            </param>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.CompositeTableInstance">
            <summary>
              This is the equivalent of a table, but it does not refer to a real table, but rather a query.
              This class is used to replace in the model cases of master-slave scheme, or columns merging scheme.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.TableInstance">
            <summary>
              The table instance.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.ITableInstance">
            <summary>
            The TableInstance interface.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ITableInstance.AddColumnInstance">
            <summary>
                Add a new column instance.
            </summary>
            <returns>
                The <see cref="T:Estat.Ma.Model.QueryEditor.ColumnInstance"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ITableInstance.AddColumnInstance(Estat.Ma.Model.QueryEditor.MergedColumnType)">
            <summary>
            Add a new column instance.
            </summary>
            <param name="mergedColumnType">
                Type of the merged column.
            </param>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.ColumnInstance"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ITableInstance.AddCrossJoinRelation(Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            Add a new cross join relation.
            </summary>
            <param name="destinationTableInstance">
                The destination table instance.
            </param>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.CrossJoinRelation"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ITableInstance.AddFixedColumnInstance(System.String,System.String)">
            <summary>
            Add a new fixed column instance.
            </summary>
            <param name="name">
                The name.
            </param>
            <param name="fixedValue">
                The fixed value.
            </param>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.ColumnInstance"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ITableInstance.AddConstraint">
            <summary>
            Add a new constraint.
            </summary>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.AllowedValues"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ITableInstance.AddUnionRelation(Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            Add a new union relation.
            </summary>
            <param name="destinationTableInstance">
                The destination table instance.
            </param>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.UnionRelation"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ITableInstance.GetNextUnionTable">
            <summary>
                Returns the next table in the Union Relation that the table participates in (if it participates in a union
                relation)
            </summary>
            <returns>
                The <see cref="T:Estat.Ma.Model.QueryEditor.ITableInstance"/>.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ITableInstance.HasColumnTableRelation">
            <summary>
                Returns true if the table participates in an Inner Join  Relation
            </summary>
            <returns>
                true if the table participates in a Inner-Join Relation; otherwise false
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ITableInstance.HasCrossJoinRelation">
            <summary>
                Returns true if the table participates in a Cross-Join Relation
            </summary>
            <returns>
                true if the table participates in a Cross-Join Relation; otherwise false
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ITableInstance.HasInnerJoinRelation">
            <summary>
                Returns true if the table participates in an Inner Join  Relation
            </summary>
            <returns>
                true if the table participates in a Inner-Join Relation; otherwise false
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ITableInstance.HasOnlyUnionRelationFrom">
            <summary>
                Returns true only if the table participates in a Union Relation and NO OTHER Relations (i.e. ColumnTableReference,
                Join Relation)
                AND is the FIRST table in this Union Relation that it participates in
            </summary>
            <returns>
                The System.Boolean.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ITableInstance.HasOnlyUnionRelationTo">
            <summary>
                Returns true only if the table participates in a Union Relation and NO OTHER Relations (i.e. ColumnTableReference,
                Join Relation)
                AND is the LAST table in this Union Relation that it participates in
            </summary>
            <returns>
                The System.Boolean.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ITableInstance.HasRelationOfAnyType">
            <summary>
                The has relation of any type.
            </summary>
            <returns>
                The System.Boolean.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ITableInstance.HasUnionRelation">
            <summary>
                Returns true if the table participates in a Union Relation
            </summary>
            <returns>
                true if the table participates in a Union; otherwise false
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ITableInstance.RemoveAllReferences">
            <summary>
                The remove all references.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ITableInstance.SelectedColumnsMatchColumnsOf(Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            The selected columns match columns of.
            </summary>
            <param name="to">
            The to.
            </param>
            <returns>
            The System.Boolean.
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ITableInstance.ColumnInstances">
            <summary>
                Gets the column instances.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ITableInstance.Constraints">
            <summary>
                Gets the constraints.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ITableInstance.ID">
            <summary>
                Gets or sets the id.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ITableInstance.Name">
            <summary>
                Gets or sets the name.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ITableInstance.QueryMetadata">
            <summary>
                Gets the query metadata.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ITableInstance.XCoordinate">
            <summary>
                Gets or sets the x coordinate.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ITableInstance.YCoordinate">
            <summary>
                Gets or sets the y coordinate.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.TableInstance._columnInstances">
            <summary>
            The _ column instances.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.TableInstance._constraints">
            <summary>
            The _ constraints.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.TableInstance._queryMetadata">
            <summary>
            The _ query metadata.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.TableInstance._xcoordinate">
            <summary>
            The _ x coordinate.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.TableInstance._ycoordinate">
            <summary>
            The _ y coordinate.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.TableInstance.#ctor(Estat.Ma.Model.QueryEditor.IQueryMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.TableInstance"/> class.
            </summary>
            <param name="querymetadata">
            The <see cref="P:Estat.Ma.Model.QueryEditor.TableInstance.QueryMetadata"/> that this instance will belong to.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.TableInstance.AddColumnInstance">
            <summary>
            Add a new column instance.
            </summary>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.ColumnInstance"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.TableInstance.AddFixedColumnInstance(System.String,System.String)">
            <summary>
            Add a new fixed column instance.
            </summary>
            <param name="name">
            The name.
            </param>
            <param name="fixedValue">
            The fixed value.
            </param>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.ColumnInstance"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.TableInstance.AddConstraint">
            <summary>
            Add a new constraint.
            </summary>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.AllowedValues"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.TableInstance.AddColumnInstance(Estat.Ma.Model.QueryEditor.MergedColumnType)">
            <summary>
            Add a new column instance.
            </summary>
            <param name="mergedColumnType">
            Type of the merged column.
            </param>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.ColumnInstance"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.TableInstance.AddUnionRelation(Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            Add a new union relation.
            </summary>
            <param name="destinationTableInstance">
                The destination table instance.
            </param>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.UnionRelation"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.TableInstance.AddCrossJoinRelation(Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            Add a new cross join relation.
            </summary>
            <param name="destinationTableInstance">
                The destination table instance.
            </param>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.CrossJoinRelation"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.TableInstance.GetNextUnionTable">
            <summary>
            Returns the next table in the Union Relation that the table participates in (if it participates in a union relation)
            </summary>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.ITableInstance"/>.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.TableInstance.HasOnlyUnionRelationFrom">
            <summary>
            Returns true only if the table participates in a Union Relation and NO OTHER Relations (i.e. ColumnTableReference, Join Relation)
              AND is the FIRST table in this Union Relation that it participates in
            </summary>
            <returns>
            The System.Boolean.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.TableInstance.HasOnlyUnionRelationTo">
            <summary>
            Returns true only if the table participates in a Union Relation and NO OTHER Relations (i.e. ColumnTableReference, Join Relation)
              AND is the LAST table in this Union Relation that it participates in
            </summary>
            <returns>
            The System.Boolean.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.TableInstance.HasInnerJoinRelation">
            <summary>
            Returns true if the table participates in an Inner Join  Relation
            </summary>
            <returns>
            true if the table participates in a Inner-Join Relation; otherwise false
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.TableInstance.HasColumnTableRelation">
            <summary>
            Returns true if the table participates in an Inner Join  Relation
            </summary>
            <returns>
            true if the table participates in a Inner-Join Relation; otherwise false
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.TableInstance.HasRelationOfAnyType">
            <summary>
            The has relation of any type.
            </summary>
            <returns>
            The System.Boolean.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.TableInstance.HasCrossJoinRelation">
            <summary>
            Returns true if the table participates in a Cross-Join Relation
            </summary>
            <returns>
            true if the table participates in a Cross-Join Relation; otherwise false
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.TableInstance.HasUnionRelation">
            <summary>
            Returns true if the table participates in a Union Relation
            </summary>
            <returns>
            true if the table participates in a Union; otherwise false
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.TableInstance.RemoveAllReferences">
            <summary>
            The remove all references.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.TableInstance.SelectedColumnsMatchColumnsOf(Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            The selected columns match columns of.
            </summary>
            <param name="to">
            The to.
            </param>
            <returns>
            The System.Boolean.
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.TableInstance.ColumnInstances">
            <summary>
            Gets the column instances.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.TableInstance.Constraints">
            <summary>
            Gets the constraints.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.TableInstance.ID">
            <summary>
            Gets or sets the id.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.TableInstance.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.TableInstance.QueryMetadata">
            <summary>
            Gets the query metadata.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.TableInstance.XCoordinate">
            <summary>
            Gets or sets the x coordinate.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.TableInstance.YCoordinate">
            <summary>
            Gets or sets the y coordinate.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.CompositeTableInstance.#ctor(Estat.Ma.Model.QueryEditor.IQueryMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.CompositeTableInstance"/> class.
            </summary>
            <param name="queryMetadata">
            The query metadata.
            </param>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.QueryGeneratorBase.CompositeTableInstance.Query">
            <summary>
            Gets or sets the query.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.ColumnTableReference">
            <summary>
            The column table reference.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.IColumnTableReference">
            <summary>
            The ColumnTableReference interface.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IColumnTableReference.ColumnInstance">
            <summary>
                Gets or sets the column instance.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IColumnTableReference.TableInstance">
            <summary>
                Gets or sets the table instance.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ColumnTableReference.#ctor(Estat.Ma.Model.QueryEditor.IQueryMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.ColumnTableReference"/> class.
            </summary>
            <param name="querymetadata">
                The query metadata.
            </param>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ColumnTableReference.ColumnInstance">
            <summary>
            Gets or sets the column instance.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ColumnTableReference.TableInstance">
            <summary>
            Gets or sets the table instance.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ColumnTableReference.TableInstanceFrom">
            <summary>
                Gets or sets the table instance from.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ColumnTableReference.TableInstanceTo">
            <summary>
                Gets or sets the table instance to.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.ColumnInstancesCollection">
            <summary>
              The column instances collection.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.ColumnInstancesCollection._QueryMetadata">
            <summary>
            The _ query metadata.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.ColumnInstancesCollection._TableInstance">
            <summary>
            The _ table instance.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ColumnInstancesCollection.#ctor(Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.ColumnInstancesCollection"/> class.
            </summary>
            <param name="ti">The table instance.</param>
            <exception cref="T:System.Exception">TableInstance does not belong to a QueryMetadata</exception>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ColumnInstancesCollection.#ctor(Estat.Ma.Model.QueryEditor.IQueryMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.ColumnInstancesCollection"/> class.
            </summary>
            <param name="querymetadata">
            The query metadata.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ColumnInstancesCollection.Add(Estat.Ma.Model.QueryEditor.IColumnInstance)">
            <summary>
            The add.
            </summary>
            <param name="c">
            The c.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ColumnInstancesCollection.DoAdd(Estat.Ma.Model.QueryEditor.IColumnInstance)">
            <summary>
            The do add.
            </summary>
            <param name="c">
            The c.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ColumnInstancesCollection.Sort">
            <summary>
            The sort.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ColumnInstancesCollection.GetPositionInList(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            The get position in list.
            </summary>
            <param name="list">
            The list.
            </param>
            <param name="value">
            The value.
            </param>
            <returns>
            The System.Int32.
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ColumnInstancesCollection.QueryMetadata">
            <summary>
            Gets the query metadata.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ColumnInstancesCollection.TableInstance">
            <summary>
            Gets the table instance.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.IDatasetColumnInfo">
            <summary>
                A model class holding some information regarding a dataset column.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.IDatasetColumnInfo.ColumnId">
            <summary>
                Gets or sets the dataset column id. This is the mapping store table <c>DATASET_COLUMN.COL_ID</c> primary key value
                and the <c>DESC_SOURCE.COL_ID</c>.
            </summary>
            <value>
                The column id.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.IDatasetColumnInfo.DataSetColumnName">
            <summary>
                Gets or sets the name of the dataset column name.
            </summary>
            <value>
                The name of the data column.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.IDatasetColumnInfo.DataSetTableName">
            <summary>
                Gets or sets the name of the dataset table. Can be an SQL Query
            </summary>
            <value>
                The name of the dataset table.
            </value>
        </member>
        <member name="T:Estat.Ma.Model.TranscodingTableInfo">
            <summary>
                This class holds the current data table information
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.TranscodingTableInfo._columns">
            <summary>
                Gets the list of columns
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.TranscodingTableInfo._componentMapping">
            <summary>
                The mapping
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.TranscodingTableInfo._components">
            <summary>
                Gets the list of components
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.TranscodingTableInfo._errorMessages">
            <summary>
                The error messages.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.TranscodingTableInfo._scriptCollection">
            <summary>
                The Transcoding script collection
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.TranscodingTableInfo._transcodingDataTable">
            <summary>
                Gets the transcoding data table
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.TranscodingTableInfo._transcodingRuleIdPosition">
            <summary>
                The _transcoding rule id position.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.TranscodingTableInfo.#ctor(System.Data.DataTable,Estat.Ma.Model.DataSetColumnCollection,Estat.Ma.Model.DsdComponentCollection,System.Int32,Estat.Ma.Model.Mapping)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.TranscodingTableInfo"/> class.
            </summary>
            <param name="transcodingDataTable">
            The transcoding data table.
            </param>
            <param name="columns">
            The columns.
            </param>
            <param name="components">
            The components.
            </param>
            <param name="transcodingRuleIdPosition">
            The transcoding Rule Id Position.
            </param>
            <param name="componentMapping">
            The component Mapping.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.TranscodingTableInfo.Clone">
            <summary>
                Creates a new object that is a copy of the current instance.
                The <see cref="P:Estat.Ma.Model.TranscodingTableInfo.ComponentMapping"/> is cloned.
            </summary>
            <returns>
                A new object that is a copy of this instance.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Estat.Ma.Model.TranscodingTableInfo.System#ICloneable#Clone">
            <summary>
                Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
                A new object that is a copy of this instance.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Estat.Ma.Model.TranscodingTableInfo.Columns">
            <summary>
                Gets the list of columns
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.TranscodingTableInfo.ColumnsAsCollection">
            <summary>
                Gets the <see cref="P:Estat.Ma.Model.TranscodingTableInfo.Columns"/> as <see cref="T:System.Collections.ObjectModel.Collection`1"/> (instead of <see cref="T:System.Collections.ObjectModel.KeyedCollection`2"/>
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.TranscodingTableInfo.ComponentMapping">
            <summary>
                Gets the component mapping
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.TranscodingTableInfo.Components">
            <summary>
                Gets the list of components
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.TranscodingTableInfo.ComponentsAsCollection">
            <summary>
                Gets the <see cref="P:Estat.Ma.Model.TranscodingTableInfo.Components"/> as <see cref="T:System.Collections.ObjectModel.Collection`1"/> (instead of
                <see cref="T:System.Collections.ObjectModel.KeyedCollection`2"/>
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.TranscodingTableInfo.ErrorMessages">
            <summary>
                Gets the error messages.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.TranscodingTableInfo.ScriptCollection">
            <summary>
                Gets the Transcoding script collection
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.TranscodingTableInfo.TranscodingDataTable">
            <summary>
                Gets the transcoding data table
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.TranscodingTableInfo.TranscodingRuleIdPosition">
            <summary>
                Gets the Transcoding RuleId Position in <see cref="P:Estat.Ma.Model.TranscodingTableInfo.TranscodingDataTable"/> .
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertOrganisationUnitScheme">
            <summary>
              This class contains the stored procedure INSERT_ORGANISATION_UNIT_SCHEME name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertOrganisationUnitScheme.StoredProcedureName">
            <summary>
              Gets the INSERT_ORGANISATION_UNIT_SCHEME stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertOrganisationUnitScheme.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertOrganisationUnitScheme"/> class.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.TableInstancesCollection">
            <summary>
            The table instances collection.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.TableInstancesCollection._QueryMetadata">
            <summary>
            The _ query metadata.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.TableInstancesCollection.#ctor(Estat.Ma.Model.QueryEditor.IQueryMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.TableInstancesCollection"/> class.
            </summary>
            <param name="querymetadata">
            The query metadata.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.TableInstancesCollection.Add(Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            The add.
            </summary>
            <param name="c">
            The c.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.TableInstancesCollection.DoAdd(Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            The do add.
            </summary>
            <param name="c">
            The c.
            </param>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.TableInstancesCollection.QueryMetadata">
            <summary>
            Gets the query metadata.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.ConstraintsCollection">
            <summary>
            The constraints collection.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.ConstraintsCollection._QueryMetadata">
            <summary>
            The _ query metadata.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.ConstraintsCollection._TableInstance">
            <summary>
            The _ table instance.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ConstraintsCollection.#ctor(Estat.Ma.Model.QueryEditor.IQueryMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.ConstraintsCollection"/> class.
            </summary>
            <param name="querymetadata">
            The query metadata.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ConstraintsCollection.#ctor(Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.ConstraintsCollection"/> class.
            </summary>
            <param name="tableInstance">
            The table instance.
            </param>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ConstraintsCollection.QueryMetadata">
            <summary>
            Gets the query metadata.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ConstraintsCollection.TableInstance">
            <summary>
            Gets the table instance.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.LocalCodeCollection">
            <summary>
            This class holds a collection of <see cref="T:Estat.Ma.Model.LocalColumnCode"/>
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.DsdCodeCollection">
            <summary>
            This class holds a collection of <see cref="T:Estat.Ma.Model.DsdCode"/>
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.DatasetColumnInfo">
            <summary>
                The dataset column info.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.DatasetColumnInfo.ColumnId">
            <summary>
                Gets or sets the dataset column id. This is the mapping store table <c>DATASET_COLUMN.COL_ID</c> primary key value
                and the <c>DESC_SOURCE.COL_ID</c>.
            </summary>
            <value>
                The column id.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.DatasetColumnInfo.DataSetColumnName">
            <summary>
                Gets or sets the name of the dataset column name.
            </summary>
            <value>
                The name of the data column.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.DatasetColumnInfo.DataSetTableName">
            <summary>
                Gets or sets the name of the dataset table. Can be an SQL Query
            </summary>
            <value>
                The name of the dataset table.
            </value>
        </member>
        <member name="T:Estat.Ma.Model.TranscodingRuleComparer">
            <summary>
            The transcoding rule comparer.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.TranscodingRuleComparer._columnId">
            <summary>
            The column id
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.TranscodingRuleComparer.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.TranscodingRuleComparer"/> class.
            </summary>
            <param name="columnId">
            The column id. 
            </param>
        </member>
        <member name="M:Estat.Ma.Model.TranscodingRuleComparer.Compare(Estat.Ma.Model.TranscodingRule,Estat.Ma.Model.TranscodingRule)">
            <summary>
            When overridden in a derived class, performs a comparison of two objects of the same type and returns a value indicating whether one object is less than, equal to, or greater than the other.
            </summary>
            <returns>
            Value Condition Less than zero <paramref name="x"/> is less than <paramref name="y"/> . Zero <paramref name="x"/> equals <paramref name="y"/> . Greater than zero <paramref name="x"/> is greater than <paramref name="y"/> . 
            </returns>
            <param name="x">
            The first object to compare. 
            </param>
            <param name="y">
            The second object to compare. 
            </param>
        </member>
        <member name="M:Estat.Ma.Model.TranscodingRuleComparer.GetLocalCodeWithColumnId(Estat.Ma.Model.TranscodingRule)">
            <summary>
            Gets the local code with <see cref="F:Estat.Ma.Model.TranscodingRuleComparer._columnId"/> from the specified <paramref name="rule"/>
            </summary>
            <param name="rule">
            The rule.
            </param>
            <returns>
            the local code with <see cref="F:Estat.Ma.Model.TranscodingRuleComparer._columnId"/> from the specified <paramref name="rule"/>
            </returns>
        </member>
        <member name="T:Estat.Ma.Model.TranscodingRule">
            <summary>
            This class holds Transcoding rule information
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.RecordStatusBase">
            <summary>
            Base class for Model classes with <see cref="T:Estat.Ma.Model.RecordStatus"/>
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.RecordStatusBase._status">
            <summary>
            Gets or sets the record status
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.RecordStatusBase.Status">
            <summary>
            Gets or sets the record status
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.TranscodingRule._localCodes">
            <summary>
            The Local codes of this <see cref="T:Estat.Ma.Model.TranscodingRule"/>
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.TranscodingRule._dsdCodes">
            <summary>
            The DSD codes of this <see cref="T:Estat.Ma.Model.TranscodingRule"/>
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.TranscodingRule._transcodingRuleId">
            <summary>
            The TRANSCODING_RULE.TR_RULE_ID value
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.TranscodingRule.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.TranscodingRule"/> class.
            </summary>
            <param name="transcodingRuleId">
            The TRANSCODING_RULE.TR_RULE_ID value
            </param>
        </member>
        <member name="P:Estat.Ma.Model.TranscodingRule.LocalCodes">
            <summary>
            Gets the Local codes of this <see cref="T:Estat.Ma.Model.TranscodingRule"/>
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.TranscodingRule.DSDCodes">
            <summary>
            Gets the DSD codes of this <see cref="T:Estat.Ma.Model.TranscodingRule"/>
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.TranscodingRule.TranscodingRuleId">
            <summary>
            Gets the TRANSCODING_RULE.TR_RULE_ID value
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertTranscodingScript">
            <summary>
              This class contains the stored procedure INSERT_TRANSCODING_SCRIPT name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertTranscodingScript.ContentParameterName">
            <summary>
              Gets the p_content parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertTranscodingScript.StoredProcedureName">
            <summary>
              Gets the INSERT_TRANSCODING_SCRIPT stored procedure name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertTranscodingScript.TitleParameterName">
            <summary>
              Gets the p_title parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertTranscodingScript.TrIdParameterName">
            <summary>
              Gets the p_tr_id parameter name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertTranscodingScript.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertTranscodingScript"/> class.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertTranscodingScript.CreateContentParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_content parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_content with type DbType.String 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertTranscodingScript.CreateTitleParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_title parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_title with type DbType.String 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertTranscodingScript.CreateTrIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_tr_id parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_tr_id with type DbType.Int64 
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertTranscodingScript.ContentType">
            <summary>
              Gets the p_content parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertTranscodingScript.TitleType">
            <summary>
              Gets the p_title parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertTranscodingScript.TrIdType">
            <summary>
              Gets the p_tr_id parameter type
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertTranscoding">
            <summary>
              This class contains the stored procedure INSERT_TRANSCODING name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertTranscoding.ExpressionParameterName">
            <summary>
              Gets the p_expression parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertTranscoding.MapIdParameterName">
            <summary>
              Gets the p_map_id parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertTranscoding.StoredProcedureName">
            <summary>
              Gets the INSERT_TRANSCODING stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertTranscoding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertTranscoding"/> class.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertTranscoding.CreateCommandWithDefaults(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified <paramref name="database"/>.
            </summary>
            <param name="database">The database.</param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified <paramref name="database"/>.
            </returns>
            <remarks>The <paramref name="database"/> instance may or may not be transactional.</remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertTranscoding.CreateExpressionParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_expression parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_expression with type DbType.String 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertTranscoding.CreateMapIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_map_id parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_map_id with type DbType.Int64 
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertTranscoding.ExpressionType">
            <summary>
              Gets the p_expression parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertTranscoding.MapIdType">
            <summary>
              Gets the p_map_id parameter type
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertAnnotationText">
            <summary>
              This class contains the stored procedure INSERT_LOCALISED_STRING name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertAnnotationText.AnnIdParameterName">
            <summary>
              Gets the p_art_id parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertAnnotationText.LanguageParameterName">
            <summary>
              Gets the p_language parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertAnnotationText.StoredProcedureName">
            <summary>
              Gets the INSERT_LOCALISED_STRING stored procedure name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertAnnotationText.TextParameterName">
            <summary>
              Gets the p_text parameter name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertAnnotationText.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertAnnotationText"/> class.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertAnnotationText.CreateCommandWithDefaults(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified <paramref name="database"/>.
            </summary>
            <param name="database">The database.</param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified <paramref name="database"/>.
            </returns>
            <remarks>The <paramref name="database"/> instance may or may not be transactional.</remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertAnnotationText.CreateAnnIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the <c>p_ann_id</c> parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The DB command 
            </param>
            <returns>
            a new instance of <c>DbParameter</c> for <c>p_art_id</c> with type <c>DbType.String</c> 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertAnnotationText.CreateLanguageParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the <c>p_language</c> parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The DB command 
            </param>
            <returns>
            a new instance of <c>DbParameter</c> for <c>p_language</c> with type <c>DbType.String </c>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertAnnotationText.CreateTextParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the <c>p_text</c> parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The DB command 
            </param>
            <returns>
            a new instance of <c>DbParameter</c> for <c>p_text</c> with type <c>DbType.String</c> 
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertAnnotationText.AnnIdType">
            <summary>
              Gets the p_art_id parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertAnnotationText.LanguageType">
            <summary>
              Gets the p_language parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertAnnotationText.TextType">
            <summary>
              Gets the p_text parameter type
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.IRelation">
            <summary>
            The Relation interface.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.IRelation.AddColumnMapping">
            <summary>
                Add a new column mapping.
            </summary>
            <returns>
                The <see cref="T:Estat.Ma.Model.QueryEditor.ColumnMapping"/>
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IRelation.ColumnMappings">
            <summary>
                Gets the column mappings.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.CrossJoinRelation">
            <summary>
            The cross join relation.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.TableRelationBase">
            <summary>
            The table relation base.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.TableRelationBase._tableInstanceFrom">
            <summary>
                The _ table instance from.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.TableRelationBase._tableInstanceTo">
            <summary>
                The _ table instance to.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.TableRelationBase.#ctor(Estat.Ma.Model.QueryEditor.ITableInstance,Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.TableRelationBase"/> class.
            </summary>
            <param name="sourceTable">
            The source Table.
            </param>
            <param name="destinationTable">
            The destination Table.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="destinationTable"/> is null
            -or-
            <paramref name="sourceTable"/> is null
            </exception>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.TableRelationBase.TableInstanceFrom">
            <summary>
                Gets or sets the table instance from.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.TableRelationBase.TableInstanceTo">
            <summary>
                Gets or sets the table instance to.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.ICrossJoinRelation">
            <summary>
            The CrossJoinRelation interface.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.CrossJoinRelation.#ctor(Estat.Ma.Model.QueryEditor.ITableInstance,Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.CrossJoinRelation"/> class.
            </summary>
            <param name="sourceTable">
            The source table.
            </param>
            <param name="destinationTable">
            The destination table.
            </param>
        </member>
        <member name="T:Estat.Ma.Model.MappingSetObject">
            <summary>
            The mapping set object.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.MappingSetObject._sysId">
            <summary>
            Gets the primary key identifier
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.MappingSetObject._id">
            <summary>
            Gets the mapping set ID
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.MappingSetObject._description">
            <summary>
            Gets the mapping set description
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.MappingSetObject._dataflowUrn">
            <summary>
            Gets the dataflow urn
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.MappingSetObject.#ctor(System.Int64,System.String,System.String,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.MappingSetObject"/> class.
            </summary>
            <param name="sysId">The system identifier.</param>
            <param name="id">The identifier.</param>
            <param name="description">The description.</param>
            <param name="dataflowUrn">The dataflow urn.</param>
        </member>
        <member name="M:Estat.Ma.Model.MappingSetObject.#ctor(System.Int64,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.MappingSetObject"/> class.
            </summary>
            <param name="sysId">The system identifier.</param>
            <param name="id">The identifier.</param>
            <param name="description">The description.</param>
            <param name="dataflowAgency">The dataflow agency.</param>
            <param name="dataflowId">The dataflow identifier.</param>
            <param name="dataflowVersion">The dataflow version.</param>
        </member>
        <member name="P:Estat.Ma.Model.MappingSetObject.DataflowUrn">
            <summary>
            Gets the dataflow urn
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.MappingSetObject.Description">
            <summary>
            Gets the mapping set description
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.MappingSetObject.ID">
            <summary>
            Gets the mapping set ID
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.MappingSetObject.SysId">
            <summary>
            Gets the primary key identifier
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.LocalisedStringCollection">
            <summary>
            This class holds a collection of <see cref="T:Estat.Ma.Model.LocalisationString"/>
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.LocalCodeMap">
            <summary>
            This class holds a <see cref="T:System.Collections.Generic.Dictionary`2"/> between the name and the <see cref="T:Estat.Ma.Model.LocalColumnCode"/>
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.LocalCodeMap.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.LocalCodeMap"/> class.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertStructureSet">
            <summary>
              This class contains the stored procedure INSERT_STRUCTURE_SET name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertStructureSet.StoredProcedureName">
            <summary>
              Gets the INSERT_STRUCTURE_SET stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertStructureSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertStructureSet"/> class.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertCodeMapProcedure">
            <summary>
                The code map procedure.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.MapProcedureBase">
            <summary>
                The base stored procedure class for structure set map items.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.IMapProcedureBase.CreateParentIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Returns the parent (another map or a structure set) identifier parameter of the specified
                <paramref name="command"/>.
                If it does not exist it will add it.
            </summary>
            <param name="command">
            The command.
            </param>
            <returns>
            The input <see cref="T:System.Data.Common.DbParameter"/> of type <see cref="F:System.Data.DbType.Int64"/> and name
                <see cref="P:Estat.Ma.Model.StoredProcedure.MapProcedureBase.ParentIdParameterName"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.IMapProcedureBase.CreateSourceIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the source identifier parameter.
            </summary>
            <param name="command">
            The command.
            </param>
            <returns>
            The input <see cref="T:System.Data.Common.DbParameter"/> of type <see cref="F:System.Data.DbType.Int64"/> and name
                <see cref="P:Estat.Ma.Model.StoredProcedure.MapProcedureBase.SourceIdParameterName"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.IMapProcedureBase.CreateTargetIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the source identifier parameter.
            </summary>
            <param name="command">
            The command.
            </param>
            <returns>
            The input <see cref="T:System.Data.Common.DbParameter"/> of type <see cref="F:System.Data.DbType.Int64"/> and name
                <see cref="P:Estat.Ma.Model.StoredProcedure.MapProcedureBase.SourceIdParameterName"/>
            </returns>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.MapProcedureBase._outputProcedure">
            <summary>
            The _output procedure
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.MapProcedureBase.#ctor(Estat.Ma.Model.StoredProcedure.IOutputProcedure)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.MapProcedureBase"/> class.
            </summary>
            <param name="outputProcedure">The output procedure.</param>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.MapProcedureBase.CreateCommand(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="database"/>.
            </summary>
            <param name="database">
            The database.
            </param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="database"/>.
            </returns>
            <remarks>
            The <paramref name="database"/> instance may or may not be transactional.
            </remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.MapProcedureBase.CreateCommand(System.Data.Common.DbConnection,System.Data.Common.DbTransaction)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="connection"/> and <paramref name="transaction"/>
            </summary>
            <param name="connection">
            The connection
            </param>
            <param name="transaction">
            The transaction; otherwise set to null
            </param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="connection"/> and <paramref name="transaction"/>
            </returns>
            <remarks>
            It sets the following <see cref="T:System.Data.Common.DbCommand"/> properties <see cref="P:System.Data.Common.DbCommand.Connection"/> ,
                <see cref="P:System.Data.Common.DbCommand.Transaction"/> , <see cref="P:System.Data.Common.DbCommand.CommandType"/> and
                <see cref="P:System.Data.Common.DbCommand.CommandText"/>
            </remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.MapProcedureBase.CreateCommandWithDefaults(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="database"/>.
            </summary>
            <param name="database">
            The database.
            </param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="database"/>.
            </returns>
            <remarks>
            The <paramref name="database"/> instance may or may not be transactional.
            </remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.MapProcedureBase.CreateParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Data.ParameterDirection)">
            <summary>
            Create parameter for the specified <paramref name="command"/> and add it to the command
            </summary>
            <param name="command">
            The command
            </param>
            <param name="name">
            The parameter name
            </param>
            <param name="dbType">
            The type
            </param>
            <param name="direction">
            The direction
            </param>
            <returns>
            The new <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.MapProcedureBase.CreateParameter``1(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Data.ParameterDirection,``0)">
            <summary>
            Create parameter for the specified <paramref name="command"/> and add it to the command
            </summary>
            <typeparam name="T">
            The parameter type.
            </typeparam>
            <param name="command">
            The command
            </param>
            <param name="name">
            The parameter name
            </param>
            <param name="dbType">
            The type
            </param>
            <param name="direction">
            The direction
            </param>
            <param name="value">
            The value.
            </param>
            <returns>
            The new <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.MapProcedureBase.CreateOutputParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the <c>'p_pk'</c> parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The DB command 
            </param>
            <returns>
            The parameter for <c>'p_pk'</c> parameter 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.MapProcedureBase.CreateParentIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Returns the parent (another map or a structure set) identifier parameter of the specified
                <paramref name="command"/>.
                If it does not exist it will add it.
            </summary>
            <param name="command">
            The command.
            </param>
            <returns>
            The input <see cref="T:System.Data.Common.DbParameter"/> of type <see cref="F:System.Data.DbType.Int64"/> and name
                <see cref="P:Estat.Ma.Model.StoredProcedure.MapProcedureBase.ParentIdParameterName"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.MapProcedureBase.CreateSourceIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the source identifier parameter.
            </summary>
            <param name="command">
            The command.
            </param>
            <returns>
            The input <see cref="T:System.Data.Common.DbParameter"/> of type <see cref="F:System.Data.DbType.Int64"/> and name
                <see cref="P:Estat.Ma.Model.StoredProcedure.MapProcedureBase.SourceIdParameterName"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.MapProcedureBase.CreateTargetIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the source identifier parameter.
            </summary>
            <param name="command">
            The command.
            </param>
            <returns>
            The input <see cref="T:System.Data.Common.DbParameter"/> of type <see cref="F:System.Data.DbType.Int64"/> and name
                <see cref="P:Estat.Ma.Model.StoredProcedure.MapProcedureBase.SourceIdParameterName"/>
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.MapProcedureBase.ParentIdParameterName">
            <summary>
                Gets the name of the parent (another map or a structure set) parameter.
            </summary>
            <value>
                The name of the scheme parameter.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.MapProcedureBase.SourceIdParameterName">
            <summary>
                Gets the name of the source identifier parameter.
            </summary>
            <value>
                The name of the source identifier parameter.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.MapProcedureBase.TargetIdParameterName">
            <summary>
                Gets the name of the target identifier parameter.
            </summary>
            <value>
                The name of the source identifier parameter.
            </value>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertCodeMapProcedure.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertCodeMapProcedure"/> class.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertCodeMapProcedure.ParentIdParameterName">
            <summary>
                Gets the name of the parent (another map or a structure set) parameter.
            </summary>
            <value>
                The name of the scheme parameter.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertCodeMapProcedure.SourceIdParameterName">
            <summary>
                Gets the name of the source identifier parameter.
            </summary>
            <value>
                The name of the source identifier parameter.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertCodeMapProcedure.TargetIdParameterName">
            <summary>
                Gets the name of the target identifier parameter.
            </summary>
            <value>
                The name of the source identifier parameter.
            </value>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertCodeListMapProcedure">
            <summary>
                The code list map procedure.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.SchemeMapProcedureBase">
            <summary>
            The scheme map procedure base.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.SchemeMapProcedureBase._identifiableProcedure">
            <summary>
            The _identifiable procedure
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.SchemeMapProcedureBase.#ctor(Estat.Ma.Model.StoredProcedure.IOutputProcedure)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.MapProcedureBase"/> class.
            </summary>
            <param name="outputProcedure">The output procedure.</param>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.SchemeMapProcedureBase.CreateIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_id parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The DB command 
            </param>
            <returns>
            A new instance of the p_id parameter 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertCodeListMapProcedure.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertCodeListMapProcedure"/> class.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertCodeListMapProcedure.ParentIdParameterName">
            <summary>
                Gets the name of the parent (another map or a structure set) parameter.
            </summary>
            <value>
                The name of the scheme parameter.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertCodeListMapProcedure.SourceIdParameterName">
            <summary>
                Gets the name of the source identifier parameter.
            </summary>
            <value>
                The name of the source identifier parameter.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertCodeListMapProcedure.TargetIdParameterName">
            <summary>
                Gets the name of the target identifier parameter.
            </summary>
            <value>
                The name of the source identifier parameter.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IColumnMapping.ColumnInstanceFrom">
            <summary>
            Gets or sets the column instance from.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IColumnMapping.ColumnInstanceTo">
            <summary>
            Gets or sets the column instance to.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IColumnMapping.QueryMetadata">
            <summary>
            Gets the query metadata.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IColumnMapping.Relation">
            <summary>
            Gets the relation.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.ColumnsMergingCollection">
            <summary>
            The columns merging collection.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.ColumnsMergingCollection._QueryMetadata">
            <summary>
            The _ query metadata.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ColumnsMergingCollection.#ctor(Estat.Ma.Model.QueryEditor.IQueryMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.ColumnsMergingCollection"/> class.
            </summary>
            <param name="querymetadata">
            The query metadata.
            </param>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ColumnsMergingCollection.GeneratedDimensionColumnInstance">
            <summary>
            Gets or sets the generated dimension column instance.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ColumnsMergingCollection.GeneratedMeasureColumnInstance">
            <summary>
            Gets or sets the generated measure column instance.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ColumnsMergingCollection.QueryMetadata">
            <summary>
            Gets the query metadata.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertDsdCode">
            <summary>
              This class contains the stored procedure INSERT_DSD_CODE name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertDsdCode.ClIdParameterName">
            <summary>
              Gets the <c>p_cl_id</c> parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertDsdCode.ParentCodeParameterName">
            <summary>
              Gets the <c>p_parent_code</c> parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertDsdCode.StoredProcedureName">
            <summary>
              Gets the INSERT_DSD_CODE stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertDsdCode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertDsdCode"/> class.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertDsdCode.SchemeParameterName">
            <summary>
            Gets the name of the scheme parameter.
            </summary>
            <value>
            The name of the scheme parameter.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertDsdCode.ParentItemParameterName">
            <summary>
            Gets the name of the parent item parameter.
            </summary>
            <value>
            The name of the parent item parameter.
            </value>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertAgencyScheme">
            <summary>
              This class contains the stored procedure INSERT_AGENCY_SCHEME name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertAgencyScheme.StoredProcedureName">
            <summary>
              Gets the INSERT_AGENCY_SCHEME stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertAgencyScheme.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertAgencyScheme"/> class.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertComponentMapProcedure">
            <summary>
                The code map procedure.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertComponentMapProcedure.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertComponentMapProcedure"/> class.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertComponentMapProcedure.ParentIdParameterName">
            <summary>
                Gets the name of the parent (another map or a structure set) parameter.
            </summary>
            <value>
                The name of the scheme parameter.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertComponentMapProcedure.SourceIdParameterName">
            <summary>
                Gets the name of the source identifier parameter.
            </summary>
            <value>
                The name of the source identifier parameter.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertComponentMapProcedure.TargetIdParameterName">
            <summary>
                Gets the name of the target identifier parameter.
            </summary>
            <value>
                The name of the source identifier parameter.
            </value>
        </member>
        <member name="T:Estat.Ma.Model.RecordStatus">
            <summary>
            Record status
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.RecordStatus.None">
            <summary>
            No change/unmodified
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.RecordStatus.New">
            <summary>
            New record
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.RecordStatus.Deleted">
            <summary>
            deleted record
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.RecordStatus.Modified">
            <summary>
            Modified record
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.IColumnInstance">
            <summary>
            The ColumnInstance interface.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.IColumnInstance.IsMerged">
            <summary>
                The is merged.
            </summary>
            <returns>
                The System.Boolean.
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IColumnInstance.FixedValue">
            <summary>
                Gets or sets the fixed value.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IColumnInstance.ID">
            <summary>
                Gets or sets the id.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IColumnInstance.Index">
            <summary>
                Gets or sets the index.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IColumnInstance.IsFixedValue">
            <summary>
                Gets or sets a value indicating whether is fixed value.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IColumnInstance.IsPrimaryKey">
            <summary>
                Gets or sets a value indicating whether is primary key.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IColumnInstance.IsReturned">
            <summary>
                Gets or sets a value indicating whether is returned.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IColumnInstance.Name">
            <summary>
                Gets or sets the name.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IColumnInstance.QueryMetadata">
            <summary>
                Gets the query metadata.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IColumnInstance.TableInstance">
            <summary>
                Gets the table instance.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IColumnInstance.Type">
            <summary>
                Gets or sets the type.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.DataSetColumnCollection">
            <summary>
            This class holds a collection of <see cref="T:Estat.Ma.Model.DataSetColumn"/>
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.DataSetColumnCollection._log">
            <summary>
            The _log
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.DataSetColumnCollection.UpdateFromLocalCodeList(System.Func{Estat.Ma.Model.DataSetColumn,Estat.Ma.Model.LocalCodesList})">
            <summary>
            Updates from local code list.
            </summary>
            <param name="getLocalCodelist">The function to get the <see cref="T:Estat.Ma.Model.LocalCodesList"/> for each <see cref="T:Estat.Ma.Model.DataSetColumn"/>.</param>
        </member>
        <member name="M:Estat.Ma.Model.DataSetColumnCollection.GetKeyForItem(Estat.Ma.Model.DataSetColumn)">
            <summary>
            When implemented in a derived class, extracts the key from the specified element.
            </summary>
            <returns>
            The key for the specified element.
            </returns>
            <param name="item">The element from which to extract the key.
            </param>
        </member>
        <member name="T:Estat.Ma.Model.ArtefactSdmx21Upgrade">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertHlevel">
            <summary>
              This class contains the stored procedure INSERT_HLEVEL name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertHlevel.HIdParameterName">
            <summary>
              Gets the p_h_id parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertHlevel.ParentLevelIdParameterName">
            <summary>
              Gets the p_parent_level_id parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertHlevel.StoredProcedureName">
            <summary>
              Gets the INSERT_HLEVEL stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertHlevel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertHlevel"/> class.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertHlevel.CreateCommandWithDefaults(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified <paramref name="database"/>.
            </summary>
            <param name="database">The database.</param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified <paramref name="database"/>.
            </returns>
            <remarks>The <paramref name="database"/> instance may or may not be transactional.</remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertHlevel.CreateHIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_h_id parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_h_id with type DbType.Int64 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertHlevel.CreateParentLevelIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_parent_level_id parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_parent_level_id with type DbType.Int64 
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertHlevel.HIdType">
            <summary>
              Gets the p_h_id parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertHlevel.ParentLevelIdType">
            <summary>
              Gets the p_parent_level_id parameter type
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertDsd">
            <summary>
              This class contains the stored procedure INSERT_DSD name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertDsd.StoredProcedureName">
            <summary>
              Gets the INSERT_DSD stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertDsd.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertDsd"/> class.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertCategorisation">
            <summary>
              This class contains the stored procedure <c>INSERT_CATEGORISATION</c> name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertCategorisation.ArtIdParameterName">
            <summary>
              Gets the <c>p_art_id</c> parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertCategorisation.CatIdParameterName">
            <summary>
              Gets the p_cat_id parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertCategorisation.StoredProcedureName">
            <summary>
              Gets the <c>INSERT_CATEGORISATION</c> stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertCategorisation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertCategorisation"/> class.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertCategorisation.CreateArtIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the <c>p_art_id</c> parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The DB command 
            </param>
            <returns>
            a new instance of DbParameter for <c>p_art_id</c> with type DbType.Int64 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertCategorisation.CreateCatIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_cat_id parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The DB command 
            </param>
            <returns>
            a new instance of DbParameter for p_cat_id with type DbType.Int64 
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertCategorisation.ArtIdType">
            <summary>
              Gets the <c>p_art_id</c>  parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertCategorisation.CatIdType">
            <summary>
              Gets the p_map_set_id parameter type
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertItemAnnotation">
            <summary>
                The annotation item procedure.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.AnnotationProcedureBase">
            <summary>
                The annotation procedure base.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.AnnotationProcedureBase.IdParameterName">
            <summary>
                The identifier parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.AnnotationProcedureBase.TitleParameterName">
            <summary>
                The title parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.AnnotationProcedureBase.TypeParameterName">
            <summary>
                The type parameter name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.AnnotationProcedureBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.AnnotationProcedureBase"/> class. 
            </summary>
            <param name="procedureName">
            Name of the procedure.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.AnnotationProcedureBase.CreateCommandWithDefaults(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified <paramref name="database"/>.
            </summary>
            <param name="database">The database.</param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified <paramref name="database"/>.
            </returns>
            <remarks>The <paramref name="database"/> instance may or may not be transactional.</remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.AnnotationProcedureBase.CreateIdParameter(System.Data.Common.DbCommand,System.String)">
            <summary>
            Creates the identifier parameter.
            </summary>
            <param name="command">
            The command.
            </param>
            <param name="value">
            The value.
            </param>
            <returns>
            The <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.AnnotationProcedureBase.CreateParentIdParameter(System.Data.Common.DbCommand,System.Int64)">
            <summary>
            Creates the parent identifier parameter.
            </summary>
            <param name="command">
            The command.
            </param>
            <param name="value">
            The value.
            </param>
            <returns>
            The <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.AnnotationProcedureBase.CreateTitleParameter(System.Data.Common.DbCommand,System.String)">
            <summary>
            Creates the identifier parameter.
            </summary>
            <param name="command">
            The command.
            </param>
            <param name="value">
            The value.
            </param>
            <returns>
            The <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.AnnotationProcedureBase.CreateTypeParameter(System.Data.Common.DbCommand,System.String)">
            <summary>
            Creates the identifier parameter.
            </summary>
            <param name="command">
            The command.
            </param>
            <param name="value">
            The value.
            </param>
            <returns>
            The <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.AnnotationProcedureBase.CreateUriParameter(System.Data.Common.DbCommand,System.String)">
            <summary>
            Creates the identifier parameter.
            </summary>
            <param name="command">
            The command.
            </param>
            <param name="value">
            The value.
            </param>
            <returns>
            The <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.AnnotationProcedureBase.ParentIdParameterName">
            <summary>
                Gets the name of the annotate-able identifier parameter.
            </summary>
            <value>
                The name of the annotate able identifier parameter.
            </value>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertItemAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertItemAnnotation"/> class. 
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertItemAnnotation.ParentIdParameterName">
            <summary>
                Gets the name of the annotate-able identifier parameter.
            </summary>
            <value>
                The name of the annotate able identifier parameter.
            </value>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.ColumnMapping">
            <summary>
            The column mapping.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.ColumnMapping._QueryMetadata">
            <summary>
            The _ query metadata.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.ColumnMapping._Relation">
            <summary>
            The _ relation.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ColumnMapping.#ctor(Estat.Ma.Model.QueryEditor.IRelation)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.ColumnMapping"/> class.
            </summary>
            <param name="relation">The relation.</param>
            <exception cref="T:System.Exception">Relation does not belong to a QueryMetadata</exception>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ColumnMapping.ColumnInstanceFrom">
            <summary>
            Gets or sets the column instance from.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ColumnMapping.ColumnInstanceTo">
            <summary>
            Gets or sets the column instance to.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ColumnMapping.QueryMetadata">
            <summary>
            Gets the query metadata.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ColumnMapping.Relation">
            <summary>
            Gets the relation.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.LocalColumnCode">
            <summary>
            This class holds local code information
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.LocalColumnCode._datasetColumnId">
            <summary>
            The LOCAL_CODE.COLUMN_ID value
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.LocalColumnCode._names">
            <summary>
            Gets collection of localised names
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.LocalColumnCode._descriptions">
            <summary>
            Gets collection of localised descriptions
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.LocalColumnCode._value">
            <summary>
            The ITEM.ID value
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.LocalColumnCode._codeId">
            <summary>
            The LOCAL_CODE.LCD_ID value
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.LocalColumnCode.#ctor(System.Int64,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.LocalColumnCode"/> class.
            </summary>
            <param name="datasetColumnId">
            The LOCAL_CODE.COLUMN_ID value
            </param>
            <param name="value">
            The value.
            </param>
        </member>
        <member name="P:Estat.Ma.Model.LocalColumnCode.Names">
            <summary>
            Gets collection of localised names
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.LocalColumnCode.Descriptions">
            <summary>
            Gets collection of localised descriptions
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.LocalColumnCode.DatasetColumnId">
            <summary>
            Gets the LOCAL_CODE.COLUMN_ID value
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.LocalColumnCode.Value">
            <summary>
            Gets the ITEM.ID value
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.LocalColumnCode.CodeId">
            <summary>
            Gets or sets the LOCAL_CODE.LCD_ID value
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.DsdComponent">
            <summary>
            This class holds DSD Component information
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.DsdComponent._componentId">
            <summary>
            Gets the component key, the COMPONENT.COMP_ID value
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.DsdComponent._codelistId">
            <summary>
            Gets the codelist key, the COMPONENT.CL_ID value
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.DsdComponent._id">
            <summary>
            Gets the concept ID of the component.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.DsdComponent.#ctor(System.Int64,System.Int64,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.DsdComponent"/> class.
            </summary>
            <param name="componentId">
            The component id.
            </param>
            <param name="codelistId">
            The codelist id.
            </param>
            <param name="id">
            The id.
            </param>
        </member>
        <member name="P:Estat.Ma.Model.DsdComponent.ComponentId">
            <summary>
            Gets the component key, the COMPONENT.COMP_ID value
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.DsdComponent.CodelistId">
            <summary>
            Gets the codelist key, the COMPONENT.CL_ID value
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.DsdComponent.Id">
            <summary>
            Gets the concept ID of the component.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.DsdComponent.Position">
            <summary>
            Gets or sets the position of the component inside the transcoding
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertDataConsumer">
            <summary>
              This class contains the stored procedure INSERT_DATACONSUMER name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertDataConsumer.SchemeIdParameterName">
            <summary>
              Gets the <c>p_datacons_sch_id</c> parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertDataConsumer.StoredProcedureName">
            <summary>
              Gets the INSERT_DATACONSUMER stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertDataConsumer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertDataConsumer"/> class.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertDataConsumer.SchemeParameterName">
            <summary>
            Gets the name of the scheme parameter.
            </summary>
            <value>
            The name of the scheme parameter.
            </value>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertCubeRegionProcedure">
            <summary>
            The insert cube region procedure.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertCubeRegionProcedure.StoredProcedureName">
            <summary>
            The stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertCubeRegionProcedure.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertCubeRegionProcedure"/> class.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertCubeRegionProcedure.CreateContentConstraintIdParameter(System.Data.Common.DbCommand,System.Int64)">
            <summary>
            Gets the content constraint identifier parameter.
            </summary>
            <param name="command">
            The command.
            </param>
            <param name="value">
            The value.
            </param>
            <returns>
            The <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertCubeRegionProcedure.CreateIncludeParameter(System.Data.Common.DbCommand,System.Boolean)">
            <summary>
            Creates the include parameter.
            </summary>
            <param name="command">The command.</param>
            <param name="value">the parameter value.</param>
            <returns>
            The <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.Value">
            <summary>
            The value.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.Value._Val">
            <summary>
            The _ val.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.Value._operator">
            <summary>
              The comparison operator used to compare against this value
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.Value.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.Value"/> class.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.Value.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.Value"/> class.
            </summary>
            <param name="val">
            The val.
            </param>
            <param name="op">
            The op.
            </param>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.Value.Operator">
            <summary>
              The comparison operator used to compare against this value
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.Value.Val">
            <summary>
            Gets or sets the val.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.MergedColumnType">
            <summary>
            The merged column type.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.MergedColumnType.IsMergedDimension">
            <summary>
            The is merged dimension.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.MergedColumnType.IsMergedMeasure">
            <summary>
            The is merged measure.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.IDescriptionSource">
            <summary>
            A model class for requesting description.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.IDescriptionSource.DescriptionTableName">
            <summary>
            Gets or sets the name of the description table. If it is null or empty it will be ignored.
            </summary>
            <value>
            The description table.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.IDescriptionSource.RelatedFieldName">
            <summary>
            Gets or sets the related field. This is the field in the description table <see cref="P:Estat.Ma.Model.IDescriptionSource.DescriptionTableName"/> that is related to the field in the data table <see cref="!:DataSetTableName"/>. If it is null or empty it will be ignored.
            </summary>
            <value>
            The related field.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.IDescriptionSource.DescriptionFieldName">
            <summary>
            Gets or sets the description field. This is the field in the <see cref="P:Estat.Ma.Model.IDescriptionSource.DescriptionTableName"/> that contains the description. If it is null or empty it will be ignored.
            </summary>
            <value>
            The description field.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.IDescriptionSource.HasDescriptionSourceInfo">
            <summary>
            Gets a value indicating whether this instance has description source info. Meaning that <see cref="P:Estat.Ma.Model.IDescriptionSource.DescriptionFieldName"/>, <see cref="P:Estat.Ma.Model.IDescriptionSource.DescriptionTableName"/>  and <see cref="P:Estat.Ma.Model.IDescriptionSource.RelatedFieldName"/> have a value.
            </summary>
            <value>
            <c>true</c> if this instance has description source info; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Estat.Ma.Model.ValidationStatus">
            <summary>
            The validation status.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.ValidationStatus._errorMessage">
            <summary>
            The _error message.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.ValidationStatus._state">
            <summary>
            The _state.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.ValidationStatus.#ctor(Estat.Ma.Model.ValidationState,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.ValidationStatus"/> class.
            </summary>
            <param name="state">
            The state.
            </param>
            <param name="errorMessage">
            The error message.
            </param>
        </member>
        <member name="P:Estat.Ma.Model.ValidationStatus.ErrorMessage">
            <summary>
            Gets the error message.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.ValidationStatus.State">
            <summary>
            Gets the state.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.ValidationState">
            <summary>
            The validation state.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.ValidationState.Success">
            <summary>
            The success.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.ValidationState.Error">
            <summary>
            The error.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.ValidationState.Warning">
            <summary>
            The warning.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.ValidationState.InvalidCodes">
            <summary>
            Invalid codes.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.TranscodingRuleCollection">
            <summary>
            This class holds a collection of <see cref="T:Estat.Ma.Model.TranscodingRule"/>
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.TranscodingRuleCollection.GetKeyForItem(Estat.Ma.Model.TranscodingRule)">
            <summary>
            When implemented in a derived class, extracts the key from the specified element.
            </summary>
            <returns>
            The key for the specified element.
            </returns>
            <param name="item">The element from which to extract the key.
            </param>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertItem">
            <summary>
              This class contains the stored procedure INSERT_ITEM name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertItem.StoredProcedureName">
            <summary>
              Gets the INSERT_ITEM stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertItem"/> class.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertArtefact">
            <summary>
              This class contains the stored procedure INSERT_ARTEFACT name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertArtefact.StoredProcedureName">
            <summary>
              Gets the INSERT_ARTEFACT stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertArtefact.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertArtefact"/> class.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.LogicalOperators">
            <summary>
              This enum contains the logical operators to be used between conditions
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.LogicalOperators.AND">
            <summary>
            The and.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.LogicalOperators.OR">
            <summary>
            The or.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.DescriptionSource">
            <summary>
                The default implementation of <see cref="T:Estat.Ma.Model.IDescriptionSource"/>
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.DescriptionSource.ColumnId">
            <summary>
                Gets or sets the dataset column id. This is the mapping store table <c>DATASET_COLUMN.COL_ID</c> primary key value
                and the <c>DESC_SOURCE.COL_ID</c>.
            </summary>
            <value>
                The column id.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.DescriptionSource.DataSetColumnName">
            <summary>
                Gets or sets the name of the dataset column name.
            </summary>
            <value>
                The name of the data column.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.DescriptionSource.DataSetTableName">
            <summary>
                Gets or sets the name of the dataset table. Can be an SQL Query
            </summary>
            <value>
                The name of the dataset table.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.DescriptionSource.DescriptionFieldName">
            <summary>
                Gets or sets the description field. This is the field in the <see cref="P:Estat.Ma.Model.IDescriptionSource.DescriptionTableName"/>
                that contains the description. If it is null or empty it will be ignored.
            </summary>
            <value>
                The description field.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.DescriptionSource.DescriptionTableName">
            <summary>
                Gets or sets the name of the description table. If it is null or empty it will be ignored.
            </summary>
            <value>
                The description table.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.DescriptionSource.HasDescriptionSourceInfo">
            <summary>
                Gets a value indicating whether this instance has description source info. Meaning that
                <see cref="P:Estat.Ma.Model.IDescriptionSource.DescriptionFieldName"/>, <see cref="P:Estat.Ma.Model.IDescriptionSource.DescriptionTableName"/>  and
                <see cref="P:Estat.Ma.Model.IDescriptionSource.RelatedFieldName"/> have a value.
            </summary>
            <value>
                <c>true</c> if this instance has description source info; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.DescriptionSource.RelatedFieldName">
            <summary>
                Gets or sets the related field. This is the field in the description table
                <see cref="P:Estat.Ma.Model.IDescriptionSource.DescriptionTableName"/> that is related to the field in the data table
                <see cref="!:IDescriptionSource.DataSetTableName"/>. If it is null or empty it will be ignored.
            </summary>
            <value>
                The related field.
            </value>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertDataProviderScheme">
            <summary>
              This class contains the stored procedure INSERT_DATAPROVIDER_SCHEME name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertDataProviderScheme.StoredProcedureName">
            <summary>
              Gets the INSERT_DATAPROVIDER_SCHEME stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertDataProviderScheme.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertDataProviderScheme"/> class.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertContentConstraintProcedure">
            <summary>
                The content constraint procedure.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertContentConstraintProcedure.ActualDataParameterName">
            <summary>
                The actual data parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertContentConstraintProcedure.OffsetParameterName">
            <summary>
                The offset parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertContentConstraintProcedure.PeriodicityParameterName">
            <summary>
                The periodicity parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertContentConstraintProcedure.ToleranceParameterName">
            <summary>
                The tolerance parameter name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertContentConstraintProcedure.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertContentConstraintProcedure"/> class.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertContentConstraintProcedure.CreateCommandWithDefaults(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified <paramref name="database"/>.
            </summary>
            <param name="database">The database.</param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified <paramref name="database"/>.
            </returns>
            <remarks>The <paramref name="database"/> instance may or may not be transactional.</remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertContentConstraintProcedure.CreateActualDataParameter(System.Data.Common.DbCommand)">
            <summary>
            Gets the actual data parameter.
            </summary>
            <param name="command">The command.</param>
            <returns>
            The <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertContentConstraintProcedure.CreateOffsetParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the offset parameter.
            </summary>
            <param name="command">
            The command.
            </param>
            <returns>
            The <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertContentConstraintProcedure.CreatePeriodicityParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the periodicity parameter.
            </summary>
            <param name="command">
            The command.
            </param>
            <returns>
            The <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertContentConstraintProcedure.CreateToleranceParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the tolerance parameter.
            </summary>
            <param name="command">
            The command.
            </param>
            <returns>
            The <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.ColumnTableReferencesCollection">
            <summary>
            The column table references collection.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.ColumnTableReferencesCollection._QueryMetadata">
            <summary>
            The _ query metadata.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ColumnTableReferencesCollection.#ctor(Estat.Ma.Model.QueryEditor.IQueryMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.ColumnTableReferencesCollection"/> class.
            </summary>
            <param name="querymetadata">
            The query metadata.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ColumnTableReferencesCollection.Add(Estat.Ma.Model.QueryEditor.IColumnTableReference)">
            <summary>
            The add.
            </summary>
            <param name="c">
            The c.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ColumnTableReferencesCollection.ContainsColumnInstance(Estat.Ma.Model.QueryEditor.IColumnInstance)">
            <summary>
            The contains column instance.
            </summary>
            <param name="ci">
            The ci.
            </param>
            <returns>
            The System.Boolean.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ColumnTableReferencesCollection.ContainsTableInstance(Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            The contains table instance.
            </summary>
            <param name="ti">
            The ti.
            </param>
            <returns>
            The System.Boolean.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ColumnTableReferencesCollection.DoAdd(Estat.Ma.Model.QueryEditor.IColumnTableReference)">
            <summary>
            The do add.
            </summary>
            <param name="c">
            The c.
            </param>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ColumnTableReferencesCollection.QueryMetadata">
            <summary>
            Gets the query metadata.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.TranscodingScriptMap">
            <summary>
            A map between the TRANSCDOING SCRIPT PRIMARY KEY value and the <see cref="T:Estat.Ma.Model.TranscodingScript"/>
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.StoredProcedures">
            <summary>
                This class contains the list of known stored procedures in MSDB
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertAnnotationText">
            <summary>
            Gets the insert annotation Text procedure.
            </summary>
            <value>
            The insert annotation Text.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertGroupAnnotation">
            <summary>
            Gets the insert annotation Group procedure.
            </summary>
            <value>
            The insert annotation Group.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertComponentAnnotation">
            <summary>
            Gets the insert annotation Component procedure.
            </summary>
            <value>
            The insert annotation Component.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertItemAnnotation">
            <summary>
            Gets the insert annotation item.
            </summary>
            <value>
            The insert annotation item.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertArtefactAnnotation">
            <summary>
            Gets the insert annotation artefact.
            </summary>
            <value>
            The insert annotation artefact.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertStructureSet">
            <summary>
            Gets the insert structure set.
            </summary>
            <value>
            The insert structure set.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertDataConsumerScheme">
            <summary>
                Gets the data consumer scheme
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertDataConsumer">
            <summary>
                Gets the data consumer
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertDataProviderScheme">
            <summary>
                Gets the data provider scheme
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertDataProvider">
            <summary>
                Gets the data provider
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertAgencyScheme">
            <summary>
                Gets the insert agency scheme.
            </summary>
            <value>
                The insert agency scheme.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertAgency">
            <summary>
                Gets the insert agency
            </summary>
            <value>
                The insert agency
            </value>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertArtefact">
            <summary>
                Gets the <see cref="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertArtefact"/> stored procedure constants
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertCategorisation">
            <summary>
                Gets the <see cref="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertCategorisation"/> stored procedure constants
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertCategory">
            <summary>
                Gets the <see cref="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertCategory"/> stored procedure constants
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertCategoryScheme">
            <summary>
                Gets the <see cref="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertCategoryScheme"/> stored procedure constants
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertCodelist">
            <summary>
                Gets the <see cref="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertCodelist"/> stored procedure constants
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertComponent">
            <summary>
                Gets the <see cref="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertComponent"/> stored procedure constants
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertConcept">
            <summary>
                Gets the <see cref="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertConcept"/> stored procedure constants
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertConceptScheme">
            <summary>
                Gets the <see cref="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertConceptScheme"/> stored procedure constants
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertDataflow">
            <summary>
                Gets the <see cref="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertDataflow"/> stored procedure constants
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertDsd">
            <summary>
                Gets the <see cref="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertDsd"/> stored procedure constants
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertDsdCode">
            <summary>
                Gets the <see cref="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertDsdCode"/> stored procedure constants
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertDsdGroup">
            <summary>
                Gets the <see cref="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertDsdGroup"/> stored procedure constants
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertHcl">
            <summary>
                Gets the <see cref="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertHcl"/> stored procedure constants
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertHclCode">
            <summary>
                Gets the <see cref="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertHclCode"/> stored procedure constants
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertHierachy">
            <summary>
                Gets the <see cref="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertHierachy"/> stored procedure constants
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertHlevel">
            <summary>
                Gets the <see cref="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertHlevel"/> stored procedure constants
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertItem">
            <summary>
                Gets the <see cref="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertItem"/> stored procedure constants
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertLocalCode">
            <summary>
                Gets the <see cref="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertLocalCode"/> stored procedure constants
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertLocalisedString">
            <summary>
                Gets the <see cref="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertLocalisedString"/> stored procedure constants
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertTextFormat">
            <summary>
                Gets the <see cref="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertTextFormat"/> stored procedure constants
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertTranscoding">
            <summary>
                Gets the <see cref="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertTranscoding"/> stored procedure constants
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertTranscodingScript">
            <summary>
                Gets the <see cref="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertTranscodingScript"/> stored procedure constants
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertOrganisationUnitScheme">
            <summary>
                Gets the organization unit scheme
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.InsertOrganisationUnit">
            <summary>
                Gets the organization unit
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.StoredProcedures.UpdateTranscodingRule">
            <summary>
                Gets the UpdateTranscodingRule stored procedure constants
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertHclCode">
            <summary>
              This class contains the stored procedure INSERT_HCL_CODE name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertHclCode.HIdParameterName">
            <summary>
              Gets the p_h_id parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertHclCode.LcdIdParameterName">
            <summary>
              Gets the p_lcd_id parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertHclCode.LevelIdParameterName">
            <summary>
              Gets the p_level_id parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertHclCode.ParentHcodeIdParameterName">
            <summary>
              Gets the p_parent_hcode_id parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertHclCode.StoredProcedureName">
            <summary>
              Gets the INSERT_HCL_CODE stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertHclCode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertHclCode"/> class.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertHclCode.CreateCommandWithDefaults(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified <paramref name="database"/>.
            </summary>
            <param name="database">The database.</param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified <paramref name="database"/>.
            </returns>
            <remarks>The <paramref name="database"/> instance may or may not be transactional.</remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertHclCode.CreateHIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_h_id parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_h_id with type DbType.Int64 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertHclCode.CreateLcdIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_lcd_id parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_lcd_id with type DbType.Int64 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertHclCode.CreateLevelIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_level_id parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_level_id with type DbType.Int64 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertHclCode.CreateParentHcodeIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_parent_hcode_id parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_parent_hcode_id with type DbType.Int64 
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertHclCode.HIdType">
            <summary>
              Gets the p_h_id parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertHclCode.LcdIdType">
            <summary>
              Gets the p_lcd_id parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertHclCode.LevelIdType">
            <summary>
              Gets the p_level_id parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertHclCode.ParentHcodeIdType">
            <summary>
              Gets the p_parent_hcode_id parameter type
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertAgency">
            <summary>
              This class contains the stored procedure INSERT_AGENCY name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertAgency.AgSchIdParameterName">
            <summary>
              Gets the <c>p_ag_sch_id</c> parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertAgency.StoredProcedureName">
            <summary>
              Gets the INSERT_AGENCY stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertAgency.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertAgency"/> class.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertAgency.SchemeParameterName">
            <summary>
            Gets the name of the scheme parameter.
            </summary>
            <value>
            The name of the scheme parameter.
            </value>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertGroupAnnotation">
            <summary>
                The annotation group procedure.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertGroupAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertGroupAnnotation"/> class. 
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertGroupAnnotation.ParentIdParameterName">
            <summary>
                Gets the name of the annotate-able identifier parameter.
            </summary>
            <value>
                The name of the annotate able identifier parameter.
            </value>
        </member>
        <member name="M:Estat.Ma.Model.ILocalCodeValidator.IsValidLocalCode(System.Object)">
            <summary>
            Determines whether the specified <paramref name="value"/> is valid local code.
            </summary>
            <param name="value">The value to check.</param>
            <returns><c>true</c> if it is valid; otherwise false.</returns>
        </member>
        <member name="T:Estat.Ma.Model.TranscodingScriptCollection">
            <summary>
            This class holds a collection of <see cref="T:Estat.Ma.Model.TranscodingScript"/>
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertCategory">
            <summary>
              This class contains the stored procedure INSERT_CATEGORY name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertCategory.CatSchIdParameterName">
            <summary>
              Gets the <c>p_cat_sch_id</c> parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertCategory.ParentCatIdParameterName">
            <summary>
              Gets the <c>p_parent_cat_id</c> parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertCategory.StoredProcedureName">
            <summary>
              Gets the INSERT_CATEGORY stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertCategory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertCategory"/> class.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertCategory.SchemeParameterName">
            <summary>
            Gets the name of the scheme parameter.
            </summary>
            <value>
            The name of the scheme parameter.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertCategory.ParentItemParameterName">
            <summary>
            Gets the name of the parent item parameter.
            </summary>
            <value>
            The name of the parent item parameter.
            </value>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertComponentAnnotation">
            <summary>
                The annotation component procedure.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertComponentAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertComponentAnnotation"/> class.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertComponentAnnotation.ParentIdParameterName">
            <summary>
                Gets the name of the annotate-able identifier parameter.
            </summary>
            <value>
                The name of the annotate able identifier parameter.
            </value>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.RelationsCollection">
            <summary>
            The relations collection.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.RelationsCollection._QueryMetadata">
            <summary>
            The _ query metadata.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.RelationsCollection.#ctor(Estat.Ma.Model.QueryEditor.IQueryMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.RelationsCollection"/> class.
            </summary>
            <param name="querymetadata">
            The querymetadata.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.RelationsCollection.Add(Estat.Ma.Model.QueryEditor.IRelation)">
            <summary>
            The add.
            </summary>
            <param name="c">
            The c.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.RelationsCollection.ContainsColumnInstance(Estat.Ma.Model.QueryEditor.IColumnInstance)">
            <summary>
            The contains column instance.
            </summary>
            <param name="ci">
            The ci.
            </param>
            <returns>
            The System.Boolean.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.RelationsCollection.ContainsColumnInstanceFrom(Estat.Ma.Model.QueryEditor.IColumnInstance)">
            <summary>
            The contains column instance from.
            </summary>
            <param name="ci">
            The ci.
            </param>
            <returns>
            The System.Boolean.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.RelationsCollection.ContainsColumnInstanceTo(Estat.Ma.Model.QueryEditor.IColumnInstance)">
            <summary>
            The contains column instance to.
            </summary>
            <param name="ci">
            The ci.
            </param>
            <returns>
            The System.Boolean.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.RelationsCollection.DoAdd(Estat.Ma.Model.QueryEditor.IRelation)">
            <summary>
            The do add.
            </summary>
            <param name="c">
            The c.
            </param>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.RelationsCollection.QueryMetadata">
            <summary>
            Gets the query metadata.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.Relation">
            <summary>
            The relation.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.Relation._columnMappings">
            <summary>
            The _ column mappings.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.Relation.#ctor(Estat.Ma.Model.QueryEditor.IQueryMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.Relation"/> class.
            </summary>
            <param name="querymetadata">
            The query metadata.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.Relation.AddColumnMapping">
            <summary>
            Add a new column mapping.
            </summary>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.ColumnMapping"/>
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.Relation.ColumnMappings">
            <summary>
            Gets the column mappings.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.Relation.TableInstanceFrom">
            <summary>
            Gets or sets the table instance from.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.Relation.TableInstanceTo">
            <summary>
            Gets or sets the table instance to.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.IUnionRelation">
            <summary>
            The UnionRelation interface.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.ColumnMappingsCollection">
            <summary>
            The column mappings collection.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.ColumnMappingsCollection._Relation">
            <summary>
            The _ relation.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ColumnMappingsCollection.#ctor(Estat.Ma.Model.QueryEditor.IRelation)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.ColumnMappingsCollection"/> class.
            </summary>
            <param name="relation">
            The relation.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ColumnMappingsCollection.Add(Estat.Ma.Model.QueryEditor.IColumnMapping)">
            <summary>
            The add.
            </summary>
            <param name="c">
            The c.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ColumnMappingsCollection.DoAdd(Estat.Ma.Model.QueryEditor.IColumnMapping)">
            <summary>
            The do add.
            </summary>
            <param name="c">
            The c.
            </param>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ColumnMappingsCollection.Relation">
            <summary>
            Gets the relation.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.LocalisedDescription">
            <summary>
            Localised description
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.LocalisationString">
            <summary>
            This class holds a localised string
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.LocalisationString.DefaultLanguage">
            <summary>
            Gets the default language
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.LocalisationString.NameValue">
            <summary>
            The 'Name' type in mapping store LOCALISED_STRING.TYPE field
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.LocalisationString.DescriptionValue">
            <summary>
            The 'Name' type in mapping store LOCALISED_STRING.TYPE field
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.LocalisationString._text">
            <summary>
            The text
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.LocalisationString._language">
            <summary>
            The language
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.LocalisationString._localisedStringId">
            <summary>
            Gets or sets Localised String Id.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.LocalisationString.LocalisedStringId">
            <summary>
            Gets or sets Localised String Id.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.LocalisationString.Text">
            <summary>
            Gets or sets the text
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.LocalisationString.Language">
            <summary>
            Gets or sets the language (Defaults to <see cref="F:Estat.Ma.Model.LocalisationString.DefaultLanguage"/>
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.DataSetColumnNameException">
            <summary>
            DataSet Column Name Exception
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertLocalisedString">
            <summary>
              This class contains the stored procedure INSERT_LOCALISED_STRING name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertLocalisedString.ArtIdParameterName">
            <summary>
              Gets the p_art_id parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertLocalisedString.ItemIdParameterName">
            <summary>
              Gets the p_item_id parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertLocalisedString.LanguageParameterName">
            <summary>
              Gets the p_language parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertLocalisedString.StoredProcedureName">
            <summary>
              Gets the INSERT_LOCALISED_STRING stored procedure name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertLocalisedString.TextParameterName">
            <summary>
              Gets the p_text parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertLocalisedString.TypeParameterName">
            <summary>
              Gets the p_type parameter name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertLocalisedString.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertLocalisedString"/> class.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertLocalisedString.CreateCommandWithDefaults(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified <paramref name="database"/>.
            </summary>
            <param name="database">The database.</param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified <paramref name="database"/>.
            </returns>
            <remarks>The <paramref name="database"/> instance may or may not be transactional.</remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertLocalisedString.CreateArtIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_art_id parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_art_id with type DbType.String 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertLocalisedString.CreateItemIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_item_id parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_item_id with type DbType.Int64 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertLocalisedString.CreateLanguageParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_language parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_language with type DbType.String 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertLocalisedString.CreateTextParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_text parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_text with type DbType.String 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertLocalisedString.CreateTypeParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_type parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_type with type DbType.String 
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertLocalisedString.ArtIdType">
            <summary>
              Gets the p_art_id parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertLocalisedString.ItemIdType">
            <summary>
              Gets the p_item_id parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertLocalisedString.LanguageType">
            <summary>
              Gets the p_language parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertLocalisedString.TextType">
            <summary>
              Gets the p_text parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertLocalisedString.TypeType">
            <summary>
              Gets the p_type parameter type
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertLocalCode">
            <summary>
              This class contains the stored procedure INSERT_LOCAL_CODE name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertLocalCode.ColumnIdParameterName">
            <summary>
              Gets the p_column_id parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertLocalCode.StoredProcedureName">
            <summary>
              Gets the INSERT_LOCAL_CODE stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertLocalCode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertLocalCode"/> class.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertLocalCode.CreateColumnIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_column_id parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_column_id with type DbType.Int64 
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertLocalCode.ColumnIdType">
            <summary>
              Gets the p_column_id parameter type
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertHcl">
            <summary>
              This class contains the stored procedure INSERT_HCL name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertHcl.StoredProcedureName">
            <summary>
              Gets the INSERT_HCL stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertHcl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertHcl"/> class.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertDsdGroup">
            <summary>
              This class contains the stored procedure INSERT_DSD_GROUP name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertDsdGroup.DsdIdParameterName">
            <summary>
              Gets the p_dsd_id parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertDsdGroup.IdParameterName">
            <summary>
              Gets the p_id parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertDsdGroup.StoredProcedureName">
            <summary>
              Gets the INSERT_DSD_GROUP stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertDsdGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertDsdGroup"/> class.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertDsdGroup.CreateDsdIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_dsd_id parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_dsd_id with type DbType.Int64 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertDsdGroup.CreateIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_id parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_id with type DbType.String 
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertDsdGroup.DsdIdType">
            <summary>
              Gets the p_dsd_id parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertDsdGroup.IdType">
            <summary>
              Gets the p_id parameter type
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertStructureMapProcedure">
            <summary>
                The code list map procedure.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertStructureMapProcedure.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertStructureMapProcedure"/> class.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertStructureMapProcedure.ParentIdParameterName">
            <summary>
                Gets the name of the parent (another map or a structure set) parameter.
            </summary>
            <value>
                The name of the scheme parameter.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertStructureMapProcedure.SourceIdParameterName">
            <summary>
                Gets the name of the source identifier parameter.
            </summary>
            <value>
                The name of the source identifier parameter.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertStructureMapProcedure.TargetIdParameterName">
            <summary>
                Gets the name of the target identifier parameter.
            </summary>
            <value>
                The name of the source identifier parameter.
            </value>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertContentConstraintAttachmentProcedure">
            <summary>
                The content constraint attachment procedure.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertContentConstraintAttachmentProcedure._procedure">
            <summary>
                The _procedure
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertContentConstraintAttachmentProcedure.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertContentConstraintAttachmentProcedure"/> class.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertContentConstraintAttachmentProcedure.CreateArtefactIdParameter(System.Data.Common.DbCommand,System.Int64)">
            <summary>
            Gets the content constraint identifier parameter.
            </summary>
            <param name="command">
            The command.
            </param>
            <param name="value">
            The value.
            </param>
            <returns>
            The <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertContentConstraintAttachmentProcedure.CreateCommand(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="database"/>.
            </summary>
            <param name="database">
            The database.
            </param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="database"/>.
            </returns>
            <remarks>
            The <paramref name="database"/> instance may or may not be transactional.
            </remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertContentConstraintAttachmentProcedure.CreateCommand(System.Data.Common.DbConnection,System.Data.Common.DbTransaction)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="connection"/> and <paramref name="transaction"/>
            </summary>
            <param name="connection">
            The connection
            </param>
            <param name="transaction">
            The transaction; otherwise set to null
            </param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="connection"/> and <paramref name="transaction"/>
            </returns>
            <remarks>
            It sets the following <see cref="T:System.Data.Common.DbCommand"/> properties <see cref="P:System.Data.Common.DbCommand.Connection"/> ,
                <see cref="P:System.Data.Common.DbCommand.Transaction"/> , <see cref="P:System.Data.Common.DbCommand.CommandType"/> and
                <see cref="P:System.Data.Common.DbCommand.CommandText"/>
            </remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertContentConstraintAttachmentProcedure.CreateCommandWithDefaults(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="database"/>.
            </summary>
            <param name="database">
            The database.
            </param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="database"/>.
            </returns>
            <remarks>
            The <paramref name="database"/> instance may or may not be transactional.
            </remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertContentConstraintAttachmentProcedure.CreateContentConstraintIdParameter(System.Data.Common.DbCommand,System.Int64)">
            <summary>
            Gets the content constraint identifier parameter.
            </summary>
            <param name="command">
            The command.
            </param>
            <param name="value">
            The value.
            </param>
            <returns>
            The <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertContentConstraintAttachmentProcedure.CreateParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Data.ParameterDirection)">
            <summary>
            Create parameter for the specified <paramref name="command"/> and add it to the command
            </summary>
            <param name="command">
            The command
            </param>
            <param name="name">
            The parameter name
            </param>
            <param name="dbType">
            The type
            </param>
            <param name="direction">
            The direction
            </param>
            <returns>
            The new <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertContentConstraintAttachmentProcedure.CreateParameter``1(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Data.ParameterDirection,``0)">
            <summary>
            Create parameter for the specified <paramref name="command"/> and add it to the command
            </summary>
            <typeparam name="T">
            The parameter type.
            </typeparam>
            <param name="command">
            The command
            </param>
            <param name="name">
            The parameter name
            </param>
            <param name="dbType">
            The type
            </param>
            <param name="direction">
            The direction
            </param>
            <param name="value">
            The value.
            </param>
            <returns>
            The new <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.IAllowedValues">
            <summary>
            The AllowedValues interface.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IAllowedValues.ColumnInstance">
            <summary>
                Gets or sets the column instance.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IAllowedValues.LogicalOperator">
            <summary>
               Gets or sets the logical operator used between the conditions stored in values
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IAllowedValues.QueryMetadata">
            <summary>
                Gets the query metadata.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.IAllowedValues.Values">
            <summary>
                Gets or sets the values.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.Mapping">
            <summary>
            The mapping.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.Mapping._mappingId">
            <summary>
            Gets the mapping id.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.Mapping._transcodingId">
            <summary>
            Gets or sets the transcoding id.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.Mapping._timeTranscodingCollection">
            <summary>
            The time transcoding collection.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.Mapping.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.Mapping"/> class.
            </summary>
            <param name="mappingId">
            The mapping id. 
            </param>
        </member>
        <member name="M:Estat.Ma.Model.Mapping.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Estat.Ma.Model.Mapping.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Estat.Ma.Model.Mapping.MappingId">
            <summary>
            Gets the mapping id.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.Mapping.TranscodingId">
            <summary>
            Gets or sets the transcoding id.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.Mapping.HasTranscodingId">
            <summary>
            Gets a value indicating whether transcoding has been set and it is larger than -1.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.Mapping.Expression">
            <summary>
            Gets or sets the TRANSCODING.EXPRESSION value
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.Mapping.TimeTranscodingCollection">
            <summary>
            Gets the time transcoding collection.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.DsdCode">
            <summary>
            This class holds information regarding the DSD code.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.DsdCode._componentId">
            <summary>
            The COMPONENT.COMP_ID value
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.DsdCode._codeId">
            <summary>
            The DSD_CODE.LCD_ID value
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.DsdCode.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.DsdCode"/> class.
            </summary>
            <param name="componentId">
            The COMPONENT.COMP_ID value
            </param>
        </member>
        <member name="P:Estat.Ma.Model.DsdCode.ComponentId">
            <summary>
            Gets the COMPONENT.COMP_ID value
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.DsdCode.CodeId">
            <summary>
            Gets or sets the DSD_CODE.LCD_ID value
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.TranscodingScript">
            <summary>
              This class holds a transcoding script
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.TranscodingScript._content">
            <summary>
              Gets or sets the transcoding script content
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.TranscodingScript._scriptId">
            <summary>
              Gets or sets the transcoding script primary key value
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.TranscodingScript._title">
            <summary>
              Gets or sets the transcoding script title
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.TranscodingScript._transcodingId">
            <summary>
              Gets or sets the transcoding primary key value
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.TranscodingScript._updated">
            <summary>
              Gets or sets a value indicating whether this script has been updated.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.TranscodingScript.#ctor(System.Int64,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.TranscodingScript"/> class.
            </summary>
            <param name="scriptId">
            The script id. 
            </param>
            <param name="title">
            The title. 
            </param>
            <param name="content">
            The content. 
            </param>
        </member>
        <member name="M:Estat.Ma.Model.TranscodingScript.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:Estat.Ma.Model.TranscodingScript"/> class.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.TranscodingScript.ToString">
            <summary>
              Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" /> .
            </summary>
            <returns> A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" /> . </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Estat.Ma.Model.TranscodingScript.Content">
            <summary>
              Gets or sets the transcoding script content
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.TranscodingScript.ScriptId">
            <summary>
              Gets or sets the transcoding script primary key value
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.TranscodingScript.Title">
            <summary>
              Gets or sets the transcoding script title
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.TranscodingScript.TranscodingId">
            <summary>
              Gets or sets the transcoding primary key value
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.TranscodingScript.Updated">
            <summary>
              Gets or sets a value indicating whether this script has been updated.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.UpdateTranscodingRule">
            <summary>
              This class contains the stored procedure UPDATE_TRANSCODING_RULE name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.UpdateTranscodingRule.CdIdParameterName">
            <summary>
              Gets the p_cd_id parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.UpdateTranscodingRule.LcdIdParameterName">
            <summary>
              Gets the p_lcd_id parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.UpdateTranscodingRule.StoredProcedureName">
            <summary>
              Gets the UPDATE_TRANSCODING_RULE stored procedure name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.UpdateTranscodingRule.TrIdParameterName">
            <summary>
              Gets the p_tr_id parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.UpdateTranscodingRule.TrRuleIdParameterName">
            <summary>
              Gets the p_tr_rule_id parameter name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.UpdateTranscodingRule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.UpdateTranscodingRule"/> class.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.UpdateTranscodingRule.CreateCdIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_cd_id parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_cd_id with type DbType.Int64 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.UpdateTranscodingRule.CreateLcdIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_lcd_id parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_lcd_id with type DbType.Int64 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.UpdateTranscodingRule.CreateTrIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_tr_id parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_tr_id with type DbType.Int64 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.UpdateTranscodingRule.CreateTrRuleIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_tr_rule_id parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_tr_rule_id with type DbType.Int64 
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.UpdateTranscodingRule.CdIdType">
            <summary>
              Gets the p_cd_id parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.UpdateTranscodingRule.LcdIdType">
            <summary>
              Gets the p_lcd_id parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.UpdateTranscodingRule.TrIdType">
            <summary>
              Gets the p_tr_id parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.UpdateTranscodingRule.TrRuleIdType">
            <summary>
              Gets the p_tr_rule_id parameter type
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertConcept">
            <summary>
              This class contains the stored procedure INSERT_CONCEPT name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertConcept.ConSchIdParameterName">
            <summary>
              Gets the <c>p_con_sch_id</c> parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertConcept.ParentConIdParameterName">
            <summary>
              Gets the <c>p_con_sch_id</c> parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertConcept.StoredProcedureName">
            <summary>
              Gets the INSERT_CONCEPT stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertConcept.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertConcept"/> class.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertConcept.SchemeParameterName">
            <summary>
            Gets the name of the scheme parameter.
            </summary>
            <value>
            The name of the scheme parameter.
            </value>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertConcept.ParentItemParameterName">
            <summary>
            Gets the name of the parent item parameter.
            </summary>
            <value>
            The name of the parent item parameter.
            </value>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.ProcedureBase">
            <summary>
                The base class for classes that map to procedures in Mapping Store Scheme
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.ProcedureBase._procedureName">
            <summary>
            The _procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.ProcedureBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.ProcedureBase"/> class.
            </summary>
            <param name="procedureName">Name of the procedure.</param>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.ProcedureBase.CreateCommand(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="database"/>.
            </summary>
            <param name="database">
            The database.
            </param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="database"/>.
            </returns>
            <remarks>
            The <paramref name="database"/> instance may or may not be transactional.
            </remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.ProcedureBase.CreateCommand(System.Data.Common.DbConnection,System.Data.Common.DbTransaction)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="connection"/> and <paramref name="transaction"/>
            </summary>
            <param name="connection">
            The connection
            </param>
            <param name="transaction">
            The transaction; otherwise set to null
            </param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="connection"/> and <paramref name="transaction"/>
            </returns>
            <remarks>
            It sets the following <see cref="T:System.Data.Common.DbCommand"/> properties <see cref="P:System.Data.Common.DbCommand.Connection"/> ,
                <see cref="P:System.Data.Common.DbCommand.Transaction"/> , <see cref="P:System.Data.Common.DbCommand.CommandType"/> and
                <see cref="P:System.Data.Common.DbCommand.CommandText"/>
            </remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.ProcedureBase.CreateCommandWithDefaults(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="database"/>.
            </summary>
            <param name="database">
            The database.
            </param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified
                <paramref name="database"/>.
            </returns>
            <remarks>
            The <paramref name="database"/> instance may or may not be transactional.
            </remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.ProcedureBase.CreateParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Data.ParameterDirection)">
            <summary>
            Create parameter for the specified <paramref name="command"/> and add it to the command
            </summary>
            <param name="command">
            The command
            </param>
            <param name="name">
            The parameter name
            </param>
            <param name="dbType">
            The type
            </param>
            <param name="direction">
            The direction
            </param>
            <returns>
            The new <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.ProcedureBase.CreateParameter``1(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Data.ParameterDirection,``0)">
            <summary>
            Create parameter for the specified <paramref name="command"/> and add it to the command
            </summary>
            <typeparam name="T">The parameter type.</typeparam>
            <param name="command">The command</param>
            <param name="name">The parameter name</param>
            <param name="dbType">The type</param>
            <param name="direction">The direction</param>
            <param name="value">The value.</param>
            <returns>
            The new <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertCubeRegionKeyValueProcedure">
            <summary>
                The insert cube region procedure.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertCubeRegionKeyValueProcedure.StoredProcedureName">
            <summary>
            The stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertCubeRegionKeyValueProcedure.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertCubeRegionKeyValueProcedure"/> class.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertCubeRegionKeyValueProcedure.CreateMemberIdParameter(System.Data.Common.DbCommand,System.String)">
            <summary>
            Creates the component identifier parameter.
            </summary>
            <param name="command">
            The command.
            </param>
            <param name="value">
            the parameter value.
            </param>
            <returns>
            The <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertCubeRegionKeyValueProcedure.CreateComponentTypeParameter(System.Data.Common.DbCommand,System.String)">
            <summary>
            Creates the component type parameter.
            </summary>
            <param name="command">The command.</param>
            <param name="value">The value.</param>
            <returns>
            The <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertCubeRegionKeyValueProcedure.CreateCubeRegionIdParameter(System.Data.Common.DbCommand,System.Int64)">
            <summary>
            Gets the content constraint identifier parameter.
            </summary>
            <param name="command">
            The command.
            </param>
            <param name="value">
            The value.
            </param>
            <returns>
            The <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertCubeRegionKeyValueProcedure.CreateIncludeParameter(System.Data.Common.DbCommand,System.Boolean)">
            <summary>
            Creates the include parameter.
            </summary>
            <param name="command">
            The command.
            </param>
            <param name="value">
            the parameter value.
            </param>
            <returns>
            The <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.UnionRelation">
            <summary>
            The union relation.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.UnionRelation.#ctor(Estat.Ma.Model.QueryEditor.ITableInstance,Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.UnionRelation"/> class.
            </summary>
            <param name="from">
            The from.
            </param>
            <param name="to">
            The to.
            </param>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.AllowedValues">
            <summary>
            The allowed values.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.AllowedValues._QueryMetadata">
            <summary>
            The _ query metadata.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.AllowedValues._TableInstance">
            <summary>
            The _ table instance.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.AllowedValues._Values">
            <summary>
            The _ values.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.AllowedValues._logicalOperator">
            <summary>
            The _logical operator.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.AllowedValues.#ctor(Estat.Ma.Model.QueryEditor.IQueryMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.AllowedValues"/> class.
            </summary>
            <param name="querymetadata">
            The query metadata.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.AllowedValues.#ctor(Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.AllowedValues"/> class.
            </summary>
            <param name="tableInstance">
            The table instance.
            </param>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.AllowedValues.ColumnInstance">
            <summary>
            Gets or sets the column instance.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.AllowedValues.LogicalOperator">
            <summary>
              The logical operator used between the conditions stored in values
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.AllowedValues.QueryMetadata">
            <summary>
            Gets the query metadata.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.AllowedValues.Values">
            <summary>
            Gets or sets the values.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.AllowedValues.TableInstance">
            <summary>
              Only exists when a constraint is on a table instance and not on the whole query
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertArtefactAnnotation">
            <summary>
                The annotation artefact procedure.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertArtefactAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertArtefactAnnotation"/> class.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertArtefactAnnotation.ParentIdParameterName">
            <summary>
                Gets the name of the annotate-able identifier parameter.
            </summary>
            <value>
                The name of the annotate able identifier parameter.
            </value>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.Operators">
            <summary>
              This static class provides the list of supported comparison SQL operators for use
              in WHERE statements
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.Operators.operators">
            <summary>
              This array contains all the supported comparison operators.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.Operators.Get(Estat.Ma.Model.QueryEditor.Operators.OperatorIndex)">
            <summary>
            Getter for getting the operator with the <see cref="T:Estat.Ma.Model.QueryEditor.Operators.OperatorIndex"/>
            </summary>
            <param name="index">
            The index of the operator 
            </param>
            <returns>
            A string with the comparison operator 
            </returns>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.Operators.OperatorIndex">
            <summary>
              The index of the operator
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.Operators.OperatorIndex.Equals">
            <summary>
            The equals.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.Operators.OperatorIndex.GreaterThan">
            <summary>
            The greater than.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.Operators.OperatorIndex.LessThan">
            <summary>
            The less than.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.Operators.OperatorIndex.GreaterThanOrEqualsTo">
            <summary>
            The greater than or equals to.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.Operators.OperatorIndex.LessThanOrEqualsTo">
            <summary>
            The less than or equals to.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.Operators.OperatorIndex.NotEquals">
            <summary>
            The not equals.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.Operators.OperatorIndex.Like">
            <summary>
            The like.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.Operators.OperatorIndex.In">
            <summary>
            The in.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.Operators.OperatorIndex.NotLike">
            <summary>
            The not like.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.Operators.OperatorIndex.NotIn">
            <summary>
            The not in.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.ColumnInstance">
            <summary>
              The column instance.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.ColumnInstance._QueryMetadata">
            <summary>
            The _ query metadata.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.ColumnInstance._TableInstance">
            <summary>
            The _ table instance.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.ColumnInstance._FixedValue">
            <summary>
            The _ fixed value.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ColumnInstance.#ctor(Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.ColumnInstance"/> class.
            </summary>
            <param name="ti">The table instance.</param>
            <exception cref="T:System.Exception">TableInstance does not belong to a QueryMetadata</exception>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ColumnInstance.#ctor(Estat.Ma.Model.QueryEditor.ITableInstance,Estat.Ma.Model.QueryEditor.MergedColumnType)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.ColumnInstance"/> class.
            </summary>
            <param name="ti">
            The ti.
            </param>
            <param name="mergeType">
            The merge type.
            </param>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.ColumnInstance.IsMerged">
            <summary>
            The is merged.
            </summary>
            <returns>
            The System.Boolean.
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ColumnInstance.FixedValue">
            <summary>
            Gets or sets the fixed value.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ColumnInstance.ID">
            <summary>
            Gets or sets the id.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ColumnInstance.Index">
            <summary>
            Gets or sets the index.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ColumnInstance.IsFixedValue">
            <summary>
            Gets or sets a value indicating whether is fixed value.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ColumnInstance.IsPrimaryKey">
            <summary>
            Gets or sets a value indicating whether is primary key.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ColumnInstance.IsReturned">
            <summary>
            Gets or sets a value indicating whether is returned.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ColumnInstance.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ColumnInstance.QueryMetadata">
            <summary>
            Gets the query metadata.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ColumnInstance.TableInstance">
            <summary>
            Gets the table instance.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.ColumnInstance.Type">
            <summary>
            Gets or sets the type.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertComponent">
            <summary>
              This class contains the stored procedure INSERT_COMPONENT name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertComponent.AttAssLevelParameterName">
            <summary>
              Gets the p_att_ass_level parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertComponent.AttIsTimeFormatParameterName">
            <summary>
              Gets the p_att_is_time_format parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertComponent.AttStatusParameterName">
            <summary>
              Gets the p_att_status parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertComponent.ClIdParameterName">
            <summary>
              Gets the p_cl_id parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertComponent.ConSchIdParameterName">
            <summary>
              Gets the p_con_sch_id parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertComponent.ConIdParameterName">
            <summary>
              Gets the p_con_id parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertComponent.DsdIdParameterName">
            <summary>
              Gets the p_dsd_id parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertComponent.IsFreqDimParameterName">
            <summary>
              Gets the p_is_freq_dim parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertComponent.IsMeasureDimParameterName">
            <summary>
              Gets the p_is_measure_dim parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertComponent.StoredProcedureName">
            <summary>
              Gets the INSERT_COMPONENT stored procedure name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertComponent.TypeParameterName">
            <summary>
              Gets the p_type parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertComponent.XsAttlevelDsParameterName">
            <summary>
              Gets the p_xs_attlevel_ds parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertComponent.XsAttlevelGroupParameterName">
            <summary>
              Gets the p_xs_attlevel_group parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertComponent.XsAttlevelObsParameterName">
            <summary>
              Gets the p_xs_attlevel_obs parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertComponent.XsAttlevelSectionParameterName">
            <summary>
              Gets the p_xs_attlevel_section parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertComponent.XsMeasureCodeParameterName">
            <summary>
              Gets the p_xs_measure_code parameter name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertComponent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertComponent"/> class.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertComponent.CreateAttAssLevelParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_att_ass_level parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_att_ass_level with type DbType.String 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertComponent.CreateAttIsTimeFormatParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_att_is_time_format parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_att_is_time_format with type DbType.Int32 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertComponent.CreateAttStatusParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_att_status parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_att_status with type DbType.String 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertComponent.CreateClIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_cl_id parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_cl_id with type DbType.Int64 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertComponent.CreateConSchIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_con_sch_id parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_con_sch_id with type DbType.Int64 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertComponent.CreateConIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_con_id parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_con_id with type DbType.Int64 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertComponent.CreateDsdIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_dsd_id parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_dsd_id with type DbType.Int64 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertComponent.CreateIsFreqDimParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_is_freq_dim parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_is_freq_dim with type DbType.Int32 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertComponent.CreateIsMeasureDimParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_is_measure_dim parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_is_measure_dim with type DbType.Int32 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertComponent.CreateTypeParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_type parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_type with type DbType.String 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertComponent.CreateXsAttlevelDsParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_xs_attlevel_ds parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_xs_attlevel_ds with type DbType.Int32 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertComponent.CreateXsAttlevelGroupParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_xs_attlevel_group parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_xs_attlevel_group with type DbType.Int32 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertComponent.CreateXsAttlevelObsParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_xs_attlevel_obs parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_xs_attlevel_obs with type DbType.Int32 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertComponent.CreateXsAttlevelSectionParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_xs_attlevel_section parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_xs_attlevel_section with type DbType.Int32 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertComponent.CreateXsMeasureCodeParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_xs_measure_code parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_xs_measure_code with type DbType.String 
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertComponent.AttAssLevelType">
            <summary>
              Gets the p_att_ass_level parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertComponent.AttIsTimeFormatType">
            <summary>
              Gets the p_att_is_time_format parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertComponent.AttStatusType">
            <summary>
              Gets the p_att_status parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertComponent.ClIdType">
            <summary>
              Gets the p_con_sc_id parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertComponent.ConSchIdType">
            <summary>
              Gets the p_cl_id parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertComponent.ConIdType">
            <summary>
              Gets the p_con_id parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertComponent.DsdIdType">
            <summary>
              Gets the p_dsd_id parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertComponent.IsFreqDimType">
            <summary>
              Gets the p_is_freq_dim parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertComponent.IsMeasureDimType">
            <summary>
              Gets the p_is_measure_dim parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertComponent.TypeType">
            <summary>
              Gets the p_type parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertComponent.XsAttlevelDsType">
            <summary>
              Gets the p_xs_attlevel_ds parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertComponent.XsAttlevelGroupType">
            <summary>
              Gets the p_xs_attlevel_group parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertComponent.XsAttlevelObsType">
            <summary>
              Gets the p_xs_attlevel_obs parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertComponent.XsAttlevelSectionType">
            <summary>
              Gets the p_xs_attlevel_section parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertComponent.XsMeasureCodeType">
            <summary>
              Gets the p_xs_measure_code parameter type
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.AbstractTableInstance">
            <summary>
            The abstract decorator for <see cref="T:Estat.Ma.Model.QueryEditor.ITableInstance"/>
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.QueryEditor.AbstractTableInstance._decoratedInstance">
            <summary>
            The _decorated instance
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.AbstractTableInstance.#ctor(Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.QueryEditor.AbstractTableInstance"/> class.
            </summary>
            <param name="decoratedInstance">The decorated instance.</param>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.AbstractTableInstance.AddColumnInstance">
            <summary>
                Add a new column instance.
            </summary>
            <returns>
                The <see cref="T:Estat.Ma.Model.QueryEditor.ColumnInstance"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.AbstractTableInstance.AddColumnInstance(Estat.Ma.Model.QueryEditor.MergedColumnType)">
            <summary>
            Add a new column instance.
            </summary>
            <param name="mergedColumnType">
                Type of the merged column.
            </param>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.ColumnInstance"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.AbstractTableInstance.AddCrossJoinRelation(Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            Add a new cross join relation.
            </summary>
            <param name="destinationTableInstance">
                The destination table instance.
            </param>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.CrossJoinRelation"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.AbstractTableInstance.AddFixedColumnInstance(System.String,System.String)">
            <summary>
            Add a new fixed column instance.
            </summary>
            <param name="name">
                The name.
            </param>
            <param name="fixedValue">
                The fixed value.
            </param>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.ColumnInstance"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.AbstractTableInstance.AddConstraint">
            <summary>
            Add a new constraint.
            </summary>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.AllowedValues"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.AbstractTableInstance.AddUnionRelation(Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            Add a new union relation.
            </summary>
            <param name="destinationTableInstance">
                The destination table instance.
            </param>
            <returns>
            The <see cref="T:Estat.Ma.Model.QueryEditor.UnionRelation"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.AbstractTableInstance.GetNextUnionTable">
            <summary>
                Returns the next table in the Union Relation that the table participates in (if it participates in a union
                relation)
            </summary>
            <returns>
                The <see cref="T:Estat.Ma.Model.QueryEditor.ITableInstance"/>.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.AbstractTableInstance.HasColumnTableRelation">
            <summary>
                Returns true if the table participates in an Inner Join  Relation
            </summary>
            <returns>
                true if the table participates in a Inner-Join Relation; otherwise false
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.AbstractTableInstance.HasCrossJoinRelation">
            <summary>
                Returns true if the table participates in a Cross-Join Relation
            </summary>
            <returns>
                true if the table participates in a Cross-Join Relation; otherwise false
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.AbstractTableInstance.HasInnerJoinRelation">
            <summary>
                Returns true if the table participates in an Inner Join  Relation
            </summary>
            <returns>
                true if the table participates in a Inner-Join Relation; otherwise false
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.AbstractTableInstance.HasOnlyUnionRelationFrom">
            <summary>
                Returns true only if the table participates in a Union Relation and NO OTHER Relations (i.e. ColumnTableReference,
                Join Relation)
                AND is the FIRST table in this Union Relation that it participates in
            </summary>
            <returns>
                The System.Boolean.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.AbstractTableInstance.HasOnlyUnionRelationTo">
            <summary>
                Returns true only if the table participates in a Union Relation and NO OTHER Relations (i.e. ColumnTableReference,
                Join Relation)
                AND is the LAST table in this Union Relation that it participates in
            </summary>
            <returns>
                The System.Boolean.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.AbstractTableInstance.HasRelationOfAnyType">
            <summary>
                The has relation of any type.
            </summary>
            <returns>
                The System.Boolean.
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.AbstractTableInstance.HasUnionRelation">
            <summary>
                Returns true if the table participates in a Union Relation
            </summary>
            <returns>
                true if the table participates in a Union; otherwise false
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.AbstractTableInstance.RemoveAllReferences">
            <summary>
                The remove all references.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.QueryEditor.AbstractTableInstance.SelectedColumnsMatchColumnsOf(Estat.Ma.Model.QueryEditor.ITableInstance)">
            <summary>
            The selected columns match columns of.
            </summary>
            <param name="to">
            The to.
            </param>
            <returns>
            The System.Boolean.
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.AbstractTableInstance.ColumnInstances">
            <summary>
                Gets the column instances.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.AbstractTableInstance.Constraints">
            <summary>
                Gets the constraints.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.AbstractTableInstance.ID">
            <summary>
                Gets or sets the id.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.AbstractTableInstance.Name">
            <summary>
                Gets or sets the name.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.AbstractTableInstance.QueryMetadata">
            <summary>
                Gets the query metadata.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.AbstractTableInstance.XCoordinate">
            <summary>
                Gets or sets the x coordinate.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.QueryEditor.AbstractTableInstance.YCoordinate">
            <summary>
                Gets or sets the y coordinate.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.LocalisedName">
            <summary>
            This class holds a localised name
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.DsdComponentCollection">
            <summary>
            This class holds a collection of <see cref="T:Estat.Ma.Model.DsdComponent"/>
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.DsdComponentCollection.GetKeyForItem(Estat.Ma.Model.DsdComponent)">
            <summary>
            When implemented in a derived class, extracts the key from the specified element.
            </summary>
            <returns>
            The key for the specified element.
            </returns>
            <param name="item">The element from which to extract the key.
            </param>
        </member>
        <member name="T:Estat.Ma.Model.TimeDimensionTranscoding">
            <summary>
                The time dimension transcoding vo.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.TimeDimensionTranscoding._periodCodeMapping">
            <summary>
            The period code mapping.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.TimeDimensionTranscoding._dateColumnId">
            <summary>
                Gets the date column id.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.TimeDimensionTranscoding._freq">
            <summary>
                The frequency.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.TimeDimensionTranscoding._isDateTime">
            <summary>
                The is date time.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.TimeDimensionTranscoding._periodColumnId">
            <summary>
                The period col id.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.TimeDimensionTranscoding._periodLen">
            <summary>
                The period len.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.TimeDimensionTranscoding._periodStart">
            <summary>
                The period start.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.TimeDimensionTranscoding._yearColumnId">
            <summary>
                The year col id.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.TimeDimensionTranscoding._yearLen">
            <summary>
                The year len.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.TimeDimensionTranscoding._yearStart">
            <summary>
                The year start.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.TimeDimensionTranscoding.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Estat.Ma.Model.TimeDimensionTranscoding"/> class.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.TimeDimensionTranscoding.#ctor(Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.TimeTranscodingEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.TimeDimensionTranscoding"/> class from the specified
                <paramref name="transcodingEntity"/>
            </summary>
            <param name="transcodingEntity">
                The time transcoding Entity.
            </param>
        </member>
        <member name="M:Estat.Ma.Model.TimeDimensionTranscoding.ToString">
            <summary>
                Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" /> .
            </summary>
            <returns>
                A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" /> .
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Estat.Ma.Model.TimeDimensionTranscoding.ToTimeTranscodingEntity(System.Int64)">
            <summary>
            The to time transcoding entity.
            </summary>
            <param name="transcodingId">
            The transcoding id.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.MappingStoreModel.TimeTranscodingEntity"/>.
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.TimeDimensionTranscoding.DateColumnId">
            <summary>
                Gets or sets the date column id.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.TimeDimensionTranscoding.Freq">
            <summary>
                Gets or sets the Frequency code
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.TimeDimensionTranscoding.IsDateTime">
            <summary>
                Gets or sets a value indicating whether it is DateTime.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.TimeDimensionTranscoding.PeriodColumnId">
            <summary>
                Gets or sets the period column id.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.TimeDimensionTranscoding.PeriodLen">
            <summary>
                Gets or sets the period Length.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.TimeDimensionTranscoding.PeriodStart">
            <summary>
                Gets or sets the Period Start.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.TimeDimensionTranscoding.YearColumnId">
            <summary>
                Gets or sets the year column id..
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.TimeDimensionTranscoding.YearLen">
            <summary>
                Gets or sets the Year Len.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.TimeDimensionTranscoding.YearStart">
            <summary>
                Gets or sets the Year Start.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.TimeDimensionTranscoding.PeriodCodeMapping">
            <summary>
            Gets the period code mapping.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertHierachy">
            <summary>
              This class contains the stored procedure INSERT_HIERACHY name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertHierachy.HclIdParameterName">
            <summary>
              Gets the p_hcl_id parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertHierachy.StoredProcedureName">
            <summary>
              Gets the INSERT_HIERACHY stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertHierachy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertHierachy"/> class.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertHierachy.CreateHclIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_hcl_id parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_hcl_id with type DbType.Int64 
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertHierachy.HclIdType">
            <summary>
              Gets the p_hcl_id parameter type
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertDataflow">
            <summary>
              This class contains the stored procedure INSERT_DATAFLOW name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertDataflow.DsdIdParameterName">
            <summary>
              Gets the p_dsd_id parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertDataflow.MapSetIdParameterName">
            <summary>
              Gets the p_map_set_id parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertDataflow.StoredProcedureName">
            <summary>
              Gets the INSERT_DATAFLOW stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertDataflow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertDataflow"/> class.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertDataflow.CreateCommandWithDefaults(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified <paramref name="database"/>.
            </summary>
            <param name="database">The database.</param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified <paramref name="database"/>.
            </returns>
            <remarks>The <paramref name="database"/> instance may or may not be transactional.</remarks>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertDataflow.CreateDsdIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_dsd_id parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_dsd_id with type DbType.Int64 
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertDataflow.CreateMapSetIdParameter(System.Data.Common.DbCommand)">
            <summary>
            Creates the p_map_set_id parameter for the specified <paramref name="command"/> . The parameter is added <paramref name="command"/>
            </summary>
            <param name="command">
            The db command 
            </param>
            <returns>
            a new instance of DbParameter for p_map_set_id with type DbType.Int64 
            </returns>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertDataflow.DsdIdType">
            <summary>
              Gets the p_dsd_id parameter type
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.StoredProcedure.InsertDataflow.MapSetIdType">
            <summary>
              Gets the p_map_set_id parameter type
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertCodelist">
            <summary>
              This class contains the stored procedure INSERT_CODELIST name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertCodelist.StoredProcedureName">
            <summary>
              Gets the INSERT_CODELIST stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertCodelist.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertCodelist"/> class.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertCategoryScheme">
            <summary>
              This class contains the stored procedure INSERT_CATEGORY_SCHEME name and parameter names and types
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertCategoryScheme.CsOrderParameterName">
            <summary>
              Gets the p_cs_order parameter name
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertCategoryScheme.StoredProcedureName">
            <summary>
              Gets the INSERT_CATEGORY_SCHEME stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertCategoryScheme.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertCategoryScheme"/> class.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.StoredProcedure.InsertCubeRegionValueProcedure">
            <summary>
                The insert cube region procedure.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.StoredProcedure.InsertCubeRegionValueProcedure.StoredProcedureName">
            <summary>
            The stored procedure name
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertCubeRegionValueProcedure.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.StoredProcedure.InsertCubeRegionValueProcedure"/> class.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertCubeRegionValueProcedure.CreateMemberValueParameter(System.Data.Common.DbCommand,System.String)">
            <summary>
            Creates the code identifier parameter.
            </summary>
            <param name="command">
            The command.
            </param>
            <param name="value">
            the parameter value.
            </param>
            <returns>
            The <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertCubeRegionValueProcedure.CreateCubeRegionKeyValueIdParameter(System.Data.Common.DbCommand,System.Int64)">
            <summary>
            Creates the cube region key value identifier parameter.
            </summary>
            <param name="command">
            The command.
            </param>
            <param name="value">
            the parameter value.
            </param>
            <returns>
            The <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="M:Estat.Ma.Model.StoredProcedure.InsertCubeRegionValueProcedure.CreateIncludeParameter(System.Data.Common.DbCommand,System.Boolean)">
            <summary>
            Creates the include parameter.
            </summary>
            <param name="command">
            The command.
            </param>
            <param name="value">
            the parameter value.
            </param>
            <returns>
            The <see cref="T:System.Data.Common.DbParameter"/>
            </returns>
        </member>
        <member name="T:Estat.Ma.Model.QueryEditor.QueryMetadataReaderWriter">
            <summary>
              The query metadata reader writer.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.NotificationArgs">
            <summary>
                The notification arguments.
            </summary>
        </member>
        <member name="M:Estat.Ma.Model.NotificationArgs.#ctor(System.Collections.Generic.IList{System.String},Estat.Ma.Model.NotificationArgs.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Ma.Model.NotificationArgs"/> class.
            </summary>
            <param name="message">
            The message.
            </param>
            <param name="type">
            The type.
            </param>
        </member>
        <member name="P:Estat.Ma.Model.NotificationArgs.Messages">
            <summary>
                Gets the messages.
            </summary>
        </member>
        <member name="P:Estat.Ma.Model.NotificationArgs.NotificationType">
            <summary>
                Gets or sets the notification type.
            </summary>
        </member>
        <member name="T:Estat.Ma.Model.NotificationArgs.Type">
            <summary>
                The type.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.NotificationArgs.Type.Info">
            <summary>
                The info.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.NotificationArgs.Type.Warning">
            <summary>
                The warning.
            </summary>
        </member>
        <member name="F:Estat.Ma.Model.NotificationArgs.Type.Error">
            <summary>
                The error.
            </summary>
        </member>
    </members>
</doc>
