<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MappingStore.Store</name>
    </assembly>
    <members>
        <member name="T:Estat.Sri.MappingStore.Store.Model.ItemStatus">
            <summary>
            The item status.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Model.ItemStatus.#ctor(System.String,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Model.ItemStatus"/> class.
            </summary>
            <param name="id">
            The id.
            </param>
            <param name="sysID">
            The sys id.
            </param>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Model.ItemStatus.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Model.ItemStatus.SysID">
            <summary>
            Gets the sys id.
            </summary>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus">
            <summary>
            The artefact import status.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus._importMessage">
            <summary>
            The _import message.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus._primaryKeyValue">
            <summary>
            The _primary key value.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus.#ctor(System.Int64,Estat.Sri.MappingStore.Store.Model.IImportMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus"/> class. 
            </summary>
            <param name="primaryKeyValue">
            The primary Key Value.
            </param>
            <param name="importMessage">
            The import Message.
            </param>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus.ImportMessage">
            <summary>
            Gets the import message.
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus.PrimaryKeyValue">
            <summary>
            Gets the primary key value.
            </summary>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.MaintainableRefRetrieverEngine">
            <summary>
            The maintainable ref retriever engine.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.MaintainableRefRetrieverEngine.SqlQueryFromPk">
            <summary>
            The SQL query for from PK format. 1 parameter the Primary Key value
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.MaintainableRefRetrieverEngine.SqlQueryFromRef">
            <summary>
            The SQL query template.7 parameter: ID, AGENCY, VERSION1, VERSION2, VERSION3, {primary key field}, {table name}
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.MaintainableRefRetrieverEngine._mappingStoreDatabase">
            <summary>
            The _mapping store database.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.MaintainableRefRetrieverEngine._tableInfoBuilder">
            <summary>
                The table info builder.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.MaintainableRefRetrieverEngine._mutableRetrievalManager">
            <summary>
            The _mutable retrieval manager.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.MaintainableRefRetrieverEngine._itemTableInfoBuilder">
            <summary>
            The _item table information builder
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.MaintainableRefRetrieverEngine.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.MaintainableRefRetrieverEngine"/> class.
            </summary>
            <param name="mappingStoreDatabase">
            The mapping store database.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.MaintainableRefRetrieverEngine.Retrieve(System.Int64)">
            <summary>
            Returns a <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject"/> populate by the contents of the record in <c>ARTEFACT_VIEW</c> for <c>ART_ID = </c> <paramref name="primaryKeyValue"/>
            </summary>
            <param name="primaryKeyValue">
            The primary key value.
            </param>
            <returns>
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject"/>; otherwise null.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.MaintainableRefRetrieverEngine.Retrieve(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference)">
            <summary>
            Retrieve the primary key from mapping store for the given <paramref name="structureReference"/>
            </summary>
            <param name="structureReference">
            The structure reference.
            </param>
            <returns>
            The primary key value; otherwise <c>-1</c>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.MaintainableRefRetrieverEngine.RetrievesUrnMap(Org.Sdmxsource.Sdmx.Api.Constants.SdmxStructureType)">
            <summary>
            Retrieves the urn map.
            </summary>
            <param name="sdmxStructure">The SDMX structure.</param>
            <returns>
            The map between System ID to URN
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.MaintainableRefRetrieverEngine.RetrievesUrnToSysIdMap(Org.Sdmxsource.Sdmx.Api.Constants.SdmxStructureType)">
            <summary>
            Retrieves the urn map.
            </summary>
            <param name="sdmxStructure">The SDMX structure.</param>
            <returns>
            The map between System ID to URN
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.MaintainableRefRetrieverEngine.RetrievePeriodCodelistId(Org.Sdmxsource.Sdmx.Api.Constants.TimeFormat)">
            <summary>
            Retrieve the primary key from mapping store for the given period code list.
            </summary>
            <param name="timeFormat">
            The time format.
            </param>
            <returns>
            The  primary key.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Value in <paramref name="timeFormat"/> not supported.
            </exception>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.MaintainableRefRetrieverEngine.RetrievePeriodCodelist(Org.Sdmxsource.Sdmx.Api.Constants.TimeFormat)">
            <summary>
            Retrieve the primary key from mapping store for the given period code list.
            </summary>
            <param name="timeFormat">
            The time format.
            </param>
            <returns>
            The  primary key.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Value in <paramref name="timeFormat"/> not supported.
            </exception>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.IImportEngine`1">
            <summary>
            The Import Engine interface.
            </summary>
            <typeparam name="T">
            The type of the <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject"/>
            </typeparam>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.IImportEngine`1.Insert(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Insert the specified <paramref name="maintainables"/> to the mapping store.
            </summary>
            <param name="maintainables">
                The maintainable.
            </param>
            <returns>
            The <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Model.IImportMessage">
            <summary>
            The ImportMessage interface.
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Model.IImportMessage.Message">
            <summary>
            Gets the message.
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Model.IImportMessage.StructureReference">
            <summary>
            Gets the structure reference.
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Model.IImportMessage.Status">
            <summary>
            Gets the success.
            </summary>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.DataConsumerImportEngine">
            <summary>
            The concept import engine.
            </summary>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.ItemBaseEngine`2">
            <summary>
            The item base engine.
            </summary>
            <typeparam name="TItem">
            The item type.
            </typeparam>
            <typeparam name="TProc">
            The stored procedure method.
            </typeparam>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.NameableBaseEngine`2">
            <summary>
            The nameable base engine.
            </summary>
            <typeparam name="T">The type of the <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.INameableObject"/></typeparam>
            <typeparam name="TProc">The type of the procedure.</typeparam>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.INameableImportEngine`2">
            <summary>
            The NameableImportEngine interface.
            </summary>
            <typeparam name="T">The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.INameableObject"/> based type</typeparam>
            <typeparam name="TProc">The type of the procedure.</typeparam>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.INameableImportEngine`2.RunCommand(`0,System.Data.Common.DbCommand,`1,Estat.Sri.MappingStore.Store.Model.DbTransactionState)">
            <summary>
            Inserts the specified item.
            </summary>
            <param name="item">The item.</param>
            <param name="command">The command.</param>
            <param name="itemProcedure">The item procedure.</param>
            <param name="state">The state.</param>
            <returns>
            The primary key value
            </returns>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.NameableBaseEngine`2._localisedStringInsertEngine">
            <summary>
                The localized string insert engine.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.NameableBaseEngine`2._annotationInsertEngine">
            <summary>
            The _annotation insert engine
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.NameableBaseEngine`2._annotationProcedureBase">
            <summary>
            The _annotation procedure base
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.NameableBaseEngine`2.RunCommand(`0,System.Data.Common.DbCommand,`1,Estat.Sri.MappingStore.Store.Model.DbTransactionState)">
            <summary>
            The run common <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.INameableObject"/> command for the specified <paramref name="item"/>
            </summary>
            <param name="item">The item.</param>
            <param name="command">The command.</param>
            <param name="itemProcedure">The item procedure.</param>
            <param name="state">The state.</param>
            <returns>
            The primary key of the item added.
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.IItemImportEngine`1">
            <summary>
            The NameableImportEngine interface.
            </summary>
            <typeparam name="T">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.INameableObject"/> based type
            </typeparam>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.IItemImportEngine`1.Insert(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Collections.Generic.IEnumerable{`0},System.Int64)">
            <summary>
            Insert the specified <paramref name="items"/> to the mapping store with <paramref name="state"/>
            </summary>
            <param name="state">
                The MAPPING STORE connection and transaction state
            </param>
            <param name="items">
                The items.
            </param>
            <param name="parentArtefact"> The primary key of the parent artefact.</param>
            <returns>
            The <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ItemBaseEngine`2.Insert(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Collections.Generic.IEnumerable{`0},System.Int64)">
            <summary>
            Insert the specified <paramref name="items"/> to the mapping store with <paramref name="state"/>
            </summary>
            <param name="state">
                The MAPPING STORE connection and transaction state
            </param>
            <param name="items">
                The items.
            </param>
            <param name="parentArtefact"> The primary key of the parent artefact.</param>
            <returns>The list of primary keys.</returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.SchemeMapBaseEngine`2">
            <summary>
            The Schema base engine.
            </summary>
            <typeparam name="TSchemaMap">The type of the schema map.</typeparam>
            <typeparam name="TProc">The type of the procedure.</typeparam>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.SchemeMapBaseEngine`2._nameableImportEngine">
            <summary>
            The _nameable import engine
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.SchemeMapBaseEngine`2._validateStatusEngine">
            <summary>
            The _validate status engine
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.SchemeMapBaseEngine`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.SchemeMapBaseEngine`2"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.SchemeMapBaseEngine`2.Insert(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Collections.Generic.IEnumerable{`0},System.Int64)">
            <summary>
            Inserts the specified item.
            </summary>
            <param name="state">The state.</param>
            <param name="schemaMaps">The schema maps.</param>
            <param name="structureSetId">The structure set identifier.</param>
            <returns>
            The primary key value
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.SchemeMapBaseEngine`2.GetReferenceStatus(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference,Estat.Sri.MappingStore.Store.Engine.StructureCache)">
            <summary>
            Gets the CodeList status.
            </summary>
            <param name="state">The state.</param>
            <param name="codeListReference">The codeList reference.</param>
            <param name="itemScheme">The item scheme.</param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ItemSchemeFinalStatus"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.SchemeMapBaseEngine`2.WriteItemMaps(Estat.Sri.MappingStore.Store.Model.DbTransactionState,`0,System.Int64)">
            <summary>
            Writes the item maps.
            </summary>
            <param name="state">The state.</param>
            <param name="schemaMap">The schema map.</param>
            <param name="primaryKey">The primary key.</param>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.Delete.AnnotationDeleteEngine">
            <summary>
            The annotation delete engine.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.Delete.AnnotationDeleteEngine._mappingStoreDatabase">
            <summary>
            The _mapping store database
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.Delete.AnnotationDeleteEngine._annotationRelationInfoBuilder">
            <summary>
            The _annotation relation information builder
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.Delete.AnnotationDeleteEngine.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.Delete.AnnotationDeleteEngine"/> class.
            </summary>
            <param name="mappingStoreDatabase">
            The mapping store database.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.Delete.AnnotationDeleteEngine.DeleteByType(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Int64,System.String,Org.Sdmxsource.Sdmx.Api.Constants.SdmxStructureType)">
            <summary>
            Deletes annotations for annotatoble with the specified <paramref name="annotableSysId"/> and the specified <paramref name="type"/>
            </summary>
            <param name="state">The state.</param>
            <param name="annotableSysId">The annotable system identifier.</param>
            <param name="type">The type.</param>
            <param name="structureType">Type of the structure.</param>
            <returns>The number of annotations deleted.</returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.ComponentImportEngine">
            <summary>
                The component import engine.
            </summary>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.IIdentifiableImportEngine`1">
            <summary>
            The NameableImportEngine interface.
            </summary>
            <typeparam name="T">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.INameableObject"/> based type
            </typeparam>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.IIdentifiableImportEngine`1.Insert(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Collections.Generic.IEnumerable{`0},System.Int64)">
            <summary>
            Insert the specified <paramref name="items"/> to the mapping store with <paramref name="state"/>
            </summary>
            <param name="state">
                The MAPPING STORE connection and transaction state
            </param>
            <param name="items">
                The items.
            </param>
            <param name="parentArtefact"> The primary key of the parent artefact.</param>
            <returns>
            The <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </returns>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.ComponentImportEngine.TrueValue">
            <summary>
                The true value in Mapping Store
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.ComponentImportEngine._storedProcedures">
            <summary>
            The _stored procedures
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.ComponentImportEngine._annotationInsertEngine">
            <summary>
            The _annotation insert engine
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.ComponentImportEngine._insertComponentAnnotation">
            <summary>
            The _insert component annotation
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ComponentImportEngine.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.ComponentImportEngine"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ComponentImportEngine.Insert(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Collections.Generic.IEnumerable{Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IComponent},System.Int64)">
            <summary>
            Insert the specified <paramref name="items"/> to the mapping store with <paramref name="state"/>
            </summary>
            <param name="state">
                The MAPPING STORE connection and transaction state
            </param>
            <param name="items">
                The items.
            </param>
            <param name="parentArtefact">
                The primary key of the parent artefact.
            </param>
            <returns>
            The <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ComponentImportEngine.GetCodelistStatus(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IComponent,Estat.Sri.MappingStore.Store.Engine.StructureCache)">
            <summary>
            Gets the CodeList status.
            </summary>
            <param name="state">The state.</param>
            <param name="component">The component.</param>
            <param name="itemScheme">The item scheme.</param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ItemSchemeFinalStatus"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ComponentImportEngine.GetError(System.String,Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference)">
            <summary>
            Returns an error message with the specified <paramref name="format"/> for <paramref name="reference"/>
            </summary>
            <param name="format">
            The format.
            </param>
            <param name="reference">
            The component.
            </param>
            <returns>
            The error message.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ComponentImportEngine.Insert(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IComponent,Estat.Sri.MappingStore.Store.Engine.StructureCache,System.Int64)">
            <summary>
            The insert.
            </summary>
            <param name="state">
            The state.
            </param>
            <param name="component">
            The component.
            </param>
            <param name="itemScheme">
            The item scheme.
            </param>
            <param name="parentArtefact">
            The parent artefact.
            </param>
            <returns>
            The <see cref="T:System.Int64"/>.
            </returns>
            <exception cref="T:Estat.Sri.MappingStoreRetrieval.MappingStoreException">
            THere was a problem with the <paramref name="component"/> references.
            </exception>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ComponentImportEngine.InsertTextFormats(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Int64,Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.ITextFormat}})">
            <summary>
            Insert text formats.
            </summary>
            <param name="state">
            The state.
            </param>
            <param name="formats">
            The formats.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ComponentImportEngine.SetAttributeParameters(Org.Sdmxsource.Sdmx.Api.Model.Objects.DataStructure.IAttributeObject,System.Data.IDataParameter,System.Data.IDataParameter,System.Data.IDataParameter)">
            <summary>
            The insert attribute.
            </summary>
            <param name="attribute">
            The attribute.
            </param>
            <param name="attAssLevelParameter">
            The Attribute attachment level parameter.
            </param>
            <param name="attStatusParameter">
            The Attribute assignment status parameter.
            </param>
            <param name="attIsTimeFormatParameter">
            The Attribute is time format parameter.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ComponentImportEngine.SetCodelist(Estat.Ma.Model.StoredProcedure.InsertComponent,System.Data.Common.DbCommand,Estat.Sri.MappingStore.Store.Model.ItemSchemeFinalStatus,Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IComponent)">
            <summary>
            Set codelist parameters.
            </summary>
            <param name="storedProcedure">
            The stored procedure.
            </param>
            <param name="command">
            The command.
            </param>
            <param name="codelistStatus">
            The codelist status.
            </param>
            <param name="component">
            The component.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ComponentImportEngine.SetComponentType(Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IComponent,Estat.Ma.Model.StoredProcedure.InsertComponent,System.Data.Common.DbCommand)">
            <summary>
            Set component type parameter.
            </summary>
            <param name="component">
            The component.
            </param>
            <param name="storedProcedure">
            The stored procedure.
            </param>
            <param name="command">
            The command.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ComponentImportEngine.SetConcept(Estat.Ma.Model.StoredProcedure.InsertComponent,System.Data.Common.DbCommand,Estat.Sri.MappingStore.Store.Model.ItemStatus)">
            <summary>
            Set concept parameter.
            </summary>
            <param name="storedProcedure">
            The stored procedure.
            </param>
            <param name="command">
            The command.
            </param>
            <param name="conceptID">
            The concept id.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ComponentImportEngine.SetCrossSectionalLevels(Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IComponent,Estat.Ma.Model.StoredProcedure.InsertComponent,System.Data.Common.DbCommand)">
            <summary>
            Fill cross sectional levels.
            </summary>
            <param name="component">
            The component.
            </param>
            <param name="storedProcedure">
            The stored Procedure.
            </param>
            <param name="command">
            The command.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ComponentImportEngine.SetCrossSectionalMeasureParameters(Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IComponent,System.Data.IDataParameter)">
            <summary>
            The insert cross sectional measure.
            </summary>
            <param name="component">
            The component.
            </param>
            <param name="xsMeasureCodeParameter">
            The CrossSectional measure code parameter.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ComponentImportEngine.SetDimensionParameters(Org.Sdmxsource.Sdmx.Api.Model.Objects.DataStructure.IDimension,System.Data.IDataParameter,System.Data.IDataParameter)">
            <summary>
            Insert dimension.
            </summary>
            <param name="dimension">
            The dimension.
            </param>
            <param name="isFreqDimParameter">
            The is frequency dimension parameter.
            </param>
            <param name="isMeasureDimParameter">
            The is measure dimension parameter.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ComponentImportEngine.SetDsd(System.Int64,Estat.Ma.Model.StoredProcedure.InsertComponent,System.Data.Common.DbCommand)">
            <summary>
            Set parent DataStructure definition.
            </summary>
            <param name="parentArtefact">
            The parent artefact.
            </param>
            <param name="storedProcedure">
            The stored procedure.
            </param>
            <param name="command">
            The command.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ComponentImportEngine.ValidateCodelist(Estat.Sri.MappingStore.Store.Model.ArtefactFinalStatus,Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference)">
            <summary>
            Validate codelist.
            </summary>
            <param name="codelistStatus">
            The codelist status.
            </param>
            <param name="component">
            The component.
            </param>
            <exception cref="T:Estat.Sri.MappingStoreRetrieval.MappingStoreException">
            The specified <paramref name="codelistStatus"/> is not valid.
            </exception>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ComponentImportEngine.ValidateConceptScheme(Estat.Sri.MappingStore.Store.Model.ItemSchemeFinalStatus,Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference)">
            <summary>
            The validate concept scheme.
            </summary>
            <param name="conceptSchemeID">
            The concept scheme id.
            </param>
            <param name="reference">
            The reference.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ItemStatus"/>.
            </returns>
            <exception cref="T:Estat.Sri.MappingStoreRetrieval.MappingStoreException">
            The specified <paramref name="conceptSchemeID"/> is not valid.
            </exception>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Builder.IsFinalQueryBuilder">
            <summary>
            The is final query builder.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Builder.IsFinalQueryBuilder.SqlQuery">
            <summary>
            The SQL query.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Builder.IsFinalQueryBuilder._database">
            <summary>
            The database.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Builder.IsFinalQueryBuilder.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Builder.IsFinalQueryBuilder"/> class.
            </summary>
            <param name="database">
            The database.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Builder.IsFinalQueryBuilder.Build(Estat.Sri.MappingStoreRetrieval.Model.TableInfo)">
            <summary>
            Builds an object of type <see cref="T:System.String"/>
            </summary>
            <param name="buildFrom">
            An <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.TableInfo"/> to build the output object from
            </param>
            <returns>
            Object of type <see cref="T:System.String"/>
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Builder.AnnotationRelationInfoBuilder">
            <summary>
            The annotation relation info builder.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Builder.AnnotationRelationInfoBuilder.Build(Org.Sdmxsource.Sdmx.Api.Constants.SdmxStructureType)">
            <summary>
            Builds the <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.TableInfo"/> for the annotation relation tables from the specified <paramref name="structureType"/>
            </summary>
            <param name="structureType">Type of the structure.</param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.TableInfo"/>
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Factory.IdentifiableImportFactory`1">
            <summary>
            The nameable import factory.
            </summary>
            <typeparam name="T">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.INameableObject"/> type
            </typeparam>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Factory.IIdentifiableImportFactory`1">
            <summary>
            The NameableImportFactory interface.
            </summary>
            <typeparam name="T">
            The type of the <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.INameableObject"/>
            </typeparam>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.IIdentifiableImportFactory`1.GetIdentifiableImport">
            <summary>
            Returns the <see cref="T:Estat.Sri.MappingStore.Store.Engine.IIdentifiableImportEngine`1"/>.
            </summary>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Engine.IIdentifiableImportEngine`1"/>.
            </returns>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Factory.IdentifiableImportFactory`1._customFactory">
            <summary>
                The _custom factory.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.IdentifiableImportFactory`1.#ctor(System.Func{Estat.Sri.MappingStore.Store.Engine.IIdentifiableImportEngine{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Factory.IdentifiableImportFactory`1"/> class.
            </summary>
            <param name="customFactory">
            The custom factory.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.IdentifiableImportFactory`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Factory.IdentifiableImportFactory`1"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.IdentifiableImportFactory`1.GetIdentifiableImport">
            <summary>
                Returns the <see cref="T:Estat.Sri.MappingStore.Store.Engine.IItemImportEngine`1"/>.
            </summary>
            <returns>
                The <see cref="T:Estat.Sri.MappingStore.Store.Engine.IItemImportEngine`1"/>.
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.HclImportEngine">
            <summary>
            The HCL import engine.
            </summary>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.ArtefactImportEngine`1">
            <summary>
            The artefact import engine.
            </summary>
            <typeparam name="T">
            The type of the maintainable
            </typeparam>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.ArtefactBaseEngine">
            <summary>
                The artefact base.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.ArtefactBaseEngine._localisedStringInsertEngine">
            <summary>
                The localized string insert engine.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.ArtefactBaseEngine._annotationInsertEngine">
            <summary>
            The _annotation insert engine
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.ArtefactBaseEngine._log">
            <summary>
                The log.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.ArtefactBaseEngine._tableInfoBuilder">
            <summary>
                The table info builder.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.ArtefactBaseEngine._insertArtefactAnnotation">
            <summary>
            The _insert artefact annotation
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.ArtefactBaseEngine._database">
            <summary>
            The _database instance for Mapping Store.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ArtefactBaseEngine.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.ArtefactBaseEngine"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ArtefactBaseEngine.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.ArtefactBaseEngine"/> class.
            </summary>
            <param name="database">The database instance for Mapping Store</param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ArtefactBaseEngine.Delete(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Int64)">
            <summary>
            Delete an ARTEFACT with the specified <paramref name="primaryKey"/> value
            </summary>
            <param name="state">
            The Mapping Store <see cref="T:Estat.Sri.MappingStore.Store.Model.DbTransactionState"/>
            </param>
            <param name="primaryKey">
            The primary key value.
            </param>
            <returns>
            The number of records deleted.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ArtefactBaseEngine.GetFinalStatus(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference)">
            <summary>
            Returns the final status (id and is final value) of the specified <paramref name="reference"/>; otherwise it returns null
            </summary>
            <param name="state">
            The state.
            </param>
            <param name="reference">
            The structure reference.
            </param>
            <exception cref="T:System.ArgumentException">
            <paramref name="reference"/> unsupported structure
            </exception>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactFinalStatus"/> of the specified <paramref name="reference"/>; otherwise it returns null.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ArtefactBaseEngine.DeleteObjects``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Delete the specified <paramref name="objects"/> from Mapping Store if they exist.
            </summary>
            <param name="objects">
            The objects.
            </param>
            <typeparam name="T"> The type of maintainable object</typeparam>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ArtefactBaseEngine.GetCannotReplaceMessage(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference)">
            <summary>
            Returns the message for update failure when an artefact with the specified <paramref name="structureReference"/> already exists in MAPPING STORE and it is FINAL
            </summary>
            <param name="structureReference">
            The structure reference.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ImportMessage"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ArtefactBaseEngine.InsertArtefact(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject)">
            <summary>
            Insert the specified <paramref name="artefact"/> to MAPPING STORE
            </summary>
            <param name="state">
            The Mapping Store connection and transaction state
            </param>
            <param name="artefact">
            The artefact.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ArtefactBaseEngine.DeleteChildStructures(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Int64)">
            <summary>
            Deletes the child items.
            </summary>
            <param name="state">The state.</param>
            <param name="primaryKey">The primary key.</param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ArtefactBaseEngine.ReplaceOrInsert(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject)">
            <summary>
            Replace or insert the specified <paramref name="artefact"/> to MAPPING STORE
            </summary>
            <param name="state">
            The state.
            </param>
            <param name="artefact">
            The artefact.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="state"/> is null
                -or-
                <paramref name="artefact"/> is null
            </exception>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ArtefactBaseEngine.ReplaceOrInsert``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Insert or replace artefacts.
            </summary>
            <param name="maintainables">
            The maintainables.
            </param>
            <typeparam name="T">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject"/> based interface
            </typeparam>
            <returns>
            The <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ArtefactBaseEngine.RunArtefactCommand(Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject,System.Data.Common.DbCommand,Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase)">
            <summary>
            Run common artefact import command.
            </summary>
            <param name="artefact">
            The artefact.
            </param>
            <param name="command">
            The command.
            </param>
            <param name="artefactStoredProcedure">
            The artefact stored procedure.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ArtefactBaseEngine.RunIdentifiableArterfactCommand(Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IIdentifiableObject,System.Data.Common.DbCommand,Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase)">
            <summary>
            Run common artefact import command.
            </summary>
            <param name="artefact">
            The artefact.
            </param>
            <param name="command">
            The command.
            </param>
            <param name="artefactStoredProcedure">
            The artefact stored procedure.
            </param>
            <returns>
            The <see cref="T:System.Int64"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ArtefactBaseEngine.RunNameableArtefactCommand(Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.INameableObject,System.Data.Common.DbCommand,Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase)">
            <summary>
            Run common artefact import command.
            </summary>
            <param name="artefact">
            The artefact.
            </param>
            <param name="command">
            The command.
            </param>
            <param name="artefactStoredProcedure">
            The artefact stored procedure.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus"/>.
            </returns>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Engine.ArtefactBaseEngine.Database">
            <summary>
            Gets the database instance for Mapping Store.
            </summary>
            <value>
            The database.
            </value>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.IDeleteEngine`1">
            <summary>
            The DeleteEngine interface.
            </summary>
            <typeparam name="T">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject"/> base type.
            </typeparam>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.IDeleteEngine`1.Delete(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Delete the specified <paramref name="objects"/> from Mapping Store if they exist.
            </summary>
            <param name="objects">
            The objects.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ArtefactImportEngine`1.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.ArtefactImportEngine`1"/> class.
            </summary>
            <param name="database">
            The mapping store database instance.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ArtefactImportEngine`1.Delete(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Delete the specified <paramref name="objects"/> from Mapping Store if they exist.
            </summary>
            <param name="objects">
            The objects.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ArtefactImportEngine`1.Insert(Estat.Sri.MappingStore.Store.Model.DbTransactionState,`0)">
            <summary>
            Insert the specified <paramref name="maintainable"/> to the mapping store with <paramref name="state"/>
            </summary>
            <param name="state">
            The MAPPING STORE connection and transaction state
            </param>
            <param name="maintainable">
            The maintainable.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ArtefactImportEngine`1.Insert(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Insert the specified <paramref name="maintainables"/> to the mapping store.
            </summary>
            <param name="maintainables">
            The maintainable.
            </param>
            <returns>
            The <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ArtefactImportEngine`1.InsertArtefact(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject)">
            <summary>
            Insert the specified <paramref name="artefact"/> to MAPPING STORE
            </summary>
            <param name="state">
            The Mapping Store connection and transaction state
            </param>
            <param name="artefact">
            The artefact.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ArtefactImportEngine`1.InsertArtefactInternal(Estat.Sri.MappingStore.Store.Model.DbTransactionState,`0,Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase)">
            <summary>
            Insert the specified <paramref name="maintainable"/> to the mapping store with <paramref name="state"/>
            </summary>
            <param name="state">
            The MAPPING STORE connection and transaction state
            </param>
            <param name="maintainable">
            The maintainable.
            </param>
            <param name="artefactStoredProcedure">
            The artefact Stored Procedure.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ArtefactImportEngine`1.InsertArtefactInternal(Estat.Sri.MappingStore.Store.Model.DbTransactionState,`0,Estat.Ma.Model.StoredProcedure.ArtefactProcedurebase,System.Action{System.Data.Common.DbCommand})">
            <summary>
            Insert the specified <paramref name="maintainable"/> to the mapping store with <paramref name="state"/>
            </summary>
            <param name="state">
            The MAPPING STORE connection and transaction state
            </param>
            <param name="maintainable">
            The maintainable.
            </param>
            <param name="artefactStoredProcedure">
            The artefact Stored Procedure.
            </param>
            <param name="setupCommand">
            The setup Command. Use it to make additional changes to the command
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus"/>.
            </returns>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.HclImportEngine._log">
            <summary>
                The log.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.HclImportEngine._storedProcedures">
            <summary>
            The _stored procedures
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.HclImportEngine.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.HclImportEngine"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.HclImportEngine.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.HclImportEngine"/> class. 
            </summary>
            <param name="database">
            The mapping store database instance.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.HclImportEngine.Insert(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.Codelist.IHierarchicalCodelistObject)">
            <summary>
            Insert the specified <paramref name="maintainable"/> to the mapping store with <paramref name="state"/>
            </summary>
            <param name="state">
            The MAPPING STORE connection and transaction state
            </param>
            <param name="maintainable">
            The maintainable.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.HclImportEngine.DeleteChildStructures(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Int64)">
            <summary>
            Deletes the child items.
            </summary>
            <param name="state">The state.</param>
            <param name="primaryKey">The primary key.</param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.HclImportEngine.InsertCodeReferences(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Collections.Generic.IEnumerable{Org.Sdmxsource.Sdmx.Api.Model.Objects.Codelist.IHierarchicalCode},System.Int64,Estat.Sri.MappingStore.Store.Engine.StructureCache,System.Collections.Generic.IDictionary{System.String,System.Int64})">
            <summary>
            Insert code references.
            </summary>
            <param name="state">
            The state.
            </param>
            <param name="hierarchicalCodeObjects">
            The hierarchical code objects.
            </param>
            <param name="hierarchyID">
            The hierarchy id.
            </param>
            <param name="codelistCache">
            The codeList cache.
            </param>
            <param name="levelIds">
            The level ids.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.HclImportEngine.InsertLevel(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.Codelist.ILevelObject,System.Int64,System.Int64)">
            <summary>
            Insert a <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Codelist.ILevelObject"/> to mapping store table LEVEL.
            </summary>
            <param name="state">
            The state.
            </param>
            <param name="level">
            The level.
            </param>
            <param name="hierarchyId">
            The hierarchy id.
            </param>
            <param name="parentID">
            The parent level id.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.HclImportEngine.InsertLevels(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.Codelist.ILevelObject,System.Int64)">
            <summary>
            Insert levels to Mapping Store database.
            </summary>
            <param name="state">
            The state.
            </param>
            <param name="rootLevel">
            The root level.
            </param>
            <param name="parentHierarchyID">
            The parent hierarchy id.
            </param>
            <returns>
            The <see cref="T:System.Collections.Generic.IDictionary`2"/> with the level id as key and the mapping store level primary key as value.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.HclImportEngine.InsertHierarchies(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Collections.Generic.IEnumerable{Org.Sdmxsource.Sdmx.Api.Model.Objects.Codelist.IHierarchy},System.Int64)">
            <summary>
            The insert.
            </summary>
            <param name="state">
            The state.
            </param>
            <param name="hierarchies">
            The hierarchies.
            </param>
            <param name="parentArtefact">
            The parent artefact.
            </param>
            <returns>
            The <see cref="T:System.Collections.IEnumerable"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.HclImportEngine.InsertCodeReference(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.Codelist.IHierarchicalCode,System.Int64,System.Int64,Estat.Sri.MappingStore.Store.Engine.StructureCache,System.Collections.Generic.IDictionary{System.String,System.Int64})">
            <summary>
            Insert a <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Codelist.IHierarchicalCode"/> to mapping store table <c>HCL_CODE</c>.
            </summary>
            <param name="state">
            The state.
            </param>
            <param name="coderef">
            The Hierarchical code reference.
            </param>
            <param name="hierarchyID">
            The hierarchy ID.
            </param>
            <param name="parentID">
            The parent id.
            </param>
            <param name="codelistReferences">
            The codelist references.
            </param>
            <param name="levelIds">
            The level Ids.
            </param>
            <returns>
            The primary key of the ne
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.HclImportEngine.InsertHierarchy(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.Codelist.IHierarchy,System.Int64)">
            <summary>
            Insert the specified <paramref name="hierarchy"/> to Mapping store table <c>HIERARCHY</c>
            </summary>
            <param name="state">
            The state.
            </param>
            <param name="hierarchy">
            The hierarchy.
            </param>
            <param name="parentArtefact">
            The parent artefact.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus"/>.
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.ItemSchemeMapImportEngine`3">
            <summary>
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Mapping.IItemSchemeMapObject"/> based import engine.
            </summary>
            <typeparam name="TSchemaMap">
            The type of the schema map.
            </typeparam>
            <typeparam name="TProc">
            The type of the procedure.
            </typeparam>
            <typeparam name="TMapItemProc">
            The type of the map item procedure.
            </typeparam>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.ItemSchemeMapImportEngine`3._childType">
            <summary>
                The _child type
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ItemSchemeMapImportEngine`3.#ctor(Org.Sdmxsource.Sdmx.Api.Constants.SdmxStructureEnumType)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.ItemSchemeMapImportEngine`3"/> class.
            </summary>
            <param name="childType">
            Type of the child.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ItemSchemeMapImportEngine`3.WriteItemMaps(Estat.Sri.MappingStore.Store.Model.DbTransactionState,`0,System.Int64)">
            <summary>
            Writes the item maps.
            </summary>
            <param name="state">
            The state.
            </param>
            <param name="schemaMap">
            The schema map.
            </param>
            <param name="primaryKey">
            The primary key.
            </param>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.AgencyImportEngine">
            <summary>
            The concept import engine.
            </summary>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.ComponentAnnotationInsertEngine">
            <summary>
                Implementation that removes certain auto-generated annotations for TIME.
            </summary>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.IAnnotationInsertEngine">
            <summary>
                Interface for importing Annotations
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.IAnnotationInsertEngine.Insert(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Int64,Estat.Ma.Model.StoredProcedure.AnnotationProcedureBase,System.Collections.Generic.IList{Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IAnnotation})">
            <summary>
            Insert a record with the values from <paramref name="annotations"/> to <paramref name="annotationProcedureBase"/>
                for an artifact with the specified
                <paramref name="annotatablePrimaryKey"/>
            </summary>
            <param name="state">
            The mapping store connection and transaction state
            </param>
            <param name="annotatablePrimaryKey">
            The artifact primary key.
            </param>
            <param name="annotationProcedureBase">
            The annotation procedure base.
            </param>
            <param name="annotations">
            The annotations.
            </param>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.ComponentAnnotationInsertEngine._decorated">
            <summary>
                The _decorated
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ComponentAnnotationInsertEngine.#ctor(Estat.Sri.MappingStore.Store.Engine.IAnnotationInsertEngine)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.ComponentAnnotationInsertEngine"/> class.
            </summary>
            <param name="decorated">
            The decorated.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ComponentAnnotationInsertEngine.Insert(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Int64,Estat.Ma.Model.StoredProcedure.AnnotationProcedureBase,System.Collections.Generic.IList{Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IAnnotation})">
            <summary>
            Insert a record with the values from <paramref name="annotations"/> to <paramref name="annotationProcedureBase"/>
                for an artifact with the specified
                <paramref name="annotatablePrimaryKey"/>
            </summary>
            <param name="state">
            The mapping store connection and transaction state
            </param>
            <param name="annotatablePrimaryKey">
            The artifact primary key.
            </param>
            <param name="annotationProcedureBase">
            The annotation procedure base.
            </param>
            <param name="annotations">
            The annotations.
            </param>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.CodeListEngine">
            <summary>
                The code list import engine.
            </summary>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.ItemSchemeImportEngine`2">
            <summary>
            The item scheme import engine.
            </summary>
            <typeparam name="T">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IItemSchemeObject`1"/> type
            </typeparam>
            <typeparam name="TItem">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IItemObject"/> type
            </typeparam>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.ItemSchemeImportEngine`2._log">
            <summary>
            The _log
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.ItemSchemeImportEngine`2._itemImportEngine">
            <summary>
            The _nameable import engine.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ItemSchemeImportEngine`2.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.ItemSchemeImportEngine`2"/> class. 
            </summary>
            <param name="database">
            The mapping store database instance.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ItemSchemeImportEngine`2.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database,Estat.Sri.MappingStore.Store.Factory.IItemImportFactory{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.ItemSchemeImportEngine`2"/> class. 
            </summary>
            <param name="database">
            The mapping store database instance.
            </param>
            <param name="factory">
            The <see cref="T:Estat.Sri.MappingStore.Store.Engine.IItemImportEngine`1"/> factory. Optional
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ItemSchemeImportEngine`2.InsertInternal(Estat.Sri.MappingStore.Store.Model.DbTransactionState,`0,Estat.Ma.Model.StoredProcedure.ItemSchemeProcedureBase)">
            <summary>
            Insert the specified <paramref name="maintainable"/> to the mapping store with <paramref name="state"/>
            </summary>
            <param name="state">
            The MAPPING STORE connection and transaction state
            </param>
            <param name="maintainable">
            The maintainable.
            </param>
            <param name="artefactStoredProcedure">
            The artefact Stored Procedure.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ItemSchemeImportEngine`2.InsertInternal(Estat.Sri.MappingStore.Store.Model.DbTransactionState,`0,Estat.Ma.Model.StoredProcedure.ItemSchemeProcedureBase,System.Action{System.Data.Common.DbCommand})">
            <summary>
            Insert the specified <paramref name="maintainable"/> to the mapping store with <paramref name="state"/>
            </summary>
            <param name="state">
            The MAPPING STORE connection and transaction state
            </param>
            <param name="maintainable">
            The maintainable.
            </param>
            <param name="artefactStoredProcedure">
            The artefact Stored Procedure.
            </param>
            <param name="setupCommand">
            The setup Command.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ItemSchemeImportEngine`2.DeleteChildStructures(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Int64)">
            <summary>
            Deletes the child items.
            </summary>
            <param name="state">The state.</param>
            <param name="primaryKey">The primary key.</param>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Engine.ItemSchemeImportEngine`2.ItemImportEngine">
            <summary>
            Gets the nameable import engine.
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Engine.ItemSchemeImportEngine`2.ItemTable">
            <summary>
            Gets the item table.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.CodeListEngine._log">
            <summary>
                The log.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.CodeListEngine._storedProcedures">
            <summary>
            The _stored procedures
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.CodeListEngine.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.CodeListEngine"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.CodeListEngine.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.CodeListEngine"/> class. 
            </summary>
            <param name="database">
            The mapping store database instance.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.CodeListEngine.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database,Estat.Sri.MappingStore.Store.Factory.IItemImportFactory{Org.Sdmxsource.Sdmx.Api.Model.Objects.Codelist.ICode})">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.CodeListEngine"/> class. 
            </summary>
            <param name="database">
            The mapping store database instance.
            </param>
            <param name="factory">
            The <see cref="T:Estat.Sri.MappingStore.Store.Engine.IItemImportEngine`1"/> factory. Optional
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.CodeListEngine.Insert(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.Codelist.ICodelistObject)">
            <summary>
            Insert the specified <paramref name="maintainable"/> to the mapping store with <paramref name="state"/>
            </summary>
            <param name="state">
            The MAPPING STORE connection and transaction state
            </param>
            <param name="maintainable">
            The maintainable.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus"/>.
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.CodeEngine">
            <summary>
            The code import engine.
            </summary>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.SimpleHierarchicalItemEngineBase`2">
            <summary>
            The simple hierarchical item engine base.
            </summary>
            <typeparam name="TItem">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IItemObject"/> based type
            </typeparam>
            <typeparam name="TProc">
            The  <see cref="T:Estat.Ma.Model.StoredProcedure.HierarchicalItemProcedureBase"/> based type.
            </typeparam>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.SimpleHierarchicalItemEngineBase`2._log">
            <summary>
                The log.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.SimpleHierarchicalItemEngineBase`2._itemProcedure">
            <summary>
                The _item procedure
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.SimpleHierarchicalItemEngineBase`2.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.SimpleHierarchicalItemEngineBase`2"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.SimpleHierarchicalItemEngineBase`2.Insert(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Collections.Generic.IEnumerable{`0},System.Int64)">
            <summary>
            Insert the specified <paramref name="items"/> to the mapping store with <paramref name="state"/>
            </summary>
            <param name="state">
            The MAPPING STORE connection and transaction state
            </param>
            <param name="items">
            The items.
            </param>
            <param name="parentArtefact">
            The parent 
            </param>
            <returns>
            The <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.SimpleHierarchicalItemEngineBase`2.GetParentItem(`0)">
            <summary>
            Gets the parent item.
            </summary>
            <param name="item">
            The item.
            </param>
            <returns>
            The parent item if <paramref name="item"/> has one; otherwise null.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.SimpleHierarchicalItemEngineBase`2.InsertCode(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Int64,System.Int64,`0)">
            <summary>
            insert the specified <paramref name="item"/> .
            </summary>
            <param name="state">
            The state.
            </param>
            <param name="parentScheme">
            The parent artefact primary.
            </param>
            <param name="parentItemPrimaryKey">
            The parent item primary key.
            </param>
            <param name="item">
            The item.
            </param>
            <returns>
            The primary key of the inserted code.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.SimpleHierarchicalItemEngineBase`2.InsertCodesNoUpdate(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Int64,System.Collections.Generic.LinkedList{`0},System.Collections.Generic.IDictionary{System.String,System.Int64})">
            <summary>
            The (fast) method that inserts codes from <paramref name="items"/> together with parent item information without
                using an update SQL statement for parents.
            </summary>
            <param name="state">
            The state.
            </param>
            <param name="parentArtefact">
            The parent artefact.
            </param>
            <param name="items">
            The items.
            </param>
            <param name="parentMap">
            The parent map.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.SimpleHierarchicalItemEngineBase`2.InsertItemsWithUpdate(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Int64,System.Collections.Generic.ICollection{`0},System.Collections.Generic.IDictionary{System.String,System.Int64})">
            <summary>
            The (slow) method that inserts items from <paramref name="items"/> without parent code information with an update
                SQL statement for parents.
            </summary>
            <param name="state">
            The state.
            </param>
            <param name="parentArtefact">
            The parent artefact.
            </param>
            <param name="items">
            The code collection
            </param>
            <param name="parentMap">
            The parent map.
            </param>
            <exception cref="T:Estat.Sri.MappingStoreRetrieval.MappingStoreException">
            Invalid parent code found.
            </exception>
            <remarks>
            This method normally shouldn't run because Common API <c>SDMX Source.NET 0.9.15</c> validation rules check for
                codes with parent recursive loops. <see cref="P:Org.Sdmxsource.Sdmx.Api.Constants.ExceptionCode.ParentRecursiveLoop"/>
            </remarks>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.CodeEngine.GetParentItem(Org.Sdmxsource.Sdmx.Api.Model.Objects.Codelist.ICode)">
            <summary>
            Gets the parent item.
            </summary>
            <param name="item">The item.</param>
            <returns>The parent item if <paramref name="item"/> has one; otherwise null.</returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Properties.Resources.ErrorNotSupported">
            <summary>
              Looks up a localized string similar to Not supported..
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Properties.Resources.ExceptionCannotDetermineParent">
            <summary>
              Looks up a localized string similar to Cannot determine parent.
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Properties.Resources.ExceptionInvalidPrimaryKey">
            <summary>
              Looks up a localized string similar to Invalid PRIMARY KEY value provided..
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Properties.Resources.ExceptionNotComponentType">
            <summary>
              Looks up a localized string similar to Only Component structure types are supported..
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Properties.Resources.ExceptionNotIdentifiable">
            <summary>
              Looks up a localized string similar to Not identifiable structure type provided..
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Properties.Resources.ExceptionUnsupportedAttachmentLevel_">
            <summary>
              Looks up a localized string similar to Unsupported attachment level..
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Properties.Resources.ExceptionUnsupportedStructureReferenceFormat1">
            <summary>
              Looks up a localized string similar to Reference to an unsupported structure: {0}.
            </summary>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Factory.DeleteEngineFactory`1">
            <summary>
            The delete engine factory.
            </summary>
            <typeparam name="T">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject"/> based type.
            </typeparam>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Factory.IDeleteEngineFactory`1">
            <summary>
            The DeleteEngineFactory interface.
            </summary>
            <typeparam name="T">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject"/> based type.
            </typeparam>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.IDeleteEngineFactory`1.GetDeleteEngine(System.Configuration.ConnectionStringSettings)">
            <summary>
            Returns the delete engine.
            </summary>
            <param name="connectionStringSettings">
            The connection string settings
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Engine.IDeleteEngine`1"/>.
            </returns>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Factory.DeleteEngineFactory`1._customMethod">
            <summary>
            The _custom method.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.DeleteEngineFactory`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Factory.DeleteEngineFactory`1"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.DeleteEngineFactory`1.#ctor(System.Func{System.Configuration.ConnectionStringSettings,Estat.Sri.MappingStore.Store.Engine.IDeleteEngine{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Factory.DeleteEngineFactory`1"/> class.
            </summary>
            <param name="customMethod">
            The custom method.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.DeleteEngineFactory`1.GetDeleteEngine(System.Configuration.ConnectionStringSettings)">
            <summary>
            Returns the delete engine.
            </summary>
            <param name="connectionStringSettings">
            The connection string settings
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Engine.IDeleteEngine`1"/>.
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.DataConsumerSchemeImportEngine">
            <summary>
                The data provider scheme import engine.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.DataConsumerSchemeImportEngine._log">
            <summary>
                The log.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.DataConsumerSchemeImportEngine._storedProcedures">
            <summary>
            The _stored procedures
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.DataConsumerSchemeImportEngine.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.DataConsumerSchemeImportEngine"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.DataConsumerSchemeImportEngine.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.DataConsumerSchemeImportEngine"/> class. 
            </summary>
            <param name="database">
            The mapping store database instance.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.DataConsumerSchemeImportEngine.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database,Estat.Sri.MappingStore.Store.Factory.IItemImportFactory{Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IDataConsumer})">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.DataConsumerSchemeImportEngine"/> class. 
            </summary>
            <param name="database">
            The mapping store database instance.
            </param>
            <param name="factory">
            The <see cref="T:Estat.Sri.MappingStore.Store.Engine.IItemImportEngine`1"/> factory. Optional
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.DataConsumerSchemeImportEngine.Insert(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IDataConsumerScheme)">
            <summary>
            Insert the specified <paramref name="maintainable"/> to the mapping store with <paramref name="state"/>
            </summary>
            <param name="state">
            The MAPPING STORE connection and transaction state
            </param>
            <param name="maintainable">
            The maintainable.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus"/>.
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Model.ItemSchemeFinalStatus">
            <summary>
            The cached item.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Model.ItemSchemeFinalStatus.#ctor(Estat.Sri.MappingStore.Store.Model.ArtefactFinalStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Model.ItemSchemeFinalStatus"/> class.
            </summary>
            <param name="finalStatus">
            The final Status.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Model.ItemSchemeFinalStatus.#ctor(Estat.Sri.MappingStore.Store.Model.ArtefactFinalStatus,Estat.Sri.MappingStore.Store.Model.ItemStatusCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Model.ItemSchemeFinalStatus"/> class.
            </summary>
            <param name="finalStatus">
            The final Status.
            </param>
            <param name="itemIdMap">
            The item Id Map.
            </param>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Model.ItemSchemeFinalStatus.FinalStatus">
            <summary>
            Gets the final status.
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Model.ItemSchemeFinalStatus.ItemIdMap">
            <summary>
            Gets the item id map.
            </summary>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Factory.ImportEngineFactory`1">
            <summary>
            The import engine factory.
            </summary>
            <typeparam name="T">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject"/> based type.
            </typeparam>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Factory.IImportEngineFactory`1">
            <summary>
            The ImportEngineFactory interface.
            </summary>
            <typeparam name="T">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject"/> based type
            </typeparam>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.IImportEngineFactory`1.GetEngine(System.Configuration.ConnectionStringSettings)">
            <summary>
             Returns the <see cref="T:Estat.Sri.MappingStore.Store.Engine.IImportEngine`1"/>.
            </summary>
            <param name="connectionStringSettings">
            The connection string settings.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Engine.IImportEngine`1"/>.
            </returns>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Factory.ImportEngineFactory`1._customMethod">
            <summary>
            The _custom method.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.ImportEngineFactory`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Factory.ImportEngineFactory`1"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.ImportEngineFactory`1.#ctor(System.Func{System.Configuration.ConnectionStringSettings,Estat.Sri.MappingStore.Store.Engine.IImportEngine{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Factory.ImportEngineFactory`1"/> class.
            </summary>
            <param name="customMethod">
            The custom Method.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.ImportEngineFactory`1.GetEngine(System.Configuration.ConnectionStringSettings)">
            <summary>
             Returns the <see cref="T:Estat.Sri.MappingStore.Store.Engine.IImportEngine`1"/>.
            </summary>
            <param name="connectionStringSettings">
            The connection string settings.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Engine.IImportEngine`1"/>.
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Factory.EngineFactories">
            <summary>
            The import engine factories.
            </summary>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Factory.IEngineFactories">
            <summary>
            The ImportEngineFactories interface.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.IEngineFactories.GetIdentifiableFactory``1">
            <summary>
            Returns the identifiable factory.
            </summary>
            <typeparam name="TId">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IIdentifiableObject"/> based type.
            </typeparam>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Factory.IIdentifiableImportFactory`1"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.IEngineFactories.GetMaintainableFactory``1">
            <summary>
            Returns the maintainable factory.
            </summary>
            <typeparam name="T">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject"/> based type
            </typeparam>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Factory.IImportEngineFactory`1"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.IEngineFactories.GetMaintainableImportMethod``1(System.Configuration.ConnectionStringSettings)">
            <summary>
            Returns the maintainable insert method.
            </summary>
            <param name="connectionStringSettings">
            The connection String Settings.
            </param>
            <typeparam name="T">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject"/> based type
            </typeparam>
            <returns>
            The method that can insert <typeparamref name="T"/> objects.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.IEngineFactories.GetMaintainableDeleteMethod``1(System.Configuration.ConnectionStringSettings)">
            <summary>
            Returns the maintainable delete method.
            </summary>
            <param name="connectionStringSettings">
            The connection String Settings.
            </param>
            <typeparam name="T">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject"/> based type
            </typeparam>
            <returns>
            The method that can delete <typeparamref name="T"/> objects.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.IEngineFactories.GetNameableFactory``1">
            <summary>
            Returns the nameable factory.
            </summary>
            <typeparam name="TNam">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.INameableObject"/> based type.
            </typeparam>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Factory.IItemImportFactory`1"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.EngineFactories.GetIdentifiableFactory``1">
            <summary>
                Returns the identifiable factory.
            </summary>
            <typeparam name="TId">
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IIdentifiableObject"/> based type.
            </typeparam>
            <returns>
                The <see cref="T:Estat.Sri.MappingStore.Store.Factory.IIdentifiableImportFactory`1"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.EngineFactories.GetMaintainableFactory``1">
            <summary>
                Returns the maintainable factory.
            </summary>
            <typeparam name="T">
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject"/> based type
            </typeparam>
            <returns>
                The <see cref="T:Estat.Sri.MappingStore.Store.Factory.IImportEngineFactory`1"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.EngineFactories.GetMaintainableImportMethod``1(System.Configuration.ConnectionStringSettings)">
            <summary>
            Returns the maintainable factory.
            </summary>
            <param name="connectionStringSettings">
            The connection String Settings.
            </param>
            <typeparam name="T">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject"/> based type
            </typeparam>
            <returns>
            The method that can insert <typeparamref name="T"/> objects.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.EngineFactories.GetMaintainableDeleteMethod``1(System.Configuration.ConnectionStringSettings)">
            <summary>
            Returns the maintainable delete method.
            </summary>
            <param name="connectionStringSettings">
            The connection String Settings.
            </param>
            <typeparam name="T">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject"/> based type
            </typeparam>
            <returns>
            The method that can delete <typeparamref name="T"/> objects.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.EngineFactories.GetNameableFactory``1">
            <summary>
                Returns the nameable factory.
            </summary>
            <typeparam name="TNam">
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.INameableObject"/> based type.
            </typeparam>
            <returns>
                The <see cref="T:Estat.Sri.MappingStore.Store.Factory.IItemImportFactory`1"/>.
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Model.ItemStatusCollection">
            <summary>
                The item status collection.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Model.ItemStatusCollection.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Model.ItemStatusCollection"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Model.ItemStatusCollection.#ctor(System.Collections.Generic.IEnumerable{Estat.Sri.MappingStore.Store.Model.ItemStatus})">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Model.ItemStatusCollection"/> class.
            </summary>
            <param name="items">
            The items.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Model.ItemStatusCollection.TryGetValue(System.String,Estat.Sri.MappingStore.Store.Model.ItemStatus@)">
            <summary>
            Gets the <paramref name="status"/> associated with the specified <paramref name="id"/>
            </summary>
            <param name="id">
            The id.
            </param>
            <param name="status">
            The status.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="id"/> is null.
            </exception>
            <returns>
            True is there is a <paramref name="status"/> associated with the specified <paramref name="id"/>; otherwise false.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Model.ItemStatusCollection.GetKeyForItem(Estat.Sri.MappingStore.Store.Model.ItemStatus)">
            <summary>
            When implemented in a derived class, extracts the key from the specified element.
            </summary>
            <returns>
            The key for the specified element.
            </returns>
            <param name="item">
            The element from which to extract the key.
            </param>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Model.EnumerationValue">
            <summary>
            The enumeration value.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Model.EnumerationValue._id">
            <summary>
            The _id.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Model.EnumerationValue._name">
            <summary>
            The _name.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Model.EnumerationValue._value">
            <summary>
            The _value.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Model.EnumerationValue.#ctor(System.Int64,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Model.EnumerationValue"/> class.
            </summary>
            <param name="id">
            The id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="value">
            The value.
            </param>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Model.EnumerationValue.ID">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Model.EnumerationValue.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Model.EnumerationValue.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.DsdImportEngine">
            <summary>
            The DSD import engine.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.DsdImportEngine.IdParameter">
            <summary>
            The id parameter.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.DsdImportEngine.GroupIdParameter">
            <summary>
            The group id parameter.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.DsdImportEngine._log">
            <summary>
                The log.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.DsdImportEngine._artefactStoredProcedure">
            <summary>
            The _artefact stored procedure
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.DsdImportEngine._componentImport">
            <summary>
            The _component import.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.DsdImportEngine._groupImport">
            <summary>
            The _group import.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.DsdImportEngine.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.DsdImportEngine"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.DsdImportEngine.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.DsdImportEngine"/> class.
            </summary>
            <param name="connectionStringSettings">
            The mapping store database instance.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.DsdImportEngine.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database,Estat.Sri.MappingStore.Store.Factory.IIdentifiableImportFactory{Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IComponent},Estat.Sri.MappingStore.Store.Factory.IIdentifiableImportFactory{Org.Sdmxsource.Sdmx.Api.Model.Objects.DataStructure.IGroup})">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.DsdImportEngine"/> class.
            </summary>
            <param name="connectionStringSettings">
            The mapping store database instance.
            </param>
            <param name="componentImport">
            The component Import.
            </param>
            <param name="groupImport">
            The group Import.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.DsdImportEngine.Insert(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.DataStructure.IDataStructureObject)">
            <summary>
            Insert the specified <paramref name="maintainable"/> to the mapping store with <paramref name="state"/>
            </summary>
            <param name="state">
            The MAPPING STORE connection and transaction state
            </param>
            <param name="maintainable">
            The maintainable.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.DsdImportEngine.DeleteChildStructures(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Int64)">
            <summary>
            Deletes the child items.
            </summary>
            <param name="state">The state.</param>
            <param name="primaryKey">The primary key.</param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.DsdImportEngine.InsertDimensionGroup(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.DataStructure.IDataStructureObject,Estat.Sri.MappingStore.Store.Model.ItemStatusCollection,Estat.Sri.MappingStore.Store.Model.ItemStatusCollection)">
            <summary>
            Insert dimension group.
            </summary>
            <param name="state">
            The state.
            </param>
            <param name="dsd">
            The DSD.
            </param>
            <param name="groups">
            The groups.
            </param>
            <param name="components">
            The components.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.DsdImportEngine.InsertAttributeDimensions(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.DataStructure.IDataStructureObject,Estat.Sri.MappingStore.Store.Model.ItemStatusCollection)">
            <summary>
            Insert attribute group.
            </summary>
            <param name="state">
            The state.
            </param>
            <param name="dsd">
            The DSD.
            </param>
            <param name="components">
            The components.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.DsdImportEngine.InsertAttributeAttachmentMeasures(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.DataStructure.IDataStructureObject,Estat.Sri.MappingStore.Store.Model.ItemStatusCollection)">
            <summary>
            Inserts the attribute attachment measures. (SDMX V2.0 only)
            </summary>
            <param name="state">The state.</param>
            <param name="dsd">The DSD.</param>
            <param name="components">The components.</param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.DsdImportEngine.InsertAttributeGroup(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.DataStructure.IDataStructureObject,Estat.Sri.MappingStore.Store.Model.ItemStatusCollection,Estat.Sri.MappingStore.Store.Model.ItemStatusCollection)">
            <summary>
            Insert attribute group.
            </summary>
            <param name="state">
            The state.
            </param>
            <param name="dsd">
            The DSD.
            </param>
            <param name="groups">
            The groups.
            </param>
            <param name="components">
            The components.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.DsdImportEngine.InsertAsDataflow(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.DataStructure.IDataStructureObject,Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus)">
            <summary>
            Insert the specified <paramref name="maintainable"/> as dataflow if <paramref name="maintainable"/> is final.
            </summary>
            <param name="state">
            The state.
            </param>
            <param name="maintainable">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.DataStructure.IDataStructureObject"/>.
            </param>
            <param name="artefactStatus">
            The artefact status.
            </param>
            <remarks>
            This method inserts the specified data structure object (DSD) as dataflow. It is not an error. 
            </remarks>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.ConceptSchemeImportEngine">
            <summary>
                The concept scheme import engine.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.ConceptSchemeImportEngine._log">
            <summary>
                The log.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.ConceptSchemeImportEngine._storedProcedures">
            <summary>
            The _stored procedures
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ConceptSchemeImportEngine.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.ConceptSchemeImportEngine"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ConceptSchemeImportEngine.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.ConceptSchemeImportEngine"/> class. 
            </summary>
            <param name="database">
            The mapping store database instance.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ConceptSchemeImportEngine.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database,Estat.Sri.MappingStore.Store.Factory.IItemImportFactory{Org.Sdmxsource.Sdmx.Api.Model.Objects.ConceptScheme.IConceptObject})">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.ConceptSchemeImportEngine"/> class. 
            </summary>
            <param name="database">
            The mapping store database instance.
            </param>
            <param name="factory">
            The <see cref="T:Estat.Sri.MappingStore.Store.Engine.IItemImportEngine`1"/> factory. Optional
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ConceptSchemeImportEngine.Insert(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.ConceptScheme.IConceptSchemeObject)">
            <summary>
            Insert the specified <paramref name="maintainable"/> to the mapping store with <paramref name="state"/>
            </summary>
            <param name="state">
            The MAPPING STORE connection and transaction state
            </param>
            <param name="maintainable">
            The maintainable.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus"/>.
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Builder.ItemIdQueryBuilder">
            <summary>
            The item id query builder.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Builder.ItemIdQueryBuilder._database">
            <summary>
            The database.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Builder.ItemIdQueryBuilder.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Builder.ItemIdQueryBuilder"/> class.
            </summary>
            <param name="database">
            The database.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Builder.ItemIdQueryBuilder.Build(Estat.Sri.MappingStoreRetrieval.Model.ItemTableInfo)">
            <summary>
            Builds an object of type <see cref="T:System.String"/>
            </summary>
            <param name="buildFrom">
            An Object to build the output object from <see cref="T:Estat.Sri.MappingStoreRetrieval.Model.ItemTableInfo"/>
            </param>
            <returns>
            Object of type <see cref="T:System.String"/>
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Extension.OuputStoredProcedureExtension">
            <summary>
            The <see cref="T:Estat.Ma.Model.StoredProcedure.OutputProcedureBase"/> extension.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Extension.OuputStoredProcedureExtension.CreateCommandWithDefaults(Estat.Ma.Model.StoredProcedure.IProcedure,Estat.Sri.MappingStore.Store.Model.DbTransactionState)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified <paramref name="state"/> 
            </summary>
            <param name="stored">
            The stored.
            </param>
            <param name="state">
            The state.
            </param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified <paramref name="state"/> 
            </returns>
            <remarks>
            It sets the following <see cref="T:System.Data.Common.DbCommand"/> properties <see cref="P:System.Data.Common.DbCommand.Connection"/> , <see cref="P:System.Data.Common.DbCommand.Transaction"/> , <see cref="P:System.Data.Common.DbCommand.CommandType"/> and <see cref="P:System.Data.Common.DbCommand.CommandText"/>
            </remarks>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Extension.OuputStoredProcedureExtension.CreateCommand(Estat.Ma.Model.StoredProcedure.IProcedure,Estat.Sri.MappingStore.Store.Model.DbTransactionState)">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified <paramref name="state"/> 
            </summary>
            <param name="stored">
            The stored.
            </param>
            <param name="state">
            The state.
            </param>
            <returns>
            a new instance of a <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure with the specified <paramref name="state"/> 
            </returns>
            <remarks>
            It sets the following <see cref="T:System.Data.Common.DbCommand"/> properties <see cref="P:System.Data.Common.DbCommand.Connection"/> , <see cref="P:System.Data.Common.DbCommand.Transaction"/> , <see cref="P:System.Data.Common.DbCommand.CommandType"/> and <see cref="P:System.Data.Common.DbCommand.CommandText"/>
            </remarks>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.StructureCache">
            <summary>
                The structure cache.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.StructureCache._tableInfoBuilder">
            <summary>
                The table info builder.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.StructureCache._dictionary">
            <summary>
                The _dictionary.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.StructureCache.GetId(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Constants.SdmxStructureEnumType,System.Int64)">
            <summary>
            Returns the <c>ITEM.ITEM_ID</c> value from Mapping Store for <paramref name="artefactId"/>
            </summary>
            <param name="state">
            The state.
            </param>
            <param name="sdmxStructure">
            The SDMX Structure.
            </param>
            <param name="artefactId">
            The artefact primary key. <c>ARTEFACT.ART_ID</c>.
            </param>
            <returns>
            The <c>ITEM.ITEM_ID</c> value from Mapping Store for <paramref name="artefactId"/>
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="state"/> is null 
            </exception>
            <exception cref="T:System.ArgumentException">
            At <paramref name="sdmxStructure"/>, unsupported structure
            </exception>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.StructureCache.GetComponentMapIds(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference)">
            <summary>
            Gets the component map ids.
            </summary>
            <param name="state">
            The state.
            </param>
            <param name="dsdReference">
            The DSD reference.
            </param>
            <returns>
            The component id to primary key value dictionary
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.StructureCache.GetStructure(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference)">
            <summary>
            Gets the structure.
            </summary>
            <param name="state">The state.</param>
            <param name="reference">The reference.</param>
            <returns>The <see cref="T:Estat.Sri.MappingStore.Store.Model.ItemStatusCollection"/></returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.AnnotationInsertEngine">
            <summary>
                The class responsible for adding records to <c>ANNOTATION</c> and related tables.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.AnnotationInsertEngine._annotationText">
            <summary>
            The _insert annotation for artefacts
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.AnnotationInsertEngine.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.AnnotationInsertEngine"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.AnnotationInsertEngine.Insert(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Int64,Estat.Ma.Model.StoredProcedure.AnnotationProcedureBase,System.Collections.Generic.IList{Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IAnnotation})">
            <summary>
            Insert a record with the values from <paramref name="annotations" /> to <paramref name="annotationProcedureBase" /> for an artifact with the specified
            <paramref name="annotatablePrimaryKey" />
            </summary>
            <param name="state">The mapping store connection and transaction state</param>
            <param name="annotatablePrimaryKey">The artifact primary key.</param>
            <param name="annotationProcedureBase">The annotation procedure base.</param>
            <param name="annotations">The annotations.</param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.AnnotationInsertEngine.GetLanguage(Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.ITextTypeWrapper)">
            <summary>
            Returns the normalized language.
            </summary>
            <param name="text">
            The text.
            </param>
            <returns>
            The normalized language.
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.CodeListMapImportEngine">
            <summary>
            The CodeListMap import engine
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.CodeListMapImportEngine.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.CodeListMapImportEngine"/> class.
            </summary>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.CategorySchemeImportEngine">
            <summary>
            The category scheme import engine.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.CategorySchemeImportEngine._log">
            <summary>
                The log.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.CategorySchemeImportEngine._storedProcedures">
            <summary>
            The _stored procedures.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.CategorySchemeImportEngine.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.CategorySchemeImportEngine"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.CategorySchemeImportEngine.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.CategorySchemeImportEngine"/> class. 
            </summary>
            <param name="database">
            The mapping store database instance.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.CategorySchemeImportEngine.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database,Estat.Sri.MappingStore.Store.Factory.IItemImportFactory{Org.Sdmxsource.Sdmx.Api.Model.Objects.CategoryScheme.ICategoryObject})">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.CategorySchemeImportEngine"/> class. 
            </summary>
            <param name="database">
            The mapping store database instance.
            </param>
            <param name="factory">
            The <see cref="T:Estat.Sri.MappingStore.Store.Engine.IItemImportEngine`1"/> factory. Optional
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.CategorySchemeImportEngine.Insert(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.CategoryScheme.ICategorySchemeObject)">
            <summary>
            Insert the specified <paramref name="maintainable"/> to the mapping store with <paramref name="state"/>
            </summary>
            <param name="state">
            The MAPPING STORE connection and transaction state
            </param>
            <param name="maintainable">
            The maintainable.
            </param>
            <returns>
            The <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Model.ArtefactFinalStatus">
            <summary>
            The artefact final status.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Model.ArtefactFinalStatus._empty">
            <summary>
            The _empty <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactFinalStatus"/>
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Model.ArtefactFinalStatus._isFinal">
            <summary>
            The _is final.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Model.ArtefactFinalStatus._primaryKey">
            <summary>
            The _primary key.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Model.ArtefactFinalStatus.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactFinalStatus"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Model.ArtefactFinalStatus.#ctor(System.Int64,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactFinalStatus"/> class. 
            </summary>
            <param name="primaryKey">
            The primary Key.
            </param>
            <param name="isFinal">
            The is Final.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Model.ArtefactFinalStatus.#ctor(System.Int64,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactFinalStatus"/> class. 
            </summary>
            <param name="primaryKey">
            The primary Key.
            </param>
            <param name="isFinal">
            The is Final.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Model.ArtefactFinalStatus.#ctor(System.Int64,System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactFinalStatus"/> class. 
            </summary>
            <param name="primaryKey">
            The primary Key.
            </param>
            <param name="isFinal">
            The is Final.
            </param>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Model.ArtefactFinalStatus.Empty">
            <summary>
            Gets the empty <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactFinalStatus"/>.
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Model.ArtefactFinalStatus.IsFinal">
            <summary>
            Gets a value indicating whether is final.
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Model.ArtefactFinalStatus.PrimaryKey">
            <summary>
            Gets the primary key.
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Model.ArtefactFinalStatus.IsEmpty">
            <summary>
            Gets a value indicating whether it is empty.
            </summary>
            <value>
              <c>true</c> if [is empty]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.ValidateStatusEngine">
            <summary>
                The validate status engine.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ValidateStatusEngine.GetError(System.String,Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference)">
            <summary>
            Returns an error message with the specified <paramref name="format"/> for <paramref name="reference"/>
            </summary>
            <param name="format">
            The format.
            </param>
            <param name="reference">
            The component.
            </param>
            <returns>
            The error message.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ValidateStatusEngine.GetReferenceStatus(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference,Estat.Sri.MappingStore.Store.Engine.StructureCache)">
            <summary>
            Gets the CodeList status.
            </summary>
            <param name="state">
            The state.
            </param>
            <param name="reference">
            The reference.
            </param>
            <param name="itemScheme">
            The item scheme.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ItemSchemeFinalStatus"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ValidateStatusEngine.ValidateFinalStatus(Estat.Sri.MappingStore.Store.Model.ArtefactFinalStatus,Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference)">
            <summary>
            Validate the specified CodeList reference.
            </summary>
            <param name="refereceStatus">
            The codeList status.
            </param>
            <param name="codelistRef">
            The CodeList reference.
            </param>
            <exception cref="T:Estat.Sri.MappingStoreRetrieval.MappingStoreException">
            The specified <paramref name="refereceStatus"/> is not valid.
            </exception>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.DsdGroupImportEngine">
            <summary>
                The DSD group import engine.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.DsdGroupImportEngine._insertDsdGroup">
            <summary>
            The _insert DSD group
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.DsdGroupImportEngine._annotationInsertEngine">
            <summary>
            The _annotation insert engine
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.DsdGroupImportEngine._insertGroupAnnotation">
            <summary>
            The _insert group annotation
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.DsdGroupImportEngine.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.DsdGroupImportEngine"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.DsdGroupImportEngine.Insert(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Collections.Generic.IEnumerable{Org.Sdmxsource.Sdmx.Api.Model.Objects.DataStructure.IGroup},System.Int64)">
            <summary>
            Insert the specified <paramref name="items"/> to the mapping store with <paramref name="state"/>
            </summary>
            <param name="state">
                The MAPPING STORE connection and transaction state
            </param>
            <param name="items">
                The items.
            </param>
            <param name="parentArtefact">
                The primary key of the parent artefact.
            </param>
            <returns>
            The <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.OrganisationUnitImportEngine">
            <summary>
            The concept import engine.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.OrganisationUnitImportEngine.GetParentItem(Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IOrganisationUnit)">
            <summary>
            Gets the parent item.
            </summary>
            <param name="item">
            The item.
            </param>
            <returns>
            The parent item if <paramref name="item"/> has one; otherwise null.
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Extension.DapperDatabaseExtension">
            <summary>
            This class contains extensions for using <see cref="N:Dapper"/> with <see cref="T:Estat.Sri.MappingStoreRetrieval.Manager.Database"/>
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Extension.DapperDatabaseExtension.Query(Estat.Sri.MappingStoreRetrieval.Manager.Database,System.String)">
            <summary>
            Queries the specified database.
            </summary>
            <param name="database">The database.</param>
            <param name="sqlQuery">The SQL query.</param>
            <returns>
            The <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Extension.DapperDatabaseExtension.Query``1(Estat.Sri.MappingStoreRetrieval.Manager.Database,System.String)">
            <summary>
            Queries the specified database.
            </summary>
            <typeparam name="T">The type of the result</typeparam>
            <param name="database">The database.</param>
            <param name="sqlQuery">The SQL query.</param>
            <returns>
            The <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Extension.DapperDatabaseExtension.Query``2(Estat.Sri.MappingStoreRetrieval.Manager.Database,System.String,System.Func{``0,``1,``0},System.String)">
            <summary>
            Queries the specified database.
            </summary>
            <typeparam name="T1">The type of the 1.</typeparam>
            <typeparam name="T2">The type of the 2.</typeparam>
            <param name="database">The database.</param>
            <param name="sqlQuery">The SQL query.</param>
            <param name="map">The map function.</param>
            <param name="splitOn">The split on.</param>
            <returns>
            The <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.Update.UpdateLocalisedStringEngine">
            <summary>
                Class that provides methods to update the localized string of a nameable or maintainable.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.Update.UpdateLocalisedStringEngine.SelectLocalisedStringByForeignKey">
            <summary>
                The select localized string by foreign key
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.Update.UpdateLocalisedStringEngine.UpdateLocalisedStringQuery">
            <summary>
                The update localized string statement. It take 2 parameters, 1. the text, 2. The LS_ID value.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.Update.UpdateLocalisedStringEngine._insertLocalisedString">
            <summary>
            The _insert localised string
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.Update.UpdateLocalisedStringEngine._mappingStoreDatabase">
            <summary>
                The mapping store database
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.Update.UpdateLocalisedStringEngine.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.Update.UpdateLocalisedStringEngine"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.Update.UpdateLocalisedStringEngine.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.Update.UpdateLocalisedStringEngine"/> class.
            </summary>
            <param name="mappingStoreDatabase">
            The mapping store database.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.Update.UpdateLocalisedStringEngine.Update(Org.Sdmxsource.Sdmx.Api.Model.Mutable.Base.INameableMutableObject,System.Int64)">
            <summary>
            Updates the specified <paramref name="mutable"/>.
            </summary>
            <param name="mutable">
            The nameable mutable object.
            </param>
            <param name="primaryKeyValue">
            The primary key value.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="mutable"/> is null
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="primaryKeyValue"/> is not valid
            </exception>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.Update.UpdateLocalisedStringEngine.IsArtefact(Org.Sdmxsource.Sdmx.Api.Model.Mutable.Base.IMutableObject)">
            <summary>
            Determines whether the specified mutable is an <c>artefact</c>.
            </summary>
            <param name="mutable">
            The mutable.
            </param>
            <returns>
            true is the <c>LOCALISED_STRING.ART_ID</c> should be used; otherwise false.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.Update.UpdateLocalisedStringEngine.ExecuteUpdateStatement(System.Collections.Generic.IEnumerable{Estat.Sri.MappingStore.Store.Engine.Update.UpdateLocalisedStringEngine.LocalisedStringVO},System.String)">
            <summary>
            Executes the update statement.
            </summary>
            <param name="inMutableUpdateNames">
            The in mutable update names.
            </param>
            <param name="statement">
            The statement.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.Update.UpdateLocalisedStringEngine.Insert(System.Collections.Generic.IEnumerable{Org.Sdmxsource.Sdmx.Api.Model.Mutable.Base.ITextTypeWrapperMutableObject},System.Boolean,System.Int64,System.String)">
            <summary>
            Inserts the specified text mutable object.
            </summary>
            <param name="textObject">
            The text mutable object.
            </param>
            <param name="isArtefact">
            The SDMX structure.
            </param>
            <param name="primaryKeyValue">
            The primary key value.
            </param>
            <param name="localisedType">
            A name or a description.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="textObject"/>
                or
                <paramref name="isArtefact"/>
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="isArtefact"/>
                or <paramref name="primaryKeyValue"/>
            </exception>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.Update.UpdateLocalisedStringEngine.Retrieve(System.Int64,System.String,System.Boolean)">
            <summary>
            Retrieves the list of <see cref="T:Estat.Sri.MappingStore.Store.Engine.Update.UpdateLocalisedStringEngine.LocalisedStringVO"/> for the specified nameable primary key value.
            </summary>
            <param name="nameablePrimaryKeyValue">
            The nameable primary key value.
            </param>
            <param name="localisedType">
            Type of the localized.
            </param>
            <param name="isArtefact">
            Set to <c>true</c> if the foreign key is <c>ART_ID</c>.
            </param>
            <returns>
            The list of <see cref="T:Estat.Sri.MappingStore.Store.Engine.Update.UpdateLocalisedStringEngine.LocalisedStringVO"/>
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.Update.UpdateLocalisedStringEngine.Update(System.Int64,System.String,System.Boolean,System.Collections.Generic.IEnumerable{Org.Sdmxsource.Sdmx.Api.Model.Mutable.Base.ITextTypeWrapperMutableObject})">
            <summary>
            Updates the specified primary key value.
            </summary>
            <param name="primaryKeyValue">
            The primary key value.
            </param>
            <param name="localisedType">
            Type of the localized.
            </param>
            <param name="isArtefact">
            Set to <c>true</c> if the foreign key is <c>ART_ID</c>.
            </param>
            <param name="names">
            The names.
            </param>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.Update.UpdateLocalisedStringEngine.LocalisedStringVO">
            <summary>
                The value object for the <c>LOCALISED_STRING</c>
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Engine.Update.UpdateLocalisedStringEngine.LocalisedStringVO.PrimaryKeyValue">
            <summary>
                Gets or sets the primary key value.
            </summary>
            <value>
                The primary key value.
            </value>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Engine.Update.UpdateLocalisedStringEngine.LocalisedStringVO.TextTypeWrapper">
            <summary>
                Gets or sets the text type wrapper.
            </summary>
            <value>
                The text type wrapper.
            </value>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.OrganisationUnitSchemeImportEngine">
            <summary>
                The concept scheme import engine.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.OrganisationUnitSchemeImportEngine._log">
            <summary>
                The log.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.OrganisationUnitSchemeImportEngine._storedProcedures">
            <summary>
            The _stored procedures
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.OrganisationUnitSchemeImportEngine.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.OrganisationUnitSchemeImportEngine"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.OrganisationUnitSchemeImportEngine.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.OrganisationUnitSchemeImportEngine"/> class. 
            </summary>
            <param name="database">
            The mapping store database instance.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.OrganisationUnitSchemeImportEngine.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database,Estat.Sri.MappingStore.Store.Factory.IItemImportFactory{Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IOrganisationUnit})">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.OrganisationUnitSchemeImportEngine"/> class. 
            </summary>
            <param name="database">
            The mapping store database instance.
            </param>
            <param name="factory">
            The <see cref="T:Estat.Sri.MappingStore.Store.Engine.IItemImportEngine`1"/> factory. Optional
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.OrganisationUnitSchemeImportEngine.Insert(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IOrganisationUnitSchemeObject)">
            <summary>
            Insert the specified <paramref name="maintainable"/> to the mapping store with <paramref name="state"/>
            </summary>
            <param name="state">
            The MAPPING STORE connection and transaction state
            </param>
            <param name="maintainable">
            The maintainable.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus"/>.
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.StructureSetImportEngine">
            <summary>
            The DSD import engine.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.StructureSetImportEngine._log">
            <summary>
                The log.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.StructureSetImportEngine._artefactStoredProcedure">
            <summary>
            The artefact stored procedure
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.StructureSetImportEngine._codelistMapImport">
            <summary>
            The _component import.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.StructureSetImportEngine._structureMapImportEngine">
            <summary>
            The _group import.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.StructureSetImportEngine.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.StructureSetImportEngine"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.StructureSetImportEngine.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.StructureSetImportEngine"/> class.
            </summary>
            <param name="connectionStringSettings">
            The mapping store database instance.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.StructureSetImportEngine.Insert(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.Mapping.IStructureSetObject)">
            <summary>
            Insert the specified <paramref name="maintainable"/> to the mapping store with <paramref name="state"/>
            </summary>
            <param name="state">
            The MAPPING STORE connection and transaction state
            </param>
            <param name="maintainable">
            The maintainable.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.StructureSetImportEngine.DeleteChildStructures(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Int64)">
            <summary>
            Deletes the child items.
            </summary>
            <param name="state">The state.</param>
            <param name="primaryKey">The primary key.</param>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Manager.MappingStoreManager">
            <summary>
            The mapping store manager.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Manager.MappingStoreManager._artefactImportStatuses">
            <summary>
            The _artefact import statuses.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Manager.MappingStoreManager._connectionStringSettings">
            <summary>
            The _connection string settings.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Manager.MappingStoreManager._factories">
            <summary>
            The _factories.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Manager.MappingStoreManager._measureDimensionRepresentationEngine">
            <summary>
            The _measure dimension representation engine
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Manager.MappingStoreManager.#ctor(System.Configuration.ConnectionStringSettings,System.Collections.Generic.IList{Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus})">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Manager.MappingStoreManager"/> class.
            </summary>
            <param name="connectionStringSettings">
            The connection string settings.
            </param>
            <param name="artefactImportStatuses">
            The artefact import statuses.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Manager.MappingStoreManager.#ctor(System.Configuration.ConnectionStringSettings,Estat.Sri.MappingStore.Store.Factory.IEngineFactories,System.Collections.Generic.IList{Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus})">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Manager.MappingStoreManager"/> class.
            </summary>
            <param name="connectionStringSettings">
            The connection string settings.
            </param>
            <param name="factories">
            The factories.
            </param>
            <param name="artefactImportStatuses">
            The artefact import statuses.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="connectionStringSettings"/> is null
            -or-
            <paramref name="artefactImportStatuses"/> is null
            </exception>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Manager.MappingStoreManager.DeleteStructure(Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject)">
            <summary>
            Deletes the maintainable structures in the supplied objects
            </summary>
            <param name="maintainable">
            The maintainable to delete
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Manager.MappingStoreManager.DeleteStructures(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects)">
            <summary>
            Deletes the maintainable structures in the supplied sdmxObjects
            </summary>
            <param name="sdmxObjects">
            SDMX objects
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Manager.MappingStoreManager.SaveStructure(Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject)">
            <summary>
            Saves the maintainable
            </summary>
            <param name="maintainable">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject"/>
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Manager.MappingStoreManager.SaveStructures(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects)">
            <summary>
            Saves the maintainable structures in the supplied sdmxObjects
            </summary>
            <param name="sdmxObjects">
            SDMX objects
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Manager.MappingStoreManager.DeleteMaintainable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Delete the specified <paramref name="maintainables"/> 
            </summary>
            <param name="maintainables">
            The maintainable.
            </param>
            <typeparam name="T">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject"/> based type.
            </typeparam>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Manager.MappingStoreManager.InsertMaintainable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Insert the specified <paramref name="maintainables"/>.
            </summary>
            <param name="maintainables">
            The maintainables.
            </param>
            <typeparam name="T">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject"/> based type.
            </typeparam>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Factory.INameableImportFactory`2">
            <summary>
            The NameableImportFactory interface.
            </summary>
            <typeparam name="T">The type of the <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.INameableObject"/></typeparam>
            <typeparam name="TProc">The type of the procedure.</typeparam>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.INameableImportFactory`2.GetNameableImport">
            <summary>
            Returns the <see cref="T:Estat.Sri.MappingStore.Store.Engine.INameableImportEngine`2"/>.
            </summary>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Engine.INameableImportEngine`2"/>.
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Extension.StructureExtensions">
            <summary>
            The structure type extensions.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Extension.StructureExtensions._log">
            <summary>
                The log.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Extension.StructureExtensions._fromMutableBuilder">
            <summary>
            The _from mutable builder
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Extension.StructureExtensions.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Estat.Sri.MappingStore.Store.Extension.StructureExtensions"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Extension.StructureExtensions.AsReference(Org.Sdmxsource.Sdmx.Api.Model.Mutable.Base.IMaintainableMutableObject)">
            <summary>
            Gets the reference.
            </summary>
            <param name="mutableObject">The mutable object.</param>
            <returns>
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference"/>
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Extension.StructureExtensions.AsReference(Org.Sdmxsource.Sdmx.Api.Model.Mutable.Base.IMaintainableMutableObject,Org.Sdmxsource.Sdmx.Api.Model.Mutable.Base.IIdentifiableMutableObject)">
            <summary>
            Gets the reference.
            </summary>
            <param name="mutableObject">The mutable object.</param>
            <param name="identifiableMutableObject">The identifiable mutable object.</param>
            <returns>
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference"/>
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Extension.StructureExtensions.GetMappingStoreType(Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IComponent)">
            <summary>
            Get the mapping store component type.
            </summary>
            <param name="component">
            The SDMX Component
            </param>
            <returns>
            The mapping store component type. 
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Extension.StructureExtensions.GetMappingStoreAssignmentLevel(Org.Sdmxsource.Sdmx.Api.Model.Objects.DataStructure.IAttributeObject)">
            <summary>
            Returns the mapping store assignment level for the specified <paramref name="component"/>.
            </summary>
            <param name="component">
            The component.
            </param>
            <returns>
            The mapping store assignment level for the specified <paramref name="component"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="component"/> has an unsupported assignment level.
            </exception>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Extension.StructureExtensions.GetAllComponents(Org.Sdmxsource.Sdmx.Api.Model.Objects.DataStructure.IDataStructureObject)">
            <summary>
            Returns all components of the specified <paramref name="dataStructure"/>.
            It includes the <see cref="P:Org.Sdmxsource.Sdmx.Api.Model.Objects.DataStructure.ICrossSectionalDataStructureObject.CrossSectionalMeasures"/> 
            </summary>
            <param name="dataStructure">
            The data structure.
            </param>
            <returns>
            The components of the specified <paramref name="dataStructure"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Extension.StructureExtensions.GetErrorMessage(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference,System.Exception)">
            <summary>
            Returns an error message.
            </summary>
            <param name="structureReference">
            The structure reference.
            </param>
            <param name="ex">
            The ex.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ImportMessage"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Extension.StructureExtensions.GetAsHumanReadableString(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference)">
            <summary>
            Returns the identification of the specified <paramref name="structureReference"/> as a human readable string.
            </summary>
            <param name="structureReference">
            The structure reference.
            </param>
            <returns>
            The identification of the specified <paramref name="structureReference"/> as a human readable string.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Extension.StructureExtensions.CreateChildReference(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference,Org.Sdmxsource.Sdmx.Api.Constants.SdmxStructureEnumType,System.String[])">
            <summary>
            Creates the child reference.
            </summary>
            <param name="structureReference">The structure reference.</param>
            <param name="structureType">Type of the structure.</param>
            <param name="ids">The ids.</param>
            <returns>The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference"/> for <paramref name="ids"/> of type <paramref name="structureReference"/></returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Extension.StructureExtensions.ConvertToCodelist(Org.Sdmxsource.Sdmx.Api.Model.Mutable.ConceptScheme.IConceptSchemeMutableObject)">
            <summary>
            Convert the specified <paramref name="conceptScheme"/> to CodeList.
            </summary>
            <param name="conceptScheme">The concept scheme.</param>
            <returns>The CodeList.</returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Extension.StructureExtensions.GetComponent(Org.Sdmxsource.Sdmx.Api.Model.Mutable.DataStructure.IDataStructureMutableObject,System.String)">
            <summary>
            Gets the component.
            </summary>
            <param name="dsd">The DSD.</param>
            <param name="id">The component unique identifier.</param>
            <returns>The matched <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Mutable.Base.IComponentMutableObject"/>; otherwise <c>null</c></returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Factory.ItemImportFactory`1">
            <summary>
            The item import factory.
            </summary>
            <typeparam name="T">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IItemObject"/> type
            </typeparam>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Factory.IItemImportFactory`1">
            <summary>
            The ItemImportFactory interface.
            </summary>
            <typeparam name="T">
            The type of the <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.INameableObject"/>
            </typeparam>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.IItemImportFactory`1.GetItemImport">
            <summary>
            Returns the <see cref="T:Estat.Sri.MappingStore.Store.Engine.IItemImportEngine`1"/>.
            </summary>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Engine.IItemImportEngine`1"/>.
            </returns>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Factory.ItemImportFactory`1._customFactory">
            <summary>
            The _custom factory.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.ItemImportFactory`1.#ctor(System.Func{Estat.Sri.MappingStore.Store.Engine.IItemImportEngine{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Factory.ItemImportFactory`1"/> class.
            </summary>
            <param name="customFactory">
            The custom factory.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.ItemImportFactory`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Factory.ItemImportFactory`1"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.ItemImportFactory`1.GetItemImport">
            <summary>
                Returns the <see cref="T:Estat.Sri.MappingStore.Store.Engine.IItemImportEngine`1"/>.
            </summary>
            <returns>
                The <see cref="T:Estat.Sri.MappingStore.Store.Engine.IItemImportEngine`1"/>.
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Helper.DefaultEngineHelper">
            <summary>
            The default engine helper.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Helper.DefaultEngineHelper._artefactEngines">
            <summary>
            The artefact engines.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Helper.DefaultEngineHelper._identifiableEngines">
            <summary>
            The _identifiable engines.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Helper.DefaultEngineHelper._itemEngines">
            <summary>
            The item engines.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Helper.DefaultEngineHelper._nameableEngines">
            <summary>
            The _nameable engines.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Helper.DefaultEngineHelper.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Estat.Sri.MappingStore.Store.Helper.DefaultEngineHelper"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Helper.DefaultEngineHelper.GetArtefactDeleteEngine``1(System.Configuration.ConnectionStringSettings)">
            <summary>
            Returns the default artefact delete method for <typeparamref name="T"/>
            </summary>
            <param name="connectionStringSettings">
            The connection string settings.
            </param>
            <typeparam name="T">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject"/> based type.
            </typeparam>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Engine.IDeleteEngine`1"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Helper.DefaultEngineHelper.GetArtefactEngine``1(System.Configuration.ConnectionStringSettings)">
            <summary>
            Returns the default insert artefact engine for <typeparamref name="T"/>
            </summary>
            <param name="connectionStringSettings">
            The connection string settings.
            </param>
            <typeparam name="T">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject"/> based type.
            </typeparam>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Engine.IImportEngine`1"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Helper.DefaultEngineHelper.GetIdentifiableEngine``1">
            <summary>
            Returns the default identifiable engine for type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IIdentifiableObject"/> based type.
            </typeparam>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Engine.IIdentifiableImportEngine`1"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Helper.DefaultEngineHelper.GetItemEngine``1">
            <summary>
            Returns the default item engine for type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.INameableObject"/> based type.
            </typeparam>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Engine.IItemImportEngine`1"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Helper.DefaultEngineHelper.GetNameableEngine``2">
            <summary>
            Returns the default item engine for type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.INameableObject"/> based type.</typeparam>
            <typeparam name="TProc">The type of the procedure.</typeparam>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Engine.INameableImportEngine`2"/>.
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder">
            <summary>
                The category builder.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.Build(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.ICrossReference)">
            <summary>
            Builds a <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.CategoryScheme.ICategoryObject"/> from the specified <paramref name="buildFrom"/>
            </summary>
            <param name="buildFrom">
            An Object to build the output object from
            </param>
            <returns>
            Object of type  <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.CategoryScheme.ICategoryObject"/>
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock">
            <summary>
                The category mock.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock._categorisation">
            <summary>
            The _categorisation.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock._crossReference">
            <summary>
                The _cross reference.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock.#ctor(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.ICrossReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock"/> class.
            </summary>
            <param name="crossReference">
            The cross reference.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock.DeepEquals(Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.ISdmxObject,System.Boolean)">
            <summary>
            Gets a value indicating whether the SdmxObject equals the given sdmxObject in every respect (except for the validTo property of a maintainable artefact, this is not taken into consideration)
                <p/>
                This method calls deepEquals on any SdmxObject composites.
            </summary>
            <param name="sdmxObject">
            The sdmxObject.
            </param>
            <param name="includeFinalProperties">
            Set to true to check final properties.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/> .
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock.GetAnnotationsByTitle(System.String)">
            <summary>
            Returns the annotations with the given title, returns an empty Set is no annotations exist that have a type which
                matches the given string
            </summary>
            <param name="title">
            The annotation title.
            </param>
            <returns>
            The <see cref="T:System.Collections.Generic.ISet`1"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock.GetAnnotationsByType(System.String)">
            <summary>
            Returns the annotations with the given type, returns an empty Set is no annotations exist that have a type which
                matches the given string
            </summary>
            <param name="type">
            The Annotation type
            </param>
            <returns>
            The <see cref="T:System.Collections.Generic.ISet`1"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock.GetComposites``1(System.Type)">
            <summary>
            Gets any composites of this SdmxObject of the given type
            </summary>
            <param name="type">
            The type.
            </param>
            <typeparam name="T">
            Generic type parameter
            </typeparam>
            <returns>
            The <see cref="T:System.Collections.Generic.ISet`1"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock.GetFullIdPath(System.Boolean)">
            <summary>
            Gets a period separated id of this identifiable, starting from the non-maintainable top level ancestor to this identifiable.
                <p/>
                For example, if this is Category A living as a child of Category AA, then this method will return AA.A (not the category scheme id is not present in this identifier)
                <p/>
                Gets null if this is a maintainable Object
            </summary>
            <param name="includeDifferentTypes">
            Include different types.
            </param>
            <returns>
            The <see cref="T:System.String"/> .
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock.GetParent``1(System.Boolean)">
            <summary>
            Visits all items up the parent hierarchy to return the first occurrence of parent of the given type that this SdmxObject belongs to
                <p/>
                If a parent of the given type does not exist in the hierarchy, null will be returned
            </summary>
            <typeparam name="T">
            Generic type parameter.
            </typeparam>
            <param name="includeThisInSearch">
            if true then this type will be first checked to see if it is of the given type
            </param>
            <returns>
            The <see cref="!:T"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock.HasAnnotationType(System.String)">
            <summary>
            Gets a value indicating whether the @object has an annotation with the given type
            </summary>
            <param name="annoationType">
            Annotation type
            </param>
            <returns>
            The <see cref="T:System.Boolean"/> .
            </returns>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock.AllTextTypes">
            <summary>
                Gets a list of all the underlying text types for this identifiable (does not recurse down to children).
                <p />
                Gets an empty list if there are no text types for this identifiable
            </summary>
            <value> </value>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock.Annotations">
            <summary>
                Gets the list of annotations
                <p />
                <b>NOTE</b>The list is a copy so modify the returned list will not
                be reflected in the AnnotableObject instance
            </summary>
            <value> </value>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock.AsReference">
            <summary>
                Builds a IStructureReference that is a representation of this IIdentifiableObject as a reference.  The
                returned IStructureReference can be used to uniquely identify this identifiable @object.
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock.Composites">
            <summary>
                Gets a set of composite Objects to this sdmxObject
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock.CrossReferences">
            <summary>
                Gets a set of cross references that are made by this sdmxObject, or by any composite sdmxObject of this sdmxObject
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock.Description">
            <summary>
                Gets the description in the default locale
            </summary>
            <value> first locale value it finds or null if there are none </value>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock.Descriptions">
            <summary>
                Gets a list of descriptions for this component
                <p />
                <b>NOTE:</b>The list is a copy so modifying the returned list will not
                be reflected in the IIdentifiableObject instance
            </summary>
            <value> </value>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock.Id">
            <summary>
                Gets the id for this component, this is a mandatory field and will never be null
            </summary>
            <value> </value>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock.IdentifiableComposites">
            <summary>
                Gets a set of identifiable that are contained within this identifiable
            </summary>
            <value> </value>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock.IdentifiableParent">
            <summary>
                Gets the first identifiable parent of this SDMXObject
                <p />
                If this is a MaintainableObject, then there will be no parent to return, so will return a value of null
            </summary>
            <value> </value>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock.Items">
            <summary>
                Gets any child items, if no children exist then an empty list is returned
                <p />
                <b>NOTE</b>The list is a copy so modify the returned set will not
                be reflected in this instance
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock.MaintainableParent">
            <summary>
                Gets the maintainable parent, by recurring up the parent tree to find
                If this is a maintainable then it will return a reference to itself.
            </summary>
            <value> </value>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock.Name">
            <summary>
                Gets the name in the default locale
            </summary>
            <value> </value>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock.Names">
            <summary>
                Gets a list of names for this component - will return an empty list if no Names exist.
                <p />
                <b>NOTE:</b>The list is a copy so modifying the returned list will not
                be reflected in the IIdentifiableObject instance
            </summary>
            <value> first locale value it finds or null if there are none </value>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock.Parent">
            <summary>
                Gets the parent that this SdmxObject belongs to.
                If this is a Maintainable Object, then there will be no parent to return, so will return a value of null
            </summary>
            <value> </value>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock.StructureType">
            <summary>
                Gets the structure type of this component.
            </summary>
            <value> </value>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock.Uri">
            <summary>
                Gets the URI for this component, returns null if there is no URI.
                <p />
                URI describes where additional information can be found for this component, this is guaranteed to return
                a value if the structure is a <c>IMaintainableObject</c> and isExternalReference is true
            </summary>
            <value> </value>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock.Urn">
            <summary>
                Gets the URN for this component.  The URN is unique to this instance and is a computable generated value based on
                other attributes set within the component.
            </summary>
            <value> </value>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Builder.CategoryBuilder.CategoryMock.Org#Sdmxsource#Sdmx#Api#Model#Objects#Base#ISdmxObject#Parent">
            <summary>
                Gets the parent that this SdmxObject belongs to
                <p />
                If this is a Maintainable Object, then there will be no parent to return, so will return a value of null
            </summary>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.MeasureDimensionRepresentationEngine">
            <summary>
                The measure dimension representation engine.
            HACK: Creates a dummy codelist for all SDMX v2.1 DSD MeasureDimensions.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.MeasureDimensionRepresentationEngine.GetAllMeasureDimensionsWithoutCodelist">
            <summary>
                The SQL query for getting all measure dimensions without codelist.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.MeasureDimensionRepresentationEngine.UpdateComponentCodelist">
            <summary>
                The SQL update statement that updates a component's codelist.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.MeasureDimensionRepresentationEngine._database">
            <summary>
                The _database.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.MeasureDimensionRepresentationEngine._factory">
            <summary>
                The _factory.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.MeasureDimensionRepresentationEngine._importEngine">
            <summary>
                The _import engine.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.MeasureDimensionRepresentationEngine.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.MeasureDimensionRepresentationEngine"/> class.
            </summary>
            <param name="database">
            The database.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.MeasureDimensionRepresentationEngine.CreateDummyCodelistForAll">
            <summary>
                Create a dummy codelist for all SDMX v2.1 DSD MeasureDimensions.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.MeasureDimensionRepresentationEngine.PopulateConceptSchemePerMeasureDimension(System.Data.IDataReader,System.Collections.Generic.IDictionary{System.Int64,Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject})">
            <summary>
            Populates the concept scheme per measure dimension.
            </summary>
            <param name="reader">
            The reader.
            </param>
            <param name="conceptSchemesPerMeasureDimension">
            The concept schemes per measure dimension.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.MeasureDimensionRepresentationEngine.ConvertConceptSchemes(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Int64,Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject}})">
            <summary>
            Converts the concept schemes to code lists.
            </summary>
            <param name="state">
            The state.
            </param>
            <param name="conceptSchemesPerMeasureDimension">
            The concept schemes per measure dimension.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.MeasureDimensionRepresentationEngine.GetRetrievalManager(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Returns the retrieval manager.
            </summary>
            <param name="transactionalDatabase">
            The transactional database.
            </param>
            <returns>
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.Mutable.ISdmxMutableObjectRetrievalManager"/>.
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Model.DbTransactionState">
            <summary>
            The DB transaction state.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Model.DbTransactionState._connection">
            <summary>
            The _connection.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Model.DbTransactionState._transaction">
            <summary>
            The _transaction.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Model.DbTransactionState._database">
            <summary>
            The database
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Model.DbTransactionState.#ctor(System.Data.Common.DbTransaction,Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Model.DbTransactionState"/> class. 
            </summary>
            <param name="transaction">
                The transaction.
            </param>
            <param name="database">The database</param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Model.DbTransactionState.Create(System.Configuration.ConnectionStringSettings)">
            <summary>
            Create a <see cref="T:Estat.Sri.MappingStore.Store.Model.DbTransactionState"/>
            </summary>
            <param name="connectionStringSettings">
            The connection string settings.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.DbTransactionState"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Model.DbTransactionState.Create(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Create a <see cref="T:Estat.Sri.MappingStore.Store.Model.DbTransactionState"/>
            </summary>
            <param name="database">
            The database.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.DbTransactionState"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Model.DbTransactionState.ExecuteScalarFormat(System.String,System.Data.Common.DbParameter[])">
            <summary>
            Executes the <paramref name="query"/> with the specified <paramref name="parameters"/>
            </summary>
            <param name="query">
            The query format string.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <returns>
            The scalar <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Model.DbTransactionState.ExecuteNonQueryFormat(System.String,System.Data.Common.DbParameter[])">
            <summary>
            Executes the specified <paramref name="query"/> with the specified <paramref name="parameters"/>
            </summary>
            <param name="query">
            The query format string.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <returns>
            The number of affected records.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Model.DbTransactionState.ExecuteNonQueryFormat(System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter[]})">
            <summary>
            Executes the specified <paramref name="query"/> with the specified <paramref name="listParameters"/>
            </summary>
            <param name="query">
            The query format string.
            </param>
            <param name="listParameters">
            The list of Parameters.
            </param>
            <returns>
            The number of affected records.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Model.DbTransactionState.ExecuteReaderFormat(System.String,System.Action{System.Data.Common.DbDataReader},System.Data.Common.DbParameter[])">
            <summary>
            Executes the <paramref name="query"/> with the specified <paramref name="parameters"/> and runs the <paramref name="reader"/>
            </summary>
            <param name="query">
            The query format.
            </param>
            <param name="reader">
            The reader.
            </param>
            <param name="parameters">
            The parameters.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Model.DbTransactionState.RollBack">
            <summary>
              Rollback all pending changes and dispose the object.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Model.DbTransactionState.Commit">
            <summary>
                Commit all pending changes and dispose the object.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Model.DbTransactionState.Dispose">
            <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Model.DbTransactionState.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="dispose">
            If set to true dispose managed objects as well
            </param>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Model.DbTransactionState.Connection">
            <summary>
            Gets the connection.
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Model.DbTransactionState.Transaction">
            <summary>
            Gets the transaction.
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Model.DbTransactionState.Database">
            <summary>
            Gets the database
            </summary>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Helper.ValidationHelper">
            <summary>
                The validation helper.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Helper.ValidationHelper._log">
            <summary>
                The _log.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Helper.ValidationHelper.Validate``1(Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IItemSchemeObject{``0},System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Validate that the number of inserted codes equals the number of codes to insert.
            </summary>
            <param name="maintainable">
            The maintainable.
            </param>
            <param name="codeIds">
            The code ids.
            </param>
            <typeparam name="T">
            The item type
            </typeparam>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Helper.TextFormatTypesPool">
            <summary>
                A naive <see cref="T:Estat.Sri.MappingStore.Store.Engine.TextFormatTypesQueryEngine"/> pool
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Helper.TextFormatTypesPool._connectionStringMap">
            <summary>
                The _databases.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Helper.TextFormatTypesPool._databaseMap">
            <summary>
                The _databases.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Helper.TextFormatTypesPool.GetTextFormatQuery(System.Configuration.ConnectionStringSettings)">
            <summary>
            Returns a <see cref="T:Estat.Sri.MappingStore.Store.Engine.TextFormatTypesQueryEngine"/> instance for the specified
                <paramref name="connectionStringSettings"/>
            </summary>
            <param name="connectionStringSettings">
            The connection string settings.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Engine.TextFormatTypesQueryEngine"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Helper.TextFormatTypesPool.GetTextFormatQuery(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Returns a <see cref="T:Estat.Sri.MappingStore.Store.Engine.TextFormatTypesQueryEngine"/> instance for the specified <paramref name="database"/>
            </summary>
            <param name="database">
            The mapping store database
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Engine.TextFormatTypesQueryEngine"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Helper.TextFormatTypesPool.GetTextFormatQuery(Estat.Sri.MappingStore.Store.Model.DbTransactionState)">
            <summary>
            Returns a <see cref="T:Estat.Sri.MappingStore.Store.Engine.TextFormatTypesQueryEngine"/> instance for the specified <paramref name="state"/>
            </summary>
            <param name="state">The mapping store database</param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Engine.TextFormatTypesQueryEngine"/>.
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.TextFormatTypesQueryEngine">
            <summary>
                The text format types query engine.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.TextFormatTypesQueryEngine._log">
            <summary>
                The log.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.TextFormatTypesQueryEngine._insertTextFormat">
            <summary>
            The _insert text format
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.TextFormatTypesQueryEngine._dataTypeMap">
            <summary>
                The _data type map.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.TextFormatTypesQueryEngine._facetMap">
            <summary>
                The _facet map.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.TextFormatTypesQueryEngine.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.TextFormatTypesQueryEngine"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.TextFormatTypesQueryEngine.#ctor(System.Configuration.ConnectionStringSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.TextFormatTypesQueryEngine"/> class.
            </summary>
            <param name="connectionStringSettings">
            The connection string settings.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.TextFormatTypesQueryEngine.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.TextFormatTypesQueryEngine"/> class.
            </summary>
            <param name="mappingStoreDB">
            The mapping store DB.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.TextFormatTypesQueryEngine.#ctor(Estat.Sri.MappingStore.Store.Model.DbTransactionState)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.TextFormatTypesQueryEngine"/> class.
            </summary>
            <param name="state">The state.</param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.TextFormatTypesQueryEngine.GetDataTypeId(System.String)">
            <summary>
            Return the data type id for the specified <paramref name="value"/>
            </summary>
            <param name="value">
            The value.
            </param>
            <returns>
            The data type id; otherwise null
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.TextFormatTypesQueryEngine.GetFacetTypeId(System.String)">
            <summary>
            Return the facet type id for the specified <paramref name="value"/>
            </summary>
            <param name="value">
            The value.
            </param>
            <returns>
            The facet type id; otherwise null
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.TextFormatTypesQueryEngine.InsertTextFormats(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Int64,Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.ITextFormat}})">
            <summary>
            Insert text formats.
            </summary>
            <param name="state">
            The state.
            </param>
            <param name="formats">
            The formats.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.TextFormatTypesQueryEngine.AddFacet``1(System.Nullable{``0},System.String,System.Collections.Generic.Stack{System.Collections.Generic.KeyValuePair{System.Int64,System.String}})">
            <summary>
            Add facet to the specified <paramref name="facets"/>
            </summary>
            <param name="value">
            The value.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="facets">
            The facets stack.
            </param>
            <typeparam name="T">
            The non-null-able type. Such as <c>structs</c>.
            </typeparam>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.TextFormatTypesQueryEngine.AddFacet(Org.Sdmxsource.Sdmx.Api.Constants.TertiaryBool,System.String,System.Collections.Generic.Stack{System.Collections.Generic.KeyValuePair{System.Int64,System.String}})">
            <summary>
             Add facet to the specified <paramref name="facets"/>
            </summary>
            <param name="value">
            The value.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="facets">
            The facets.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.TextFormatTypesQueryEngine.AddFacet(System.String,System.String,System.Collections.Generic.Stack{System.Collections.Generic.KeyValuePair{System.Int64,System.String}})">
            <summary>
             Add facet to the specified <paramref name="facets"/>
            </summary>
            <param name="value">
            The value.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="facets">
            The facets.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.TextFormatTypesQueryEngine.BuildTextFormatMaps(System.Data.IDbConnection,System.Data.IDbTransaction)">
            <summary>
            The build text format maps.
            </summary>
            <param name="connection">
            The connection.
            </param>
            <param name="transaction">
            The transaction.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.TextFormatTypesQueryEngine.Init(Estat.Sri.MappingStoreRetrieval.Manager.Database,System.Data.IDbTransaction)">
            <summary>
            Initialize this object
            </summary>
            <param name="database">The database.</param>
            <param name="transaction">The transaction.</param>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.LocalisedStringInsertEngine">
            <summary>
                The class responsible for adding records to <c>LOCALISED_STRING</c>.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.LocalisedStringInsertEngine._insertLocalisedString">
            <summary>
            The _insert localized string
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.LocalisedStringInsertEngine.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.LocalisedStringInsertEngine"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.LocalisedStringInsertEngine.InsertForArtefact(System.Int64,Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.INameableObject,Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Insert a record with the values from <paramref name="maintainable" /> to <c>LOCALISED_STRING</c> for an artifact with the specified
            <paramref name="artefactPrimaryKey" />
            </summary>
            <param name="artefactPrimaryKey">The artifact primary key.</param>
            <param name="maintainable">The maintainable.</param>
            <param name="database">The database.</param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.LocalisedStringInsertEngine.InsertForItem(System.Int64,Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.INameableObject,Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Insert a record with the values from <paramref name="nameableObject" /> to <c>LOCALISED_STRING</c> for an item with the specified
            <paramref name="itemPrimaryKey" />
            </summary>
            <param name="itemPrimaryKey">The item primary key.</param>
            <param name="nameableObject">The nameable Object.</param>
            <param name="database">The database.</param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.LocalisedStringInsertEngine.GetLanguage(Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.ITextTypeWrapper)">
            <summary>
            Returns the normalized language.
            </summary>
            <param name="text">
            The text.
            </param>
            <returns>
            The normalized language.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.LocalisedStringInsertEngine.InsertCommon(Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.INameableObject,System.Data.Common.DbCommand)">
            <summary>
            Insert a record with the values from <paramref name="nameableObject"/> to <c>LOCALISED_STRING</c>
            </summary>
            <param name="nameableObject">
            The nameable object.
            </param>
            <param name="dbCommand">
            The DB command.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.LocalisedStringInsertEngine.InsertCommon(Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.ITextTypeWrapper,System.Data.IDbCommand,System.Data.IDataParameter,System.Data.IDataParameter)">
            <summary>
            Insert a record with the values from <paramref name="text"/> to <c>LOCALISED_STRING</c>
            </summary>
            <param name="text">
            The text.
            </param>
            <param name="dbCommand">
            The DB command.
            </param>
            <param name="languageParameter">
            The language Parameter.
            </param>
            <param name="textParameter">
            The text Parameter.
            </param>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.DataflowImportEngine">
            <summary>
            The dataflow import engine.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.DataflowImportEngine._log">
            <summary>
                The log.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.DataflowImportEngine._artefactStoredProcedure">
            <summary>
            The artefact stored procedure
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.DataflowImportEngine.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.DataflowImportEngine"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.DataflowImportEngine.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.DataflowImportEngine"/> class. 
            </summary>
            <param name="database">
            The mapping store database instance.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.DataflowImportEngine.Insert(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.DataStructure.IDataflowObject)">
            <summary>
            Insert the specified <paramref name="maintainable"/> to the mapping store with <paramref name="state"/>
            </summary>
            <param name="state">
            The MAPPING STORE connection and transaction state
            </param>
            <param name="maintainable">
            The maintainable.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.DataflowImportEngine.BuildErrorMessage(Org.Sdmxsource.Sdmx.Api.Model.Objects.DataStructure.IDataflowObject,Estat.Sri.MappingStore.Store.Model.ArtefactFinalStatus)">
            <summary>
            Build the error message based on the specified <paramref name="dsdStatus"/>.
            </summary>
            <param name="maintainable">
            The maintainable.
            </param>
            <param name="dsdStatus">
            The <c>DSD</c> status
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ImportMessage"/>.
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.DataProviderSchemeImportEngine">
            <summary>
                The data provider scheme import engine.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.DataProviderSchemeImportEngine._log">
            <summary>
                The log.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.DataProviderSchemeImportEngine._storedProcedures">
            <summary>
            The _stored procedures
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.DataProviderSchemeImportEngine.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.DataProviderSchemeImportEngine"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.DataProviderSchemeImportEngine.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.DataProviderSchemeImportEngine"/> class. 
            </summary>
            <param name="database">
            The mapping store database instance.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.DataProviderSchemeImportEngine.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database,Estat.Sri.MappingStore.Store.Factory.IItemImportFactory{Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IDataProvider})">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.DataProviderSchemeImportEngine"/> class. 
            </summary>
            <param name="database">
            The mapping store database instance.
            </param>
            <param name="factory">
            The <see cref="T:Estat.Sri.MappingStore.Store.Engine.IItemImportEngine`1"/> factory. Optional
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.DataProviderSchemeImportEngine.Insert(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IDataProviderScheme)">
            <summary>
            Insert the specified <paramref name="maintainable"/> to the mapping store with <paramref name="state"/>
            </summary>
            <param name="state">
            The MAPPING STORE connection and transaction state
            </param>
            <param name="maintainable">
            The maintainable.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus"/>.
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.DataProviderImportEngine">
            <summary>
            The concept import engine.
            </summary>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.ConceptImportEngine">
            <summary>
            The concept import engine.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ConceptImportEngine.GetParentItem(Org.Sdmxsource.Sdmx.Api.Model.Objects.ConceptScheme.IConceptObject)">
            <summary>
            Gets the parent item.
            </summary>
            <param name="item">The item.</param>
            <returns>The parent item if <paramref name="item"/> has one; otherwise null.</returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.ImportMessageStatus">
            <summary>
            The import message status.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.ImportMessageStatus.Success">
            <summary>
            The success.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.ImportMessageStatus.Warning">
            <summary>
            The warning.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.ImportMessageStatus.Error">
            <summary>
            The error.
            </summary>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Factory.NameableImportFactory`2">
            <summary>
            The Nameable import factory.
            </summary>
            <typeparam name="T">The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.INameableObject"/> type</typeparam>
            <typeparam name="TProc">The type of the procedure.</typeparam>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Factory.NameableImportFactory`2._customFactory">
            <summary>
            The _custom factory.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.NameableImportFactory`2.#ctor(System.Func{Estat.Sri.MappingStore.Store.Engine.INameableImportEngine{`0,`1}})">
            <summary>
            Initializes a new instance of the <see cref="!:NameableImportFactory&lt;T&gt;"/> class.
            </summary>
            <param name="customFactory">
            The custom factory.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.NameableImportFactory`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Factory.NameableImportFactory`2"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Factory.NameableImportFactory`2.GetNameableImport">
            <summary>
                Returns the <see cref="T:Estat.Sri.MappingStore.Store.Engine.INameableImportEngine`2"/>.
            </summary>
            <returns>
                The <see cref="T:Estat.Sri.MappingStore.Store.Engine.INameableImportEngine`2"/>.
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.StructureMapEngine">
            <summary>
                The structure map engine.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.StructureMapEngine.WriteItemMaps(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.Mapping.IStructureMapObject,System.Int64)">
            <summary>
            Writes the item maps.
            </summary>
            <param name="state">
            The state.
            </param>
            <param name="schemaMap">
            The schema map.
            </param>
            <param name="primaryKey">
            The primary key.
            </param>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.CategorisationImportEngine">
            <summary>
                The categorisation import engine.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.CategorisationImportEngine._log">
            <summary>
                The log.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.CategorisationImportEngine._storedProcedures">
            <summary>
            The _stored procedures
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.CategorisationImportEngine._categoryBuilder">
            <summary>
                The _category builder.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.CategorisationImportEngine._categoryImport">
            <summary>
                The _category import.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.CategorisationImportEngine.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.CategorisationImportEngine"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.CategorisationImportEngine.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.CategorisationImportEngine"/> class.
            </summary>
            <param name="connectionStringSettings">
            The connection String Settings.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.CategorisationImportEngine.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database,Estat.Sri.MappingStore.Store.Factory.IItemImportFactory{Org.Sdmxsource.Sdmx.Api.Model.Objects.CategoryScheme.ICategoryObject})">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.CategorisationImportEngine"/> class.
            </summary>
            <param name="connectionStringSettings">
            The connection String Settings.
            </param>
            <param name="categoryFactory">
            The category Factory.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.CategorisationImportEngine.Insert(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.CategoryScheme.ICategorisationObject)">
            <summary>
            Insert the specified <paramref name="maintainable"/> to the mapping store with <paramref name="state"/>
            </summary>
            <param name="state">
            The MAPPING STORE connection and transaction state
            </param>
            <param name="maintainable">
            The maintainable.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.CategorisationImportEngine.Insert(System.Collections.Generic.IEnumerable{Org.Sdmxsource.Sdmx.Api.Model.Objects.CategoryScheme.ICategorisationObject})">
            <summary>
            Insert the specified <paramref name="maintainables"/> to the mapping store.
            </summary>
            <param name="maintainables">
            The maintainable.
            </param>
            <returns>
            The <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.CategorisationImportEngine.BuildWarningMessage(Org.Sdmxsource.Sdmx.Api.Model.Objects.CategoryScheme.ICategorisationObject,System.String)">
            <summary>
            Build warning message.
            </summary>
            <param name="maintainable">
            The maintainable.
            </param>
            <param name="text">
            The text.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.CategorisationImportEngine.ExistsCategorisation(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Int64,System.Int64)">
            <summary>
            Check if it exists categorisation between artefact with <paramref name="artefactId"/> and category with
                <paramref name="categoryId"/>
                .
            </summary>
            <param name="state">
            The state.
            </param>
            <param name="artefactId">
            The artefact id.
            </param>
            <param name="categoryId">
            The category id.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.CategorisationImportEngine.GetCategoryPrimaryKey(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.CategoryScheme.ICategorisationObject,Estat.Sri.MappingStore.Store.Model.ItemSchemeFinalStatus)">
            <summary>
            Returns the referenced category primary key. If the category does not exist it will be added.
            </summary>
            <param name="state">
            The state.
            </param>
            <param name="maintainable">
            The maintainable.
            </param>
            <param name="categoryScheme">
            The category scheme.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ItemStatus"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.CategorisationImportEngine.InsertInternal(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.CategoryScheme.ICategorisationObject,Estat.Sri.MappingStore.Store.Engine.StructureCache)">
            <summary>
            Insert the specified <paramref name="maintainable"/> to mapping store <c>CATEGORISATION</c> table
            </summary>
            <param name="state">
            The state.
            </param>
            <param name="maintainable">
            The maintainable.
            </param>
            <param name="cache">
            The cached Dataflow and Category Scheme
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus"/>.
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Builder.CategorisationBuilder">
            <summary>
            The categorisation builder.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Builder.CategorisationBuilder.Build(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference,Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference)">
            <summary>
            Return a <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.CategoryScheme.ICategorisationObject"/>  with the specified <paramref name="categoryReference"/> and <paramref name="structureReference"/>
            </summary>
            <param name="categoryReference">
            The category reference.
            </param>
            <param name="structureReference">
            The structure reference.
            </param>
            <returns>
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.CategoryScheme.ICategorisationObject"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Builder.CategorisationBuilder.BuildHash(System.String)">
            <summary>
            Builds the hash.
            </summary>
            <param name="text">The text.</param>
            <returns>The hash of the input </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Model.ImportMessagesEventArgs">
            <summary>
            The import messages event arguments.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Model.ImportMessagesEventArgs._globalId">
            <summary>
            The _global id.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Model.ImportMessagesEventArgs._message">
            <summary>
            The _message.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Model.ImportMessagesEventArgs.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Model.ImportMessagesEventArgs"/> class. 
            </summary>
            <param name="globalId">
            The artefact global Id.
            </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Model.ImportMessagesEventArgs.GlobalId">
            <summary>
            Gets the artefact global id.
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Model.ImportMessagesEventArgs.Message">
            <summary>
            Gets the message.
            </summary>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Model.ImportMessage">
            <summary>
            The import message.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Model.ImportMessage._message">
            <summary>
            The _message.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Model.ImportMessage._structureReference">
            <summary>
            The _structure reference.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Model.ImportMessage._status">
            <summary>
            The _success.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Model.ImportMessage.#ctor(Estat.Sri.MappingStore.Store.ImportMessageStatus,Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Model.ImportMessage"/> class.
            </summary>
            <param name="status">
                The status of the import.
            </param>
            <param name="structureReference">
                The structure reference.
            </param>
            <param name="message">
                The message.
            </param>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Model.ImportMessage.Message">
            <summary>
            Gets the message.
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Model.ImportMessage.StructureReference">
            <summary>
            Gets the structure reference.
            </summary>
        </member>
        <member name="P:Estat.Sri.MappingStore.Store.Model.ImportMessage.Status">
            <summary>
            Gets the success.
            </summary>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.ContentConstraintImportEngine">
            <summary>
            The content constraint import engine.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.ContentConstraintImportEngine._validateStatusEngine">
            <summary>
            The validate status engine
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ContentConstraintImportEngine.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.ContentConstraintImportEngine"/> class. 
            </summary>
            <param name="database">
            The mapping store database instance.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ContentConstraintImportEngine.Insert(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.Registry.IContentConstraintObject)">
            <summary>
            Insert the specified <paramref name="maintainable"/> to the mapping store with <paramref name="state"/>
            </summary>
            <param name="state">
            The MAPPING STORE connection and transaction state
            </param>
            <param name="maintainable">
            The maintainable.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ContentConstraintImportEngine.InsertCubeRegion(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.Registry.ICubeRegion,Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus,System.Boolean)">
            <summary>
            Inserts the cube region.
            </summary>
            <param name="state">The state.</param>
            <param name="cubeRegion">The cube region.</param>
            <param name="artefactStatus">The artefact status.</param>
            <param name="isInclude">if set to <c>true</c> [is include].</param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ContentConstraintImportEngine.InsertValues(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Boolean,System.Collections.Generic.IEnumerable{System.Tuple{System.Int64,Org.Sdmxsource.Sdmx.Api.Model.Objects.Registry.IKeyValues}})">
            <summary>
            Inserts the values.
            </summary>
            <param name="state">The state.</param>
            <param name="isInclude">if set to <c>true</c> [is include].</param>
            <param name="keyValuesWithId">The key values with identifier.</param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ContentConstraintImportEngine.InsertKeyValues(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Boolean,System.Int64,System.Collections.Generic.ICollection{Org.Sdmxsource.Sdmx.Api.Model.Objects.Registry.IKeyValues},Estat.Sri.MappingStoreRetrieval.Constants.SdmxComponentType)">
            <summary>
            Inserts the key values.
            </summary>
            <param name="state">The state.</param>
            <param name="isInclude">if set to <c>true</c> [is include].</param>
            <param name="cubeRegionPrimaryKey">The cube region primary key.</param>
            <param name="keyValuesCollection">The key values collection.</param>
            <param name="sdmxComponentType">Type of the SDMX component.</param>
            <returns>
            The list of primary key, <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Registry.IKeyValues"/> and <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IComponent"/>
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.ContentConstraintImportEngine.InsertContentConstraintAttachment(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.Registry.IContentConstraintObject,Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus)">
            <summary>
            Inserts the content constraint attachment.
            </summary>
            <param name="state">
                The state.
            </param>
            <param name="maintainable">
                The maintainable.
            </param>
            <param name="artefactStatus">
                The artefact status.
            </param>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.AgencySchemeImportEngine">
            <summary>
                The concept scheme import engine.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.AgencySchemeImportEngine._log">
            <summary>
                The log.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.AgencySchemeImportEngine._storedProcedures">
            <summary>
            The _stored procedures
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.AgencySchemeImportEngine.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.AgencySchemeImportEngine"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.AgencySchemeImportEngine.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database)">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.AgencySchemeImportEngine"/> class. 
            </summary>
            <param name="database">
            The mapping store database instance.
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.AgencySchemeImportEngine.#ctor(Estat.Sri.MappingStoreRetrieval.Manager.Database,Estat.Sri.MappingStore.Store.Factory.IItemImportFactory{Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IAgency})">
            <summary>
            Initializes a new instance of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.AgencySchemeImportEngine"/> class. 
            </summary>
            <param name="database">
            The mapping store database instance.
            </param>
            <param name="factory">
            The <see cref="T:Estat.Sri.MappingStore.Store.Engine.IItemImportEngine`1"/> factory. Optional
            </param>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.AgencySchemeImportEngine.Insert(Estat.Sri.MappingStore.Store.Model.DbTransactionState,Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IAgencyScheme)">
            <summary>
            Insert the specified <paramref name="maintainable"/> to the mapping store with <paramref name="state"/>
            </summary>
            <param name="state">
            The MAPPING STORE connection and transaction state
            </param>
            <param name="maintainable">
            The maintainable.
            </param>
            <returns>
            The <see cref="T:Estat.Sri.MappingStore.Store.Model.ArtefactImportStatus"/>.
            </returns>
        </member>
        <member name="T:Estat.Sri.MappingStore.Store.Engine.CategoryImportEngine">
            <summary>
            The category import engine.
            </summary>
        </member>
        <member name="F:Estat.Sri.MappingStore.Store.Engine.CategoryImportEngine._storedProcedures">
            <summary>
            The _stored procedures
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.CategoryImportEngine.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Estat.Sri.MappingStore.Store.Engine.CategoryImportEngine"/> class.
            </summary>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.CategoryImportEngine.Insert(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Collections.Generic.IEnumerable{Org.Sdmxsource.Sdmx.Api.Model.Objects.CategoryScheme.ICategoryObject},System.Int64)">
            <summary>
            Insert the specified <paramref name="items"/> to the mapping store with <paramref name="state"/>
            </summary>
            <param name="state">
                The MAPPING STORE connection and transaction state
            </param>
            <param name="items">
                The items.
            </param>
            <param name="parentArtefact"> The primary key of the parent artefact.</param>
            <returns>
            The <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </returns>
        </member>
        <member name="M:Estat.Sri.MappingStore.Store.Engine.CategoryImportEngine.InsertCategory(Estat.Sri.MappingStore.Store.Model.DbTransactionState,System.Int64,System.Int64,Org.Sdmxsource.Sdmx.Api.Model.Objects.CategoryScheme.ICategoryObject)">
            <summary>
            Insert the specified <paramref name="categoryObject"/> to mapping store
            </summary>
            <param name="state">
            The mapping store connection state.
            </param>
            <param name="parentArtefact">
            The parent artefact.
            </param>
            <param name="parentCategoryID">
            The parent category id.
            </param>
            <param name="categoryObject">
            The category object.
            </param>
            <returns>
            The inserted record primary key. <c>CATEGORY.CAT_ID</c>
            </returns>
        </member>
    </members>
</doc>
